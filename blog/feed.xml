<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>gonzedge.com</title>
  <subtitle>Adventures of a software development generalist</subtitle>
  <id>https://www.gonzedge.com/blog</id>
  <link href="https://www.gonzedge.com/blog"/>
  <link href="https://www.gonzedge.com/blog/feed.xml" rel="self"/>
  <updated>2020-07-25T20:00:00-04:00</updated>
  <author>
    <name>Edgar Gonzalez</name>
  </author>
  <entry>
    <title>Using certbot to add Let's Encrypt certificate on Heroku</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2020/07/26/using-certbot-to-add-lets-encrypt-certificate-on-heroku.html"/>
    <id>https://www.gonzedge.com/blog/2020/07/26/using-certbot-to-add-lets-encrypt-certificate-on-heroku.html</id>
    <published>2020-07-25T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;Ever since Google announced in 2017 that they would be prioritizing sites with HTTPS for SEO, I knew I had to make sure this blog had the necessary setup. I initially procrastinated a bit because I thought I was going to have to do some research to find the latest and greatest in terms of trusted certificate authorities. Once I decided to put this in place my research wasn‚Äôt long at all.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href="https://letsencrypt.org/"&gt;Let‚Äôs Encrypt&lt;/a&gt;, a&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;free, automated, and open certificate authority‚Ä¶ provided by the ISRG&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well that gives me peace of mind. Further investigation then pointed me to &lt;a href="https://certbot.eff.org/"&gt;&lt;code&gt;certbot&lt;/code&gt;&lt;/a&gt;, a&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;free, open source software tool for automatically using Let‚Äôs Encrypt certificates on manually-administrated websites to enable HTTPS&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nice üòå, that‚Äôs perfect.&lt;/p&gt;

&lt;p&gt;Let‚Äôs get‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;p&gt;Ever since Google announced in 2017 that they would be prioritizing sites with HTTPS for SEO, I knew I had to make sure this blog had the necessary setup. I initially procrastinated a bit because I thought I was going to have to do some research to find the latest and greatest in terms of trusted certificate authorities. Once I decided to put this in place my research wasn&amp;rsquo;t long at all.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href="https://letsencrypt.org/"&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt;, a&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;free, automated, and open certificate authority&amp;hellip; provided by the ISRG&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well that gives me peace of mind. Further investigation then pointed me to &lt;a href="https://certbot.eff.org/"&gt;&lt;code&gt;certbot&lt;/code&gt;&lt;/a&gt;, a&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;free, open source software tool for automatically using Let‚Äôs Encrypt certificates on manually-administrated websites to enable HTTPS&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nice üòå, that&amp;rsquo;s perfect.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s get started. Assuming you have &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; installed, then:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install &lt;code&gt;certbot&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;certbot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Generate the certificate for your website, fill in everything it asks you (I had to use sudo in front of this command even though it seems to Just Work‚Ñ¢ for other people in the interwebz; not sure why but hey, it works ü§∑üèª‚Äç‚ôÇÔ∏è):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;certbot certonly &lt;span class="nt"&gt;--manual&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &amp;lt;www.your-domain.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that I put the fully qualified domain name above. This does not issue wildcard certificates.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, it&amp;rsquo;ll ask you to create a new file to verify you actually own the domain. Something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Create a file containing just this data:

&amp;lt;some-characters&amp;gt;.&amp;lt;more-characters&amp;gt;

And make it available on your web server at this URL:

http://&amp;lt;www.your-domain.com&amp;gt;/.well-known/acme-challenge/&amp;lt;some-characters&amp;gt;

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Press Enter to Continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In another terminal tab, create the file and commit it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;some-characters&amp;gt;.&amp;lt;more-characters&amp;gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt;/.well-known/acme-challenge/&amp;lt;some-characters&amp;gt;
git add &lt;span class="nt"&gt;-A&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt;/.well-known
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s1"&gt;'Add SSL certificate'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make it available in your app:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git remote add heroku git@heroku.com:&amp;lt;your-app-name&amp;gt;.git
git push heroku master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Back in the &lt;code&gt;certbot&lt;/code&gt; prompt, press Enter. You should see something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/&amp;lt;www.your-domain.com&amp;gt;/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/&amp;lt;www.your-domain.com&amp;gt;/privkey.pem
   Your cert will expire on &amp;lt;YYYY-MM-DD&amp;gt;. To obtain a new or tweaked
   version of this certificate &lt;span class="k"&gt;in &lt;/span&gt;the future, simply run certbot
   again. To non-interactively renew &lt;span class="k"&gt;*&lt;/span&gt;all&lt;span class="k"&gt;*&lt;/span&gt; of your certificates, run
   &lt;span class="s2"&gt;"certbot renew"&lt;/span&gt;
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let&lt;span class="s1"&gt;'s Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On to the Heroku part of the puzzle. Make sure you have the heroku CLI installed:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;brew tap heroku/brew
brew &lt;span class="nb"&gt;install &lt;/span&gt;heroku
&lt;span class="c"&gt;# Or if you already have it, might as well upgrade it:&lt;/span&gt;
brew upgrade heroku/brew/heroku
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;List your certificates (you should have nothing here the first time):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;heroku certs:info &lt;span class="nt"&gt;-a&lt;/span&gt; &amp;lt;your-app-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add your new certificate:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;heroku certs:add /etc/letsencrypt/live/&amp;lt;www.your-domain.com&amp;gt;/fullchain.pem /etc/letsencrypt/live/&amp;lt;www.your-domain.com&amp;gt;/privkey.pem &lt;span class="nt"&gt;-a&lt;/span&gt; &amp;lt;your-app-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You&amp;rsquo;re good to go! You are now a certified ~~hacker~~ domain owner üîí&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Renewing your certificate&lt;/h3&gt;

&lt;p&gt;Something interesting happened to me here, probably because I manually generated the certificate via &lt;code&gt;certbot&lt;/code&gt;&amp;hellip; &lt;code&gt;certbot renew&lt;/code&gt; didn&amp;rsquo;t work. Thankfully, I found an easy solution - just run through steps 2‚Äì7 from before and then:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;List your certificates (you should have something expiring soon here):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;heroku certs:info &lt;span class="nt"&gt;-a&lt;/span&gt; &amp;lt;your-app-name&amp;gt;
&lt;span class="c"&gt;# Fetching SSL certificate &amp;lt;certificate-name&amp;gt; info for ‚¨¢ &amp;lt;your-app-name&amp;gt;... done&lt;/span&gt;
&lt;span class="c"&gt;# Certificate details:&lt;/span&gt;
&lt;span class="c"&gt;# Common Name(s): &amp;lt;www.your-domain.com&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;# Expires At:     2020-07-31 04:40 UTC&lt;/span&gt;
&lt;span class="c"&gt;# Issuer:         /C=US/O=Let's Encrypt/CN=Let's Encrypt Authority X3&lt;/span&gt;
&lt;span class="c"&gt;# Starts At:      2020-05-02 04:40 UTC&lt;/span&gt;
&lt;span class="c"&gt;# Subject:        /CN=&amp;lt;www.your-domain.com&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;# SSL certificate is verified by a root authority.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update your certificate (yep - it&amp;rsquo;ll be on the same path as the previous one but I swear it will be the new one!):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;heroku certs:update /etc/letsencrypt/live/&amp;lt;www.your-domain.com&amp;gt;/fullchain.pem /etc/letsencrypt/live/&amp;lt;www.your-domain.com&amp;gt;/privkey.pem &lt;span class="nt"&gt;-a&lt;/span&gt; &amp;lt;your-app-name&amp;gt;
&lt;span class="c"&gt;# Resolving trust chain... done&lt;/span&gt;
&lt;span class="c"&gt;#  ‚ñ∏    Potentially Destructive Action&lt;/span&gt;
&lt;span class="c"&gt;#  ‚ñ∏    This command will change the certificate of endpoint diplodocus-55595 from ‚¨¢ &amp;lt;your-app-name&amp;gt;.&lt;/span&gt;
&lt;span class="c"&gt;#  ‚ñ∏    To proceed, type &amp;lt;your-app-name&amp;gt; or re-run this command with --confirm &amp;lt;your-app-name&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;# &amp;gt; (type in your-app-name)&lt;/span&gt;
&lt;span class="c"&gt;# Updating SSL certificate diplodocus-55595 for ‚¨¢ &amp;lt;your-app-name&amp;gt;... done&lt;/span&gt;
&lt;span class="c"&gt;# Updated certificate details:&lt;/span&gt;
&lt;span class="c"&gt;# Common Name(s): &amp;lt;www.your-domain.com&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;# Expires At:     2020-10-24 19:51 UTC&lt;/span&gt;
&lt;span class="c"&gt;# Issuer:         /C=US/O=Let's Encrypt/CN=Let's Encrypt Authority X3&lt;/span&gt;
&lt;span class="c"&gt;# Starts At:      2020-07-26 19:51 UTC&lt;/span&gt;
&lt;span class="c"&gt;# Subject:        /CN=&amp;lt;www.your-domain.com&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;# SSL certificate is verified by a root authority.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Done! You are, once again, certified üèÖ&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>Ruby performance: #attr_accessor vs. method definition</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2018/02/19/ruby-performance-attr-accessor-vs-def-method.html"/>
    <id>https://www.gonzedge.com/blog/2018/02/19/ruby-performance-attr-accessor-vs-def-method.html</id>
    <published>2018-02-18T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;I‚Äôve been digging a lot into &lt;a href="http://gonzedge.com/blog/2018/02/11/chasing-performance-degradations-with-ruby-benchmarks-and-memory-profiler.html"&gt;Ruby performance&lt;/a&gt; &lt;a href="http://gonzedge.com/blog/2018/02/15/ruby-performance-hash-has-key-vs-square-brackets.html"&gt;lately&lt;/a&gt; and this much digging has taken me into some very interesting corners of Rubyland. My latest surprise has been the difference between defining attribute methods via the &lt;code&gt;attr_accessor&lt;/code&gt; &lt;a href="https://ruby-doc.org/core-2.5.0/Module.html#method-i-attr_accessor"&gt;provided language construct&lt;/a&gt; (as well as &lt;code&gt;attr_reader&lt;/code&gt; and &lt;code&gt;attr_writer&lt;/code&gt;) vs. defining them yourself (as in &lt;code&gt;def attribute&lt;/code&gt; and &lt;code&gt;def attribute=&lt;/code&gt;). Here‚Äôs what I ran into‚Ä¶&lt;/p&gt;

&lt;p&gt;I created two simple classes with identical interfaces. The only difference between the two is how we are defining access to set and get the &lt;code&gt;@value&lt;/code&gt; attribute in each:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestClassAttrAccessor&lt;/span&gt;
  &lt;span class="nb"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:value&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="vi"&gt;@value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestClassDefMethod&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="vi"&gt;@value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;p&gt;I&amp;rsquo;ve been digging a lot into &lt;a href="http://gonzedge.com/blog/2018/02/11/chasing-performance-degradations-with-ruby-benchmarks-and-memory-profiler.html"&gt;Ruby performance&lt;/a&gt; &lt;a href="http://gonzedge.com/blog/2018/02/15/ruby-performance-hash-has-key-vs-square-brackets.html"&gt;lately&lt;/a&gt; and this much digging has taken me into some very interesting corners of Rubyland. My latest surprise has been the difference between defining attribute methods via the &lt;code&gt;attr_accessor&lt;/code&gt; &lt;a href="https://ruby-doc.org/core-2.5.0/Module.html#method-i-attr_accessor"&gt;provided language construct&lt;/a&gt; (as well as &lt;code&gt;attr_reader&lt;/code&gt; and &lt;code&gt;attr_writer&lt;/code&gt;) vs. defining them yourself (as in &lt;code&gt;def attribute&lt;/code&gt; and &lt;code&gt;def attribute=&lt;/code&gt;). Here&amp;rsquo;s what I ran into&amp;hellip;&lt;/p&gt;

&lt;p&gt;I created two simple classes with identical interfaces. The only difference between the two is how we are defining access to set and get the &lt;code&gt;@value&lt;/code&gt; attribute in each:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestClassAttrAccessor&lt;/span&gt;
  &lt;span class="nb"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:value&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="vi"&gt;@value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestClassDefMethod&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="vi"&gt;@value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;value&lt;/span&gt;
    &lt;span class="vi"&gt;@value&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="vi"&gt;@value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I built a script using good ol&amp;rsquo; &lt;a href="https://github.com/evanphx/benchmark-ips"&gt;benchmark-ips&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Benchmark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ips&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;with_attr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;TestClassAttrAccessor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="n"&gt;with_method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;TestClassDefMethod&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="s1"&gt;'attr_accessor'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;with_attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;with_attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;value&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="s1"&gt;'def method'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;with_method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;with_method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;value&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;compare!&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And, to my surprise, these were the results:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Comparison:
       attr_accessor:  7039680.3 i/s
          def method:  5720331.2 i/s - 1.23x  slower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yeah&amp;hellip; I guess &lt;code&gt;1.23x&lt;/code&gt; is not that much of a difference, but similar to &lt;a href="http://gonzedge.com/blog/2018/02/15/ruby-performance-hash-has-key-vs-square-brackets.html"&gt;&lt;code&gt;#has_key?&lt;/code&gt; vs. &lt;code&gt;#[]&lt;/code&gt;&lt;/a&gt; this results in approximately &lt;strong&gt;&lt;em&gt;1.3 million more&lt;/em&gt;&lt;/strong&gt; iterations per second, which becomes significant when building tries from large dictionaries.&lt;/p&gt;

&lt;p&gt;Regardless, I&amp;rsquo;ll take it. From now on, I&amp;rsquo;ll use &lt;code&gt;attr_accessor :&amp;lt;attribute&amp;gt;&lt;/code&gt; instead of &lt;code&gt;def &amp;lt;attribute&amp;gt;&lt;/code&gt; whenever possible.&lt;/p&gt;

&lt;p&gt;Also, I guess it may be time for me to get a slogan:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;gonzedge: optimizing software 1.3 million iterations per second at a time&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hmm, doesn&amp;rsquo;t really have a nice ring to it üòï&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I didn&amp;rsquo;t dig into it much, but I&amp;rsquo;m pretty sure it has to do with the fact that &lt;code&gt;attr_accessor&lt;/code&gt; defines the methods via the &lt;a href="https://github.com/ruby/ruby/blob/4651ef77d2f434fe113b9c65adf143bc0650a6ca/object.c#L2367"&gt;&lt;code&gt;rb_attr&lt;/code&gt; method in C&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Running a similar benchmark in Ruby 2.4.0, and there was a bigger gap:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Comparison:
       attr_accessor:  6327686.3 i/s
          def method:  3932535.7 i/s - 1.61x  slower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby performance: Hash's #has_key? vs. #[] (square brackets)</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2018/02/15/ruby-performance-hash-has-key-vs-square-brackets.html"/>
    <id>https://www.gonzedge.com/blog/2018/02/15/ruby-performance-hash-has-key-vs-square-brackets.html</id>
    <published>2018-02-14T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;During my time last year developing performance improvements for &lt;a href="https://github.com/gonzedge/rambling-trie"&gt;Rambling Trie&lt;/a&gt;, I stumbled into something quite interesting that happens with Ruby‚Äôs &lt;code&gt;Hash&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;A commonly used method from the &lt;code&gt;Hash&lt;/code&gt; interface is &lt;code&gt;#has_key?&lt;/code&gt; which tells you if the &lt;code&gt;Hash&lt;/code&gt; in question contains a particular key. Rambling Trie‚Äôs underlying data structure is an n-ary tree backed by a &lt;code&gt;Hash&lt;/code&gt; where each key is the letter corresponding to a child and each value is the &lt;code&gt;Node&lt;/code&gt; that corresponds to that letter. As you might imagine, &lt;code&gt;#has_key?&lt;/code&gt; is a common operation called throughout the gem implementation.&lt;/p&gt;

&lt;p&gt;To my surprise, while running some &lt;a href="https://ruby-doc.org/stdlib-2.4.0/libdoc/benchmark/rdoc/Benchmark.html"&gt;Ruby benchmarks&lt;/a&gt; I noticed that accessing the key with &lt;code&gt;#[]&lt;/code&gt; and verifying if it was &lt;code&gt;nil&lt;/code&gt; instead of calling &lt;code&gt;#has_key?&lt;/code&gt; lowered the time it took‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;p&gt;During my time last year developing performance improvements for &lt;a href="https://github.com/gonzedge/rambling-trie"&gt;Rambling Trie&lt;/a&gt;, I stumbled into something quite interesting that happens with Ruby&amp;rsquo;s &lt;code&gt;Hash&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;A commonly used method from the &lt;code&gt;Hash&lt;/code&gt; interface is &lt;code&gt;#has_key?&lt;/code&gt; which tells you if the &lt;code&gt;Hash&lt;/code&gt; in question contains a particular key. Rambling Trie&amp;rsquo;s underlying data structure is an n-ary tree backed by a &lt;code&gt;Hash&lt;/code&gt; where each key is the letter corresponding to a child and each value is the &lt;code&gt;Node&lt;/code&gt; that corresponds to that letter. As you might imagine, &lt;code&gt;#has_key?&lt;/code&gt; is a common operation called throughout the gem implementation.&lt;/p&gt;

&lt;p&gt;To my surprise, while running some &lt;a href="https://ruby-doc.org/stdlib-2.4.0/libdoc/benchmark/rdoc/Benchmark.html"&gt;Ruby benchmarks&lt;/a&gt; I noticed that accessing the key with &lt;code&gt;#[]&lt;/code&gt; and verifying if it was &lt;code&gt;nil&lt;/code&gt; instead of calling &lt;code&gt;#has_key?&lt;/code&gt; lowered the time it took to complete certain operations. This was suspicious to say the least.&lt;/p&gt;

&lt;p&gt;I loaded up &lt;a href="https://github.com/evanphx/benchmark-ips"&gt;benchmark-ips&lt;/a&gt; and wrote this quick script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'benchmark/ips'&lt;/span&gt;

&lt;span class="no"&gt;Benchmark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ips&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'thing'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'gniht'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="s1"&gt;'has_key?'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;has_key?&lt;/span&gt; &lt;span class="s1"&gt;'thing'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="s1"&gt;'[]'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'thing'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;compare!&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which gave me this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Comparison:
                  []:  6461337.5 i/s
            has_key?:  5140776.3 i/s - same-ish: difference falls within error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I know, I know. It says &lt;code&gt;same-ish: difference falls within error&lt;/code&gt;, but notice how &lt;code&gt;#[]&lt;/code&gt; had approximately &lt;strong&gt;&lt;em&gt;1.3 million more&lt;/em&gt;&lt;/strong&gt; iterations per second. The relatively small performance hit becomes noticeable when you&amp;rsquo;re building a trie from a large dictionary.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll take it. From now on, I&amp;rsquo;ll use &lt;code&gt;#[]&lt;/code&gt; instead of &lt;code&gt;#has_key?&lt;/code&gt; for relatively low level operations where every millisecond counts.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I ran this benchmark earlier today with Ruby 2.5.0 and the gap between these two operations has gotten bigger!! It is now literally about &lt;strong&gt;&lt;em&gt;1.5 times slower&lt;/em&gt;&lt;/strong&gt; to use &lt;code&gt;#has_key?&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Comparison:
                  []:  6056391.2 i/s
            has_key?:  3956594.2 i/s - 1.53x  slower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I haven&amp;rsquo;t dug into it yet, but I&amp;rsquo;m sure there&amp;rsquo;s something going on &lt;a href="https://github.com/ruby/ruby/tree/ed935aa5be0e5e6b8d53c3e7d76a9ce395dfa18b/hash.c#L849"&gt;here&lt;/a&gt; and &lt;a href="https://github.com/ruby/ruby/blob/ed935aa5be0e5e6b8d53c3e7d76a9ce395dfa18b/hash.c#L2247"&gt;here&lt;/a&gt; that explains it.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Ruby performance: Using benchmarks and memory_profiler to chase performance degradations</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2018/02/11/ruby-performance-using-benchmarks-and-memory-profiler-to-chase-performance-degradations.html"/>
    <id>https://www.gonzedge.com/blog/2018/02/11/ruby-performance-using-benchmarks-and-memory-profiler-to-chase-performance-degradations.html</id>
    <published>2018-02-10T19:00:00-05:00</published>
    <updated>2021-10-15T11:21:45-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;While working on some of the performance improvements for &lt;a href="https://rubygems.org/gems/rambling-trie/versions/1.0.0"&gt;version 1.0.0 of Rambling Trie&lt;/a&gt; late in 2016 and early in 2017, I upgraded from Ruby 2.3.3 to Ruby 2.4.0 imagining that the newer version would help me on my mission to make all operations execute a bit faster. To my surprise, I ran into a significant performance degradation after upgrading - specifically, there was a ~25% increase in the time it took to execute a script using a trie with a big-ish word dictionary. This intrigued me enough that I decided to take a closer look.&lt;/p&gt;

&lt;h3&gt;Benchmarking with Ruby&lt;/h3&gt;

&lt;p&gt;After some investigation with the help of &lt;a href="https://ruby-doc.org/stdlib-2.4.0/libdoc/benchmark/rdoc/Benchmark.html"&gt;Ruby‚Äôs own &lt;code&gt;Benchmark&lt;/code&gt;&lt;/a&gt;, I realized that while most operations were a bit slower, the main problem was a lot more visible during intensive operations‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;p&gt;While working on some of the performance improvements for &lt;a href="https://rubygems.org/gems/rambling-trie/versions/1.0.0"&gt;version 1.0.0 of Rambling Trie&lt;/a&gt; late in 2016 and early in 2017, I upgraded from Ruby 2.3.3 to Ruby 2.4.0 imagining that the newer version would help me on my mission to make all operations execute a bit faster. To my surprise, I ran into a significant performance degradation after upgrading - specifically, there was a ~25% increase in the time it took to execute a script using a trie with a big-ish word dictionary. This intrigued me enough that I decided to take a closer look.&lt;/p&gt;

&lt;h3&gt;Benchmarking with Ruby&lt;/h3&gt;

&lt;p&gt;After some investigation with the help of &lt;a href="https://ruby-doc.org/stdlib-2.4.0/libdoc/benchmark/rdoc/Benchmark.html"&gt;Ruby&amp;rsquo;s own &lt;code&gt;Benchmark&lt;/code&gt;&lt;/a&gt;, I realized that while most operations were a bit slower, the main problem was a lot more visible during intensive operations like creating a brand new trie or compressing an existing one. You can see how a performance benchmark of &lt;code&gt;Rambling::Trie.create&lt;/code&gt; went from &lt;a href="https://github.com/gonzedge/rambling-trie/blob/master/reports/0.9.2/benchmark#L6"&gt;8.97 seconds with Ruby 2.3.3&lt;/a&gt;, to &lt;a href="https://github.com/gonzedge/rambling-trie/blob/master/reports/0.9.3/benchmark#L7"&gt;11.19 seconds with Ruby 2.4.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Bringing out the big guns&lt;/h3&gt;

&lt;p&gt;So, I pulled in the &lt;a href="https://rubygems.org/gems/memory_profiler"&gt;memory_profiler gem&lt;/a&gt; to do some memory allocation monitoring:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'memory_profiler'&lt;/span&gt;

&lt;span class="c1"&gt;# Profile trie creation&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MemoryProfiler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="ss"&gt;allow_files: &lt;/span&gt;&lt;span class="s1"&gt;'lib/rambling/trie'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;ignore_files: &lt;/span&gt;&lt;span class="s1"&gt;'lib/rambling/trie/tasks'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt; &lt;span class="s1"&gt;'/path/to/dictionary'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;pretty_print&lt;/span&gt; &lt;span class="ss"&gt;to_file: &lt;/span&gt;&lt;span class="s1"&gt;'reports/#{version}/#{date}/creation'&lt;/span&gt;

&lt;span class="c1"&gt;# Profile trie compression&lt;/span&gt;
&lt;span class="n"&gt;tries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;tries&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt; &lt;span class="s1"&gt;'/path/to/dictionary'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MemoryProfiler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="ss"&gt;allow_files: &lt;/span&gt;&lt;span class="s1"&gt;'lib/rambling/trie'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;ignore_files: &lt;/span&gt;&lt;span class="s1"&gt;'lib/rambling/trie/tasks'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;tries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;compress!&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;pretty_print&lt;/span&gt; &lt;span class="ss"&gt;to_file: &lt;/span&gt;&lt;span class="s1"&gt;'reports/#{version}/#{date}/compression'&lt;/span&gt;

&lt;span class="c1"&gt;# ... etc.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The report output gives you the amount of memory (allocated and retained) and the number of objects (allocated and retained) all broken down by gem, by file, by location, and by class. It also gives you which strings were allocated and retained and how many times it happened.&lt;/p&gt;

&lt;p&gt;The results were really illuminating. After running a profile for all operations, three things were immediately apparent:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The memory footprint in 2.4.0 is a bit better due to some sweet &lt;code&gt;Hash&lt;/code&gt; optimizations that came with Ruby 2.4.0 (&lt;em&gt;#win!&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Both the creation and compression operations create a lot of new object instances, as opposed to the rest of the operations that just run through a code path with existing instances&lt;/li&gt;
&lt;li&gt;The rest of the memory footprint looked exactly the same, so the issue had to be elsewhere&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Forwardable is the culprit&lt;/h3&gt;

&lt;p&gt;After further investigation with benchmarks and tweaking classes and methods, I realized that forwardable was the culprit. Code like this was causing issues:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Rambling&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Trie&lt;/span&gt;
    &lt;span class="c1"&gt;# A representation of a node in the Trie data structure.&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Node&lt;/span&gt;
      &lt;span class="c1"&gt;# ...&lt;/span&gt;

      &lt;span class="kp"&gt;extend&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Forwardable&lt;/span&gt;

      &lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="ss"&gt;:[]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;:[]=&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;:delete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;:has_key?&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;:children_tree&lt;/span&gt;

      &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Specifically, the &lt;a href="https://github.com/evanphx/benchmark-ips"&gt;benchmark-ips gem&lt;/a&gt; helped me analyze this issue further. I ran this benchmark:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'benchmark/ips'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'forwardable'&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestDelegate&lt;/span&gt;
  &lt;span class="kp"&gt;extend&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Forwardable&lt;/span&gt;
  &lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:[]&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;:hash&lt;/span&gt;

  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:hash&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
    &lt;span class="vi"&gt;@hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestDirect&lt;/span&gt;
  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:hash&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
    &lt;span class="vi"&gt;@hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
    &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Benchmark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ips&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;h: &lt;/span&gt;&lt;span class="s1"&gt;'hello'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;TestDelegate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="s1"&gt;'delegate access'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;delegate&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:h&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;direct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;TestDirect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="s1"&gt;'direct access'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;direct&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:h&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;compare!&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;hellip; and got these results:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Comparison:
       direct access:  6531016.6 i/s
     delegate access:   810084.8 i/s - 8.06x  slower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So&amp;hellip; access via a delegated method in Ruby 2.4.0 is about &lt;strong&gt;&lt;em&gt;8 TIMES SLOWER (!!!)&lt;/em&gt;&lt;/strong&gt; than directly accessing the underlying field üò®. That needed to be addressed, but what do I do in the meantime? Define all those methods by hand?! &lt;em&gt;NO WAY&lt;/em&gt;&amp;hellip;&lt;/p&gt;

&lt;h3&gt;Creating an interim solution&lt;/h3&gt;

&lt;p&gt;I reached out to &lt;a href="https://github.com/yuki24"&gt;Yuki Nishijima&lt;/a&gt; and explained the issue. He promptly responded saying he was going to take a look. In the meantime though, I wanted to release a new version of the gem with all the performance improvements I had been working on but without the degradation from 2.4.0, so I set out to create my own version of &lt;code&gt;Forwardable&lt;/code&gt; that preserved 2.3.3&amp;rsquo;s speed and memory in 2.4.0. Here&amp;rsquo;s what I ended up with (&lt;em&gt;ahem&lt;/em&gt;, after several iterations):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# rambling/trie/forwardable&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Rambling&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Trie&lt;/span&gt;
    &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Forwardable&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delegate&lt;/span&gt; &lt;span class="n"&gt;methods_to_target&lt;/span&gt;
        &lt;span class="n"&gt;methods_to_target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
          &lt;span class="nb"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;method&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
            &lt;span class="n"&gt;define_method&lt;/span&gt; &lt;span class="nb"&gt;method&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
              &lt;span class="nb"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt; &lt;span class="nb"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;
            &lt;span class="k"&gt;end&lt;/span&gt;
          &lt;span class="k"&gt;end&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, by including these lines in the benchmark-ips script:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# other requires&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rambling/trie/forwardable'&lt;/span&gt;

&lt;span class="c1"&gt;# other test classes&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestCustomForwardable&lt;/span&gt;
  &lt;span class="kp"&gt;extend&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Forwardable&lt;/span&gt;
  &lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:[]&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;:hash&lt;/span&gt;

  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:hash&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
    &lt;span class="vi"&gt;@hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Benchmark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ips&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;h: &lt;/span&gt;&lt;span class="s1"&gt;'hello'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;# other bm.report calls&lt;/span&gt;

  &lt;span class="n"&gt;custom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;TestCustomForwardable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;
  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;report&lt;/span&gt; &lt;span class="s1"&gt;'custom delegate access'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;custom&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:h&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;bm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;compare!&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;hellip; I got these results (the &lt;code&gt;custom delegate access&lt;/code&gt; is the benchmark with &lt;code&gt;Rambling::Trie::Forwardable&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Comparison:
       direct access:  6642032.3 i/s
custom delegate access:  2301340.9 i/s - 2.89x  slower
     delegate access:   835004.6 i/s - 7.95x  slower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And &lt;a href="https://github.com/gonzedge/rambling-trie/blob/master/reports/0.9.3/benchmark#L64"&gt;BAM! - back to (basically) the same numbers&lt;/a&gt;, which then pretty much &lt;a href="https://github.com/gonzedge/rambling-trie/blob/master/reports/1.0.0/benchmark"&gt;transferred nicely to 1.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Contributing back to the community&lt;/h3&gt;

&lt;p&gt;I submitted &lt;a href="https://bugs.ruby-lang.org/issues/13111"&gt;an issue&lt;/a&gt; to Ruby&amp;rsquo;s Redmine and soon after got an answer back from Yuki: he pointed out that an &lt;code&gt;UnboundMethod&lt;/code&gt; instance was being created &lt;a href="https://github.com/ruby/ruby/blob/2283d14cc9fefa278dfde02bdf8d84ce50cfe16f/lib/forwardable.rb#L207"&gt;on every delegated call&lt;/a&gt;. We also noticed that &lt;a href="https://github.com/nobu"&gt;Nobuyoshi Nakada&lt;/a&gt; had fixed the issue on trunk revisions &lt;a href="https://bugs.ruby-lang.org/projects/ruby-trunk/repository/trunk/revisions/57255"&gt;#57255&lt;/a&gt;, &lt;a href="https://bugs.ruby-lang.org/projects/ruby-trunk/repository/trunk/revisions/57255"&gt;#57256&lt;/a&gt; &amp;amp; &lt;a href="https://bugs.ruby-lang.org/projects/ruby-trunk/repository/trunk/revisions/57255"&gt;#57257&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, these revisions were included into the &lt;code&gt;ruby_2_4&lt;/code&gt; branch in revision &lt;a href="https://bugs.ruby-lang.org/projects/ruby-trunk/repository/ruby_2_4/revisions/57913"&gt;#57913&lt;/a&gt; in February 2017. Ruby 2.4.1 came out soon after and running the same benchmark in 2.4.1 gave me these results:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Comparison:
       direct access:  6272727.2 i/s
     delegate access:  2823600.3 i/s - 2.22x  slower
custom delegate access:  2288089.7 i/s - 2.74x  slower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;hellip; which means I could go back to using Ruby&amp;rsquo;s own &lt;code&gt;Forwardable&lt;/code&gt; again! By May 2017 I was able to &lt;a href="https://github.com/gonzedge/rambling-trie/commit/b98b0bf103cf113ad137ab7e27af90e8cadf6668"&gt;do so&lt;/a&gt; and &lt;a href="https://github.com/gonzedge/rambling-trie/commit/0ade8df3225759f7237184acb1c7281f298228d2"&gt;delete my own implementation&lt;/a&gt;. This is one of my favorite parts about writing code: deleting code.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Update on 2018-02-15&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ruby 2.5.0&amp;rsquo;s &lt;code&gt;Forwardable&lt;/code&gt; performs a bit slower now, but it&amp;rsquo;s still faster than my own implementation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Comparison:
       direct access:  6231242.7 i/s
     delegate access:  2582759.7 i/s - 2.41x  slower
custom delegate access:  2107914.3 i/s - 2.96x  slower
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ü§î&amp;hellip; Looking at this more closely, maybe I should drop the &lt;code&gt;Forwardable&lt;/code&gt; module and just define the methods directly to avoid this 2x slower business. I guess that&amp;rsquo;ll be a topic for a future blog post.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can see the &lt;a href="https://github.com/gonzedge/rambling-trie/blob/v1.0.0/lib/rambling/trie/forwardable.rb"&gt;full documented version of &lt;code&gt;Rambling::Trie::Forwardable&lt;/code&gt; on GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The Redmine issue has been addressed and the fix was backported to Ruby 2.2.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Rambling Trie 1.0.0 released!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2017/01/23/rambling-trie-1-0-0-released.html"/>
    <id>https://www.gonzedge.com/blog/2017/01/23/rambling-trie-1-0-0-released.html</id>
    <published>2017-01-22T19:00:00-05:00</published>
    <updated>2018-02-11T02:08:31-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;It‚Äôs been a while since I last wrote anything about &lt;a href="https://github.com/gonzedge/rambling-trie"&gt;Rambling Trie&lt;/a&gt; (or anything at all really), but I wanted to take the time to talk about all the changes and performance improvements that I‚Äôve made to the gem lately and that culminated in the &lt;a href="https://rubygems.org/gems/rambling-trie/versions/1.0.0"&gt;release&lt;/a&gt; of &lt;a href="https://github.com/gonzedge/rambling-trie/releases/tag/v1.0.0"&gt;version 1.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The changes worth highlighting are:&lt;/p&gt;

&lt;h3&gt;NEW: Ability to dump and load tries from disk&lt;/h3&gt;

&lt;p&gt;It takes a relatively long time to load all the words from a large dictionary into a new trie in memory. This becomes especially annoying when you have to do this full process every time you restart your application, even though you know that the trie is going to remain constant over time.&lt;/p&gt;

&lt;p&gt;To sort this out, you can now use the &lt;code&gt;Rambling::Trie.load&lt;/code&gt; and &lt;code&gt;Rambling::Trie.dump&lt;/code&gt; methods! Like this:&lt;/p&gt;
...</summary>
    <content type="html">&lt;p&gt;It&amp;rsquo;s been a while since I last wrote anything about &lt;a href="https://github.com/gonzedge/rambling-trie"&gt;Rambling Trie&lt;/a&gt; (or anything at all really), but I wanted to take the time to talk about all the changes and performance improvements that I&amp;rsquo;ve made to the gem lately and that culminated in the &lt;a href="https://rubygems.org/gems/rambling-trie/versions/1.0.0"&gt;release&lt;/a&gt; of &lt;a href="https://github.com/gonzedge/rambling-trie/releases/tag/v1.0.0"&gt;version 1.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The changes worth highlighting are:&lt;/p&gt;

&lt;h3&gt;NEW: Ability to dump and load tries from disk&lt;/h3&gt;

&lt;p&gt;It takes a relatively long time to load all the words from a large dictionary into a new trie in memory. This becomes especially annoying when you have to do this full process every time you restart your application, even though you know that the trie is going to remain constant over time.&lt;/p&gt;

&lt;p&gt;To sort this out, you can now use the &lt;code&gt;Rambling::Trie.load&lt;/code&gt; and &lt;code&gt;Rambling::Trie.dump&lt;/code&gt; methods! Like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rambling-trie'&lt;/span&gt;

&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt; &lt;span class="s1"&gt;'/usr/share/dict/web2'&lt;/span&gt;

&lt;span class="c1"&gt;# Dump into '/tmp/web2.marshal'&lt;/span&gt;
&lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dump&lt;/span&gt; &lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/web2.marshal'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then when you&amp;rsquo;re booting your application you can load the dumped trie with something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rambling-trie'&lt;/span&gt;

&lt;span class="c1"&gt;# Load from '/tmp/web2.marshal'&lt;/span&gt;
&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;load&lt;/span&gt; &lt;span class="s1"&gt;'/tmp/web2.marshal'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What makes me really excited about this feature is that it saves time (by about 30%) &lt;strong&gt;&lt;em&gt;and&lt;/em&gt;&lt;/strong&gt; memory (by about 60%). Who knew?!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;HINT&lt;/strong&gt;: You can save up to 75% more time and up to 80% memory if you use a compressed trie (although individual operations may be a bit slower).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;NEW: Ability to configure various options for the gem&lt;/h3&gt;

&lt;p&gt;As Rambling Trie&amp;rsquo;s feature set grows, the ability to easily extend its functionality without much hassle becomes more important. Now that you can dump and load tries from disk, wouldn&amp;rsquo;t it be nice to be able to support custom file formats?&lt;/p&gt;

&lt;p&gt;Well, now you can! Together with the ability to configure file readers, a custom compressor and a custom root node builder. You can initialize the gem with a configuration block like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rambling-trie'&lt;/span&gt;

&lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;config&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;compressor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MyCompressor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;root_builder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;MyNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;readers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt; &lt;span class="ss"&gt;:html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;MyHtmlReader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;readers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;readers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:html&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;serializers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt; &lt;span class="ss"&gt;:json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;MyJsonSerializer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;serializers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;serializers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:yml&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;NEW: Ability to get words within a given phrase&lt;/h3&gt;

&lt;p&gt;Useful to easily find out if a string has any valid words:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;words_within&lt;/span&gt; &lt;span class="s1"&gt;'tktkawesome'&lt;/span&gt; &lt;span class="c1"&gt;# =&amp;gt; [ "awe", "awesome", ... ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;NEW: Ability to compare tries and nodes&lt;/h3&gt;

&lt;p&gt;Useful to test if two tries or two nodes have the same dictionary.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;other_trie&lt;/span&gt;
  &lt;span class="c1"&gt;# be funny&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;other_node&lt;/span&gt;
  &lt;span class="c1"&gt;# be funky&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;NEW: Cleaner more extensible code and a unified API entry point&lt;/h3&gt;

&lt;p&gt;Lots of refactoring went into separating the code between raw and compressed tries, which are now represented by the &lt;code&gt;Rambling::Trie::RawNode&lt;/code&gt; and &lt;code&gt;Rambling::Trie::CompressedNode&lt;/code&gt; classes, and into building a unified API entry point that avoids duplication between both tries, which resulted in the &lt;code&gt;Rambling::Trie::Container&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In addition, the presence of the &lt;code&gt;Rambling::Trie::Comparable&lt;/code&gt;, &lt;code&gt;Rambling::Trie::Compressable&lt;/code&gt;, &lt;code&gt;Rambling::Trie::Enumerable&lt;/code&gt;, &lt;code&gt;Rambling::Trie::Forwardable&lt;/code&gt;, &lt;code&gt;Rambling::Trie::Inspectable&lt;/code&gt;, &lt;code&gt;Rambling::Trie::Stringifyable&lt;/code&gt; modules encapsulates common behavior between nodes.&lt;/p&gt;

&lt;h3&gt;NEW: Less CPU and memory&lt;/h3&gt;

&lt;p&gt;By relentlessly measuring the performance of the gem under different settings, I&amp;rsquo;ve learned a lot more about benchmarking and profiling in general, especially call tree profiles and memory profiles (but I&amp;rsquo;ll talk more about that in another post).&lt;/p&gt;

&lt;p&gt;Improvements that seemed marginal like assigning &lt;code&gt;true&lt;/code&gt; to the &lt;code&gt;#terminal&lt;/code&gt; attribute of &lt;code&gt;Rambling::Trie:Node&lt;/code&gt; when the the node is terminal and leaving it &lt;code&gt;nil&lt;/code&gt; when the node is non-terminal proved to have a significant impact in both memory footprint as well as computation time.&lt;/p&gt;

&lt;h3&gt;NEW: Added a CHANGELOG and a CONTRIBUTING guide!&lt;/h3&gt;

&lt;p&gt;Because &lt;a href="https://github.com/gonzedge/rambling-trie/blob/master/CHANGELOG.md"&gt;tracking changes&lt;/a&gt; and &lt;a href="https://github.com/gonzedge/rambling-trie/blob/master/CONTRIBUTING.md"&gt;making it easy for people to contribute&lt;/a&gt; is important.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I&amp;rsquo;ll write a bit more about the kind of surprises I found by measuring with benchmarks and profiles soon. Next on Rambling Trie&amp;rsquo;s roadmap: &lt;a href="https://github.com/gonzedge/rambling-trie/milestone/2"&gt;make it even faster by dropping down to The Metal‚Ñ¢&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;See &lt;a href="https://github.com/gonzedge/rambling-trie#supported-formats"&gt;Supported formats&lt;/a&gt; section in the README for available formats for dump and load&lt;/li&gt;
&lt;li&gt;Thanks to &lt;a href="https://github.com/darkogj"&gt;@darkogj&lt;/a&gt; for identifying and suggesting both the dump and load and the words within features!&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Page Objects: Where do you put your assertions?</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2016/04/12/page-objects-where-do-you-put-your-assertions.html"/>
    <id>https://www.gonzedge.com/blog/2016/04/12/page-objects-where-do-you-put-your-assertions.html</id>
    <published>2016-04-11T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;I started writing about &lt;a href="http://gonzedge.com/blog/2016/04/10/using-page-objects-in-your-acceptance-tests.html"&gt;Page Objects earlier this month&lt;/a&gt;, and as soon as you start talking about &lt;a href="http://martinfowler.com/bliki/PageObject.html"&gt;Page Objects&lt;/a&gt;, you need to have an opinion about where to put your assertions. Do you ask the page if it is in the state it expects to be or do you ask the page for values and assert that they are what you expect them to be in the test?&lt;/p&gt;

&lt;p&gt;If you look at &lt;a href="https://github.com/FluentLenium/FluentLenium"&gt;FluentLenium&lt;/a&gt; and &lt;a href="https://github.com/dgageot/simplelenium"&gt;Simplelenium&lt;/a&gt; on GitHub, you‚Äôll notice that their corresponding &lt;code&gt;README&lt;/code&gt;s describe the usage of the Page Object pattern. Now, if you take a closer look, you‚Äôll also notice that they have an opinion: they‚Äôve included the assertions in the definition of such Page Objects.&lt;/p&gt;

&lt;p&gt;Now, my first experience with Page Objects was actually under these conditions. The Page Objects were the main driver‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;p&gt;I started writing about &lt;a href="http://gonzedge.com/blog/2016/04/10/using-page-objects-in-your-acceptance-tests.html"&gt;Page Objects earlier this month&lt;/a&gt;, and as soon as you start talking about &lt;a href="http://martinfowler.com/bliki/PageObject.html"&gt;Page Objects&lt;/a&gt;, you need to have an opinion about where to put your assertions. Do you ask the page if it is in the state it expects to be or do you ask the page for values and assert that they are what you expect them to be in the test?&lt;/p&gt;

&lt;p&gt;If you look at &lt;a href="https://github.com/FluentLenium/FluentLenium"&gt;FluentLenium&lt;/a&gt; and &lt;a href="https://github.com/dgageot/simplelenium"&gt;Simplelenium&lt;/a&gt; on GitHub, you&amp;rsquo;ll notice that their corresponding &lt;code&gt;README&lt;/code&gt;s describe the usage of the Page Object pattern. Now, if you take a closer look, you&amp;rsquo;ll also notice that they have an opinion: they&amp;rsquo;ve included the assertions in the definition of such Page Objects.&lt;/p&gt;

&lt;p&gt;Now, my first experience with Page Objects was actually under these conditions. The Page Objects were the main driver of the acceptance tests and they contained all the information about the interaction with the page, as well as the assertions about whether the page was in the right state or not. The team felt great about using this implementation of Page Objects, but something felt a little off. Let&amp;rsquo;s take a look.&lt;/p&gt;

&lt;h2&gt;Revisiting the acceptance test for the restaurants application&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s rewrite that acceptance test we defined &lt;a href="http://gonzedge.com/blog/2016/04/10/using-page-objects-in-your-acceptance-tests.html"&gt;at the end of our first Page Objects post&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/features/reviewing_a_restaurant_spec.rb&lt;/span&gt;
&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="s1"&gt;'Reviewing a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="n"&gt;scenario&lt;/span&gt; &lt;span class="s1"&gt;'user writes a two-star review for a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;user_signs_in&lt;/span&gt;
    &lt;span class="n"&gt;user_searches_for_a_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;user_writes_a_two_star_review&lt;/span&gt;
    &lt;span class="n"&gt;user_sees_two_star_review_on_restaurant&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_sees_two_star_review_on_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s2"&gt;"Freddy's Unclean Steakhouse"&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;has_success_message?&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;success_message&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s1"&gt;'Your review has been saved!'&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reviews&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reviews&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;comments&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s1"&gt;'Did NOT like it'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, we&amp;rsquo;ll change it to have the assertions in the Page Objects:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/features/reviewing_a_restaurant_spec.rb&lt;/span&gt;
&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="s1"&gt;'Reviewing a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="n"&gt;scenario&lt;/span&gt; &lt;span class="s1"&gt;'user writes a two-star review for a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;user_signs_in&lt;/span&gt;
    &lt;span class="n"&gt;user_searches_for_a_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;user_writes_a_two_star_review&lt;/span&gt;
    &lt;span class="n"&gt;user_sees_two_star_review_on_restaurant&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_sees_two_star_review_on_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;assert_name&lt;/span&gt; &lt;span class="s2"&gt;"Freddy's Unclean Steakhouse"&lt;/span&gt;
    &lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;assert_success_message&lt;/span&gt; &lt;span class="s1"&gt;'Your review has been saved!'&lt;/span&gt;
    &lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;assert_number_of_reviews&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reviews&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
    &lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;assert_rating&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;assert_comments&lt;/span&gt; &lt;span class="s1"&gt;'Did NOT like it'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That doesn&amp;rsquo;t look too bad, right? It&amp;rsquo;s basically the same number of lines, except with the word &amp;ldquo;assert&amp;rdquo; instead of &amp;ldquo;expect&amp;rdquo;, right? Well, to be quite honest, when I did it this way last time around, my experience was so bad that I stopped using Page Objects altogether for a couple of years and only came back around them some time towards the end of last year.&lt;/p&gt;

&lt;p&gt;So, what&amp;rsquo;s the problem with this approach? I&amp;rsquo;m glad you ask! To name a few:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Page Objects have more than one obvious responsibility.&lt;/strong&gt; In this implementation, the Page Objects defined represent not only the elements displayed in the page and their corresponding attributes, but also the correctness of such elements.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The test has a clear intent, but sneakily so.&lt;/strong&gt; Even though we have methods that describe the intent of the test, such as &lt;code&gt;assert_name&lt;/code&gt;, &lt;code&gt;assert_rating&lt;/code&gt;, etc., we cannot see as easily what the test is actually about. We&amp;rsquo;ve successfully hidden both the HTML interaction details as well as the assertion details (this is not a good thing).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When the test fails in a particular assertion, you have to look in another file for the expectation&lt;/strong&gt;. Also, exceptions are harder to pinpoint.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Changing a Page Object is less reliable&lt;/strong&gt;. When a Page Object needs to change, you might not only be changing how it extracts values from the HTML, but also how the assertions themselves work, since it has more than one responsibility. If you&amp;rsquo;re not careful, this might inadvertantly affect unrelated tests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No convention for assertions.&lt;/strong&gt; Not having a clear framework for the assertions (e.g. &lt;code&gt;expect(...).to ...&lt;/code&gt;) means that it is harder to find what you&amp;rsquo;re looking for when you need to do so. It also means that further opportunities for test refactoring are missed if you happen to name the assertion methods for similar concepts differently.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So there you have it, I prefer to be explicit in my test file about my expectations and I am strongly against that thing were you put your assertions in the objects meant to represent your UI&amp;hellip;&lt;/p&gt;

&lt;p&gt;What do &lt;strong&gt;&lt;em&gt;YOU&lt;/em&gt;&lt;/strong&gt; think?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Specifying failure message for RSpec expectations</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2016/04/12/specifying-failure-message-for-rspec-expectations.html"/>
    <id>https://www.gonzedge.com/blog/2016/04/12/specifying-failure-message-for-rspec-expectations.html</id>
    <published>2016-04-11T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;When writing the &lt;a href="http://gonzedge.com/blog/2016/01/27/unit-testing-active-record-eager-loading.html"&gt;Unit Testing ActiveRecord eager-loading&lt;/a&gt; blog post a couple months ago, I noticed that the test failures I was getting while writing were not very helpful. Initially, I had an assertion that looked like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;association&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:reviews&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be_loaded&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since I was writing the test before the implementation ‚Äî *&lt;em&gt;cough&lt;/em&gt;* &lt;a href="http://david.heinemeierhansson.com/2014/tdd-is-dead-long-live-testing.html"&gt;TDD&lt;/a&gt; &lt;a href="http://martinfowler.com/articles/is-tdd-dead/"&gt;isn‚Äôt dead&lt;/a&gt; *&lt;em&gt;cough&lt;/em&gt;* ‚Äî I got the expected failure when running it. However, the failure message was not that friendly after all:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ rspec spec/controllers/restaurant_controller_spec.rb
Failures:

  1) RestaurantsController#index eager loads
     Failure/Error: expect(restaurant.association(:reviews)).to be_loaded
       expected `#&amp;lt;ActiveRecord::Associations::HasManyAssociation (...) &amp;gt;.loaded?` to return‚Ä¶&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;p&gt;When writing the &lt;a href="http://gonzedge.com/blog/2016/01/27/unit-testing-active-record-eager-loading.html"&gt;Unit Testing ActiveRecord eager-loading&lt;/a&gt; blog post a couple months ago, I noticed that the test failures I was getting while writing were not very helpful. Initially, I had an assertion that looked like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;association&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:reviews&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be_loaded&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since I was writing the test before the implementation ‚Äî *&lt;em&gt;cough&lt;/em&gt;* &lt;a href="http://david.heinemeierhansson.com/2014/tdd-is-dead-long-live-testing.html"&gt;TDD&lt;/a&gt; &lt;a href="http://martinfowler.com/articles/is-tdd-dead/"&gt;isn&amp;rsquo;t dead&lt;/a&gt; *&lt;em&gt;cough&lt;/em&gt;* ‚Äî I got the expected failure when running it. However, the failure message was not that friendly after all:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ rspec spec/controllers/restaurant_controller_spec.rb
Failures:

  1) RestaurantsController#index eager loads
     Failure/Error: expect(restaurant.association(:reviews)).to be_loaded
       expected `#&amp;lt;ActiveRecord::Associations::HasManyAssociation (...) &amp;gt;.loaded?` to return true, got false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After seeing this type of test failure, my first instinct was to replace the assertion with something a bit more explicit (and verbose) to get a better failure message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;association&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:reviews&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;loaded?&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, running the test looked like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ rspec spec/controllers/restaurant_controller_spec.rb
Failures:

  1) RestaurantsController#index eager loads
     Failure/Error: expect(restaurant.association(:reviews).loaded?).to be true

       expected: true
            got: false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which is better than what we had&amp;hellip; but not by much. We can do a lot better than that by using a hidden little gem (um, in the metaphorical sense and &lt;strong&gt;not&lt;/strong&gt; a rubygem) already provided to us by RSpec: &lt;a href="https://relishapp.com/rspec/rspec-expectations/v/3-4/docs/customized-message"&gt;passing the failure message as the second parameter&lt;/a&gt; to the &lt;code&gt;to&lt;/code&gt; method in the whole &lt;code&gt;expect(...).to&lt;/code&gt; expression.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;association&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:reviews&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be_loaded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Restaurant reviews are not eager loaded'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;rsquo;s run that test again and see what the failure looks like now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ rspec spec/controllers/restaurant_controller_spec.rb
Failures:

  1) RestaurantsController#index eager loads
     Failure/Error: expect(restaurant.association(:reviews).loaded?).to be_truthy
       Restaurant reviews are not eager loaded
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s what I&amp;rsquo;m talking about! Now I can finally focus on making the test pass.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We could&amp;rsquo;ve achieved something similar with a &lt;a href="https://github.com/dchelimsky/rspec/wiki/Custom-Matchers"&gt;custom matcher&lt;/a&gt;, but that seems a bit too much for this case&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Using Page Objects in your Acceptance Tests</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2016/04/10/using-page-objects-in-your-acceptance-tests.html"/>
    <id>https://www.gonzedge.com/blog/2016/04/10/using-page-objects-in-your-acceptance-tests.html</id>
    <published>2016-04-09T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;If you‚Äôve written &lt;a href="http://c2.com/cgi/wiki?AcceptanceTest"&gt;acceptance tests&lt;/a&gt; for web applications in the past (also called feature tests), you might be familiar with tools like &lt;a href="https://github.com/jnicklas/capybara"&gt;Capybara&lt;/a&gt;, &lt;a href="https://github.com/dgageot/simplelenium"&gt;Simplelenium&lt;/a&gt; and &lt;a href="https://github.com/FluentLenium/FluentLenium"&gt;FluentLenium&lt;/a&gt;. These are great abstractions over the browser (&lt;a href="http://docs.seleniumhq.org/"&gt;thanks, Selenium!&lt;/a&gt;) that provide very nice APIs for testing web applications.&lt;/p&gt;

&lt;p&gt;If you‚Äôve done this for a while, you might also have heard of &lt;a href="http://martinfowler.com/bliki/PageObject.html"&gt;Page Objects&lt;/a&gt;. The idea behind them is that your tests should be about the behavior of your application and not about the underlying HTML, since the HTML is an implementation detail and probably not the interesting part of your tests.&lt;/p&gt;

&lt;h2&gt;Our base acceptance test&lt;/h2&gt;

&lt;p&gt;Let‚Äôs assume that we are working on an application where you can browse and review restaurants and we have an acceptance test‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;p&gt;If you&amp;rsquo;ve written &lt;a href="http://c2.com/cgi/wiki?AcceptanceTest"&gt;acceptance tests&lt;/a&gt; for web applications in the past (also called feature tests), you might be familiar with tools like &lt;a href="https://github.com/jnicklas/capybara"&gt;Capybara&lt;/a&gt;, &lt;a href="https://github.com/dgageot/simplelenium"&gt;Simplelenium&lt;/a&gt; and &lt;a href="https://github.com/FluentLenium/FluentLenium"&gt;FluentLenium&lt;/a&gt;. These are great abstractions over the browser (&lt;a href="http://docs.seleniumhq.org/"&gt;thanks, Selenium!&lt;/a&gt;) that provide very nice APIs for testing web applications.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;ve done this for a while, you might also have heard of &lt;a href="http://martinfowler.com/bliki/PageObject.html"&gt;Page Objects&lt;/a&gt;. The idea behind them is that your tests should be about the behavior of your application and not about the underlying HTML, since the HTML is an implementation detail and probably not the interesting part of your tests.&lt;/p&gt;

&lt;h2&gt;Our base acceptance test&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s assume that we are working on an application where you can browse and review restaurants and we have an acceptance test that goes like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/features/reviewing_a_restaurant_spec.rb&lt;/span&gt;
&lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="s1"&gt;'Reviewing a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="c1"&gt;# create a user in the database&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;scenario&lt;/span&gt; &lt;span class="s1"&gt;'user writes a two-star review for a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;visit&lt;/span&gt; &lt;span class="n"&gt;root_path&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Sign In'&lt;/span&gt;

    &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="s1"&gt;'.sign-in-form'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'myemail@example.org'&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'anawesomepassword'&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Sign In'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Search'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'Steakhouse'&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Go'&lt;/span&gt;
    &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="s1"&gt;'.search-results'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s2"&gt;"Freddy's Unclean Steakhouse"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Write a Review'&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'.rating[data-rating="2"]'&lt;/span&gt;
    &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Comments'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'Did NOT like it'&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Save'&lt;/span&gt;

    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_content&lt;/span&gt; &lt;span class="s1"&gt;'Your review has been saved!'&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_content&lt;/span&gt; &lt;span class="s2"&gt;"Freddy's Unclean Steakhouse"&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_selector&lt;/span&gt; &lt;span class="s1"&gt;'.rating[data-rating="2"].selected'&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_content&lt;/span&gt; &lt;span class="s1"&gt;'Did NOT like it'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The test above is fine, but we can do better. It&amp;rsquo;s very hard to see what the test is about with all the clicks and all the form filling happening.&lt;/p&gt;

&lt;h2&gt;Extracting methods to clarify intent&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s extract a few methods to better communicate what we&amp;rsquo;re trying to validate with this test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/features/reviewing_a_restaurant_spec.rb&lt;/span&gt;
&lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="s1"&gt;'Reviewing a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="n"&gt;scenario&lt;/span&gt; &lt;span class="s1"&gt;'user writes a two-star review for a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;user_signs_in&lt;/span&gt;
    &lt;span class="n"&gt;user_searches_for_a_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;user_writes_a_two_star_review&lt;/span&gt;
    &lt;span class="n"&gt;user_sees_two_star_review_on_restaurant&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_signs_in&lt;/span&gt;
    &lt;span class="n"&gt;visit&lt;/span&gt; &lt;span class="n"&gt;root_path&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Sign In'&lt;/span&gt;

    &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="s1"&gt;'.sign-in-form'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'myemail@example.org'&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'anawesomepassword'&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Sign In'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_searches_for_a_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Search'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'Steakhouse'&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Go'&lt;/span&gt;
    &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="s1"&gt;'.search-results'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s2"&gt;"Freddy's Unclean Steakhouse"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_writes_a_two_star_review&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Write a Review'&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'.rating[data-rating="2"]'&lt;/span&gt;
    &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Comments'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="s1"&gt;'Did NOT like it'&lt;/span&gt;
    &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Save'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_sees_two_star_review_on_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_content&lt;/span&gt; &lt;span class="s1"&gt;'Your review has been saved!'&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_content&lt;/span&gt; &lt;span class="s2"&gt;"Freddy's Unclean Steakhouse"&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_selector&lt;/span&gt; &lt;span class="s1"&gt;'.rating[data-rating="2"].selected'&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_content&lt;/span&gt; &lt;span class="s1"&gt;'Did NOT like it'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s definitely better. We are expressing our intent in the test itself. But&amp;hellip; we can still do better. This test file continues to be too coupled to the specific details of how to interact with the HTML. Additionally, the assertions that we have at the end are not specific enough since the contained strings could be anywhere on the page. This does not bode well.&lt;/p&gt;

&lt;h2&gt;Using Page Objects&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s extract a few Page Objects. Some of them will represent the whole web page being displayed and other will represent particular sections of such page:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/features/pages/sign_in_page.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Pages&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SignInPage&lt;/span&gt;
    &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;navigate&lt;/span&gt;
      &lt;span class="n"&gt;visit&lt;/span&gt; &lt;span class="n"&gt;root_path&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Sign In'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sign_in&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="s1"&gt;'.sign-in-form'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;
        &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;
        &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Sign In'&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# spec/features/pages/search_page.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Pages&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SearchPage&lt;/span&gt;
    &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;search_for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;term&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Search'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="n"&gt;term&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Go'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;results&lt;/span&gt;
      &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.search-results a'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;Pages&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Search&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# spec/features/pages/search/result.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Pages&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Search&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Result&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="vi"&gt;@element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;
        &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;
        &lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;click&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="kp"&gt;private&lt;/span&gt;

      &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:element&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# spec/features/pages/restaurant_page.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Pages&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RestaurantPage&lt;/span&gt;
    &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;name&lt;/span&gt;
      &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'h1'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;has_success_message?&lt;/span&gt;
      &lt;span class="n"&gt;has_selector?&lt;/span&gt; &lt;span class="s1"&gt;'[data-flash-success]'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;success_message&lt;/span&gt;
      &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'[data-flash-success]'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reviews&lt;/span&gt;
      &lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.review'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;Pages&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Restaurant&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write_review&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Write a Review'&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="n"&gt;rating_selectors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;stars&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;fill_in&lt;/span&gt; &lt;span class="s1"&gt;'Comments'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="n"&gt;comments&lt;/span&gt;
      &lt;span class="n"&gt;click_on&lt;/span&gt; &lt;span class="s1"&gt;'Save'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="kp"&gt;private&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rating_selectors&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'[data-rating="1"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'[data-rating="2"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'[data-rating="3"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'[data-rating="4"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'[data-rating="5"]'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# spec/features/pages/restaurant/review.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Pages&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Restaurant&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Review&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="vi"&gt;@element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rating&lt;/span&gt;
        &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
          &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.rating.selected'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;'data-rating'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;comments&lt;/span&gt;
        &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
          &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.comments'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="kp"&gt;private&lt;/span&gt;

      &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:element&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now, we can rewrite our acceptance test like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/features/reviewing_a_restaurant_spec.rb&lt;/span&gt;
&lt;span class="nb"&gt;require_relative&lt;/span&gt; &lt;span class="s1"&gt;'pages/sign_in_page'&lt;/span&gt;
&lt;span class="nb"&gt;require_relative&lt;/span&gt; &lt;span class="s1"&gt;'pages/search_page'&lt;/span&gt;
&lt;span class="nb"&gt;require_relative&lt;/span&gt; &lt;span class="s1"&gt;'pages/restaurant_page'&lt;/span&gt;
&lt;span class="nb"&gt;require_relative&lt;/span&gt; &lt;span class="s1"&gt;'pages/restaurant/review'&lt;/span&gt;

&lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="s1"&gt;'Reviewing a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="n"&gt;scenario&lt;/span&gt; &lt;span class="s1"&gt;'user writes a two-star review for a restaurant'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;user_signs_in&lt;/span&gt;
    &lt;span class="n"&gt;user_searches_for_a_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;user_writes_a_two_star_review&lt;/span&gt;
    &lt;span class="n"&gt;user_sees_two_star_review_on_restaurant&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_signs_in&lt;/span&gt;
    &lt;span class="n"&gt;sign_in_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;navigate&lt;/span&gt;
    &lt;span class="n"&gt;sign_in_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sign_in&lt;/span&gt; &lt;span class="s1"&gt;'myemail@example.org'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'anawesomepassword'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_searches_for_a_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;search_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;search_for&lt;/span&gt; &lt;span class="s1"&gt;'Steakhouse'&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;search_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;search_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s2"&gt;"Freddy's Unclean Steakhouse"&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;view&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_writes_a_two_star_review&lt;/span&gt;
    &lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;write_review&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Did NOT like it'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;user_sees_two_star_review_on_restaurant&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s2"&gt;"Freddy's Unclean Steakhouse"&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;has_success_message?&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;success_message&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s1"&gt;'Your review has been saved!'&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reviews&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

    &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;restaurant_page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reviews&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;comments&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s1"&gt;'Did NOT like it'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, these Page Objects give us better ways to express the intent of the test. We are now expecting the first review in the rated restaurant page to have a particular rating and a particular comment, instead of just asserting that the number and text are in the page. We could&amp;rsquo;ve achieved that without Page Objects, but having Page Objects allowed us to get the HTML handling out of the way and really focus on writing an interesting test. We even added an assertion to count the number of reviews on the page.&lt;/p&gt;

&lt;p&gt;On top of that, this gives us the added benefit of reducing duplication. If we had other tests with similar steps and all of a sudden we realized that we needed to change the way we sign into the application or the way we search for restaurants, it wouldn&amp;rsquo;t be fun to go through all of the acceptance test files to change the same thing over and over again. In our case, we would now just have to go to the &lt;code&gt;SignInPage&lt;/code&gt; or the &lt;code&gt;SearchPage&lt;/code&gt; to reflect the new changes and, voil√†, all the tests are updated.&lt;/p&gt;

&lt;p&gt;A common occurrence with acceptance tests, especially for applications that are JavaScript heavy (and what app isn&amp;rsquo;t these days?!), is that they start failing intermittently (a.k.a. flakey tests), usually because we&amp;rsquo;re trying to interact with the browser without giving it time to fully process the results of some JavaScript action. Page Objects can help with this, because you can wait for the right elements to appear or disappear from the page after a particular action was taken without ever revealing this to the tests using the page object.&lt;/p&gt;

&lt;p&gt;One last benefit I want to mention is that, like domain objects, Page Objects allow the team, developers or not, to speak in the same language. Everyone knows what you&amp;rsquo;re talking about when you refer to the reviews list in the restaurant page, and if the tests reflect that, it means there is a lower mental barrier to cross whenever you need to translate acceptance criteria into tests.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Extracting a couple of base utility objects&lt;/h2&gt;

&lt;p&gt;From the Page Objects described before, you can easily reduce duplication between Page Objects by extracting a base page and component objects:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/features/pages/page_component.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Pages&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Page&lt;/span&gt;
    &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Capybara&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;DSL&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;has_success_message?&lt;/span&gt;
      &lt;span class="n"&gt;has_selector?&lt;/span&gt; &lt;span class="s1"&gt;'[data-flash-success]'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;success_message&lt;/span&gt;
      &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'[data-flash-success]'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# spec/features/pages/page_component.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Pages&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PageComponent&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="vi"&gt;@element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="kp"&gt;private&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;within_element&lt;/span&gt;
      &lt;span class="n"&gt;within&lt;/span&gt; &lt;span class="n"&gt;element&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:element&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With these, you can now define a shorter implementation for the &lt;code&gt;Review&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# spec/features/pages/restaurant/review.rb&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Pages&lt;/span&gt;
  &lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;Restaurant&lt;/span&gt;
    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Review&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Pages&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;PageComponent&lt;/span&gt;
      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rating&lt;/span&gt;
        &lt;span class="n"&gt;within_element&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
          &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.rating.selected'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;'data-rating'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;

      &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;comments&lt;/span&gt;
        &lt;span class="n"&gt;within_element&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
          &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.comments'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;
        &lt;span class="k"&gt;end&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it for this time. Enjoy your new and shiny acceptance tests!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updated on 2016-04-11 to use a better name for the restaurant receiving that review. Thanks to &lt;a href="https://github.com/MarkyMarkMcDonald"&gt;Mark McDonald&lt;/a&gt; for pointing that out!&lt;/li&gt;
&lt;li&gt;Updated on 2016-04-24 to use the &lt;code&gt;all&lt;/code&gt; method instead of &lt;code&gt;find&lt;/code&gt; when looking for element collections&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Unit Testing ActiveRecord eager-loading</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2016/01/27/unit-testing-active-record-eager-loading.html"/>
    <id>https://www.gonzedge.com/blog/2016/01/27/unit-testing-active-record-eager-loading.html</id>
    <published>2016-01-26T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;If you‚Äôve worked with relational databases and any &lt;a href="https://en.wikipedia.org/wiki/Object-relational_mapping"&gt;ORM&lt;/a&gt;s like &lt;a href="http://hibernate.org/orm/"&gt;Java‚Äôs Hibernate&lt;/a&gt;, &lt;a href="http://nhibernate.info/"&gt;.NET‚Äôs NHibernate&lt;/a&gt; or &lt;a href="http://guides.rubyonrails.org/active_record_querying.html"&gt;Rails‚Äô &lt;code&gt;ActiveRecord&lt;/code&gt;&lt;/a&gt; in the past, you might be familiar with &lt;a href="https://stackoverflow.com/questions/97197/what-is-the-n1-selects-issue"&gt;SELECT N+1&lt;/a&gt; &lt;a href="https://www.hibernatingrhinos.com/products/nhprof/learn/alert/selectnplusone"&gt;issues&lt;/a&gt;. It is a common performance problem in database-dependent applications and, because of this, these ORMs provide a built-in solution to this problem.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;ActiveRecord&lt;/code&gt;, &lt;a href="http://blog.bigbinary.com/2013/07/01/preload-vs-eager-load-vs-joins-vs-includes.html"&gt;&lt;code&gt;includes&lt;/code&gt;, &lt;code&gt;preload&lt;/code&gt; and &lt;code&gt;eager_load&lt;/code&gt;&lt;/a&gt; come to the rescue. Therefore, it is not unusual to find these keywords scattered in different places where your application accesses the database. Hopefully this isn‚Äôt a lot of places though - &lt;a href="http://gonzedge.com/blog/2016/01/26/query-objects-in-the-rails-world-a-different-approach.html"&gt;you are using Query Objects, right?&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;An example application&lt;/h2&gt;

&lt;p&gt;Let‚Äôs imagine for a second that we have an application where you can browse restaurants, which in turn have many reviews‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;p&gt;If you&amp;rsquo;ve worked with relational databases and any &lt;a href="https://en.wikipedia.org/wiki/Object-relational_mapping"&gt;ORM&lt;/a&gt;s like &lt;a href="http://hibernate.org/orm/"&gt;Java&amp;rsquo;s Hibernate&lt;/a&gt;, &lt;a href="http://nhibernate.info/"&gt;.NET&amp;rsquo;s NHibernate&lt;/a&gt; or &lt;a href="http://guides.rubyonrails.org/active_record_querying.html"&gt;Rails&amp;rsquo; &lt;code&gt;ActiveRecord&lt;/code&gt;&lt;/a&gt; in the past, you might be familiar with &lt;a href="https://stackoverflow.com/questions/97197/what-is-the-n1-selects-issue"&gt;SELECT N+1&lt;/a&gt; &lt;a href="https://www.hibernatingrhinos.com/products/nhprof/learn/alert/selectnplusone"&gt;issues&lt;/a&gt;. It is a common performance problem in database-dependent applications and, because of this, these ORMs provide a built-in solution to this problem.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;ActiveRecord&lt;/code&gt;, &lt;a href="http://blog.bigbinary.com/2013/07/01/preload-vs-eager-load-vs-joins-vs-includes.html"&gt;&lt;code&gt;includes&lt;/code&gt;, &lt;code&gt;preload&lt;/code&gt; and &lt;code&gt;eager_load&lt;/code&gt;&lt;/a&gt; come to the rescue. Therefore, it is not unusual to find these keywords scattered in different places where your application accesses the database. Hopefully this isn&amp;rsquo;t a lot of places though - &lt;a href="http://gonzedge.com/blog/2016/01/26/query-objects-in-the-rails-world-a-different-approach.html"&gt;you are using Query Objects, right?&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;An example application&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s imagine for a second that we have an application where you can browse restaurants, which in turn have many reviews, each of which belongs to an author:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Restaurant&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:reviews&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Review&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:restaurant&lt;/span&gt;
  &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:author&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Author&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:reviews&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let&amp;rsquo;s say that we need to return a list of restaurants with all of its reviews, including the review&amp;rsquo;s &lt;code&gt;rating&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; and author&amp;rsquo;s &lt;code&gt;name&lt;/code&gt;. You could achieve this with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# I know, I know, I'm not using query objects here...&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RestaurantsController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;
    &lt;span class="vi"&gt;@restaurants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Restaurant&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;reviews: :author&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;restaurant_id: &lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:restaurant_id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, when we use those &lt;code&gt;@restaurants&lt;/code&gt;, an iteration like the one below would cause a SELECT N+1 issue if we didn&amp;rsquo;t have eager-loading:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="vi"&gt;@restaurants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'reviews'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reviews&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'rating'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'author_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, so that&amp;rsquo;s enough background. Let&amp;rsquo;s get into the meat of it: How do you make sure that the correct associations are getting eager-loaded in your unit tests?&lt;/p&gt;

&lt;h2&gt;A first approach: using &lt;code&gt;includes_values&lt;/code&gt;, &lt;code&gt;preload_values&lt;/code&gt; and &lt;code&gt;eager_load_values&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Testing the eager-loaded values of the resulting &lt;code&gt;Restaurant&lt;/code&gt; collection (which would be an &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;) in the &lt;code&gt;RestaurantsController&lt;/code&gt; above can be achieved with the &lt;code&gt;#includes_values&lt;/code&gt;, &lt;code&gt;#preload_values&lt;/code&gt; and &lt;code&gt;#eager_load_values&lt;/code&gt; methods. It would go something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rails_helper'&lt;/span&gt;

&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;RestaurantsController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type: :controller&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;'#index'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'eager loads'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;

      &lt;span class="n"&gt;restaurants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;assigns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:restaurants&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;includes_values&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;reviews: :author&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, by using this method you are only testing that you passed the values that you expected to &lt;code&gt;includes&lt;/code&gt;, &lt;code&gt;preload&lt;/code&gt; or &lt;code&gt;eager_load&lt;/code&gt;, respectively, and a few people out there might tell you that this isn&amp;rsquo;t a very valuable test.&lt;/p&gt;

&lt;h2&gt;A better approach: using &lt;code&gt;association&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;We can get a more useful test by using the &lt;code&gt;#association&lt;/code&gt; method on an &lt;code&gt;ActiveRecord::Base&lt;/code&gt; instance. The same test would now look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rails_helper'&lt;/span&gt;

&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;RestaurantsController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type: :controller&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;'#index'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'eager loads'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="ss"&gt;:index&lt;/span&gt;

      &lt;span class="n"&gt;restaurants&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;assigns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:restaurants&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;restaurant&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;restaurants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;association&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:reviews&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be_loaded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Reviews are not eager loaded'&lt;/span&gt;

      &lt;span class="n"&gt;review&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;restaurant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reviews&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;association&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:author&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be_loaded&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Author are not eager loaded'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I tend to prefer this way of testing eager-loading because you get to treat the eager-loading code as a black box, instead of reaching into the internals. Additionally, you get the benefit of having the ability to change the way the records are being eager-loaded (by switching from &lt;code&gt;includes&lt;/code&gt; to &lt;code&gt;preload&lt;/code&gt;, for example) without having to change the tests.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been using this approach lately and I&amp;rsquo;ve been quite happy with it so far. Enjoy testing those active records!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This post&amp;rsquo;s examples are based on Rails 4.2.5, RSpec 3.4.0 (and rspec-rails).&lt;/li&gt;
&lt;li&gt;Usually, one of my biggest concerns with SELECT N+1 issues is that you have to be constantly thinking about them, and I tend to be very forgetful with these things. Take a look at &lt;a href="https://github.com/flyerhzm/bullet"&gt;the bullet gem&lt;/a&gt; and &lt;a href="https://github.com/MiniProfiler/rack-mini-profiler"&gt;rack-mini-profiler&lt;/a&gt; to start monitoring.&lt;/li&gt;
&lt;li&gt;There used to be a &lt;code&gt;#loaded_#{association}?&lt;/code&gt; method, but &lt;a href="https://github.com/rails/rails/issues/472"&gt;its usage was discouraged a long time ago&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Query Objects in the Rails world - A Different Approach</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2016/01/26/query-objects-in-the-rails-world-a-different-approach.html"/>
    <id>https://www.gonzedge.com/blog/2016/01/26/query-objects-in-the-rails-world-a-different-approach.html</id>
    <published>2016-01-25T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;If you have worked with &lt;a href="http://rubyonrails.org"&gt;Ruby on Rails&lt;/a&gt; before then you might be familiar with ActiveRecord &lt;code&gt;scopes&lt;/code&gt;. Using them, you can achieve what many would consider very readable code. Let‚Äôs say that we have an application where we display an inbox where users receive messages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Message&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let‚Äôs imagine that after reading a &lt;code&gt;Message&lt;/code&gt;, it is marked as read, and let‚Äôs represent that with a &lt;code&gt;read&lt;/code&gt; column in the database. Additionally, our users can either archive the &lt;code&gt;Message&lt;/code&gt; or move it to the trash. We‚Äôll represent this concept with a &lt;code&gt;location&lt;/code&gt; column in the &lt;code&gt;messages&lt;/code&gt; table.&lt;/p&gt;

&lt;h2&gt;Querying the database the Rails way&lt;/h2&gt;

&lt;p&gt;Let‚Äôs say that our users want to have a way to view unread messages in their inbox. Using &lt;code&gt;ActiveRecord&lt;/code&gt;, you could achieve‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;p&gt;If you have worked with &lt;a href="http://rubyonrails.org"&gt;Ruby on Rails&lt;/a&gt; before then you might be familiar with ActiveRecord &lt;code&gt;scopes&lt;/code&gt;. Using them, you can achieve what many would consider very readable code. Let&amp;rsquo;s say that we have an application where we display an inbox where users receive messages.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Message&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let&amp;rsquo;s imagine that after reading a &lt;code&gt;Message&lt;/code&gt;, it is marked as read, and let&amp;rsquo;s represent that with a &lt;code&gt;read&lt;/code&gt; column in the database. Additionally, our users can either archive the &lt;code&gt;Message&lt;/code&gt; or move it to the trash. We&amp;rsquo;ll represent this concept with a &lt;code&gt;location&lt;/code&gt; column in the &lt;code&gt;messages&lt;/code&gt; table.&lt;/p&gt;

&lt;h2&gt;Querying the database the Rails way&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s say that our users want to have a way to view unread messages in their inbox. Using &lt;code&gt;ActiveRecord&lt;/code&gt;, you could achieve this with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;location: &lt;/span&gt;&lt;span class="s1"&gt;'inbox'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;read: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you were to define scopes, you can make that a bit more readable and reusable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Message&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:inbox&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;location: &lt;/span&gt;&lt;span class="s1"&gt;'inbox'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:read&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;read: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# ...&lt;/span&gt;

&lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;unread&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scopes also make it easier to test each individual query against the database (you probably don&amp;rsquo;t want to mock the database in this context).&lt;/p&gt;

&lt;p&gt;However, there are a few issues with this approach. If you have enough chained scopes, you can get pretty verbose with these, and the &lt;code&gt;Message&lt;/code&gt; class quickly becomes the junkyard for all the database related operations. Plus, what if you have several places in the application where you want to load these messages? How do you test that you are loading the correct data from the database in these chained scopes? Do you have a separate scope that combines them both? What if you have multiple combinations?&lt;/p&gt;

&lt;p&gt;Enter&amp;hellip;&lt;/p&gt;

&lt;h2&gt;The Query Object pattern&lt;/h2&gt;

&lt;p&gt;A &lt;a href="http://martinfowler.com/eaaCatalog/queryObject.html"&gt;Query Object&lt;/a&gt; represents a database query and it fits perfectly into our requirements. It can be reused across different places in the application while at the same time hiding the querying logic. It also provides a good isolated unit to test.&lt;/p&gt;

&lt;p&gt;Back when I was doing .NET, I used and embraced this concept as much as possible but for some reason when I started using Rails a few years ago, it kind of fell off my toolbelt.&lt;/p&gt;

&lt;h3&gt;An initial implementation in Ruby&lt;/h3&gt;

&lt;p&gt;A good initial implementation comes from &lt;a href="http://codeclimate.com"&gt;CodeClimate&lt;/a&gt;&amp;rsquo;s &lt;a href="http://blog.codeclimate.com/blog/2012/10/17/7-ways-to-decompose-fat-activerecord-models/"&gt;7 Ways to Decompose Fat ActiveRecord Models&lt;/a&gt;. Following their lead, you could come up with something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnreadInboxMessagesQuery&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@relation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@relation&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;location: &lt;/span&gt;&lt;span class="s1"&gt;'inbox'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;read: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, we initialize the query object with a default &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; represented by the &lt;code&gt;Message.all&lt;/code&gt; &lt;code&gt;scope&lt;/code&gt;. Then, whenever you want to access the unread inbox &lt;code&gt;Message&lt;/code&gt;s, you just create a new instance of this object and iterate:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;unread_inbox_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;UnreadInboxMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;unread_inbox_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When I started using this approach heavily, I found myself wanting to use more than just &lt;code&gt;#find_each&lt;/code&gt; and started delegating all the usual methods down to the resulting &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnreadInboxMessagesQuery&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;relation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@relation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;relation&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="ss"&gt;:find_each&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:each&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;#... etc&lt;/span&gt;
    &lt;span class="ss"&gt;to: :results&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;results&lt;/span&gt;
    &lt;span class="vi"&gt;@relation&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;location: &lt;/span&gt;&lt;span class="s1"&gt;'inbox'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;read: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I ran into another issue: what if I want to parameterize one of the query&amp;rsquo;s arguments? I wanted to be able to do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;unread_inbox_messages_from_other_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;UnreadInboxMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;from: &lt;/span&gt;&lt;span class="n"&gt;other_user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I could pass that as an additional param to the initialize, but then how do I initialize the default relation? I could try and pass that down to &lt;code&gt;results&lt;/code&gt;, but then I cannot delegate methods down to results anymore. How could I make these query objects chainable so that I can reuse some of the logic a-la-Rails-scopes?&lt;/p&gt;

&lt;h3&gt;A Different Approach&lt;/h3&gt;

&lt;p&gt;After some thought, I came to the conclusion that passing the &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; down to the &lt;code&gt;#results&lt;/code&gt; method instead of doing it in initialization would better fit my requirements, so I ended up with this (note that now I&amp;rsquo;m calling it &lt;code&gt;scope&lt;/code&gt; instead of &lt;code&gt;relation&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnreadInboxMessagesQuery&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;scope&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;location: &lt;/span&gt;&lt;span class="s1"&gt;'inbox'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;read: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And you can use it like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;unread_inbox_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;UnreadInboxMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This makes it so that the outcome of the &lt;code&gt;UnreadInboxMessagesQuery&lt;/code&gt; is a plain old &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; which makes it easy to access &lt;code&gt;find_each&lt;/code&gt;, &lt;code&gt;each&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;Then, if we want to achieve this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;unread_inbox_messages_from_other_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;UnreadInboxMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;from: &lt;/span&gt;&lt;span class="n"&gt;other_user&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can change the query object to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnreadInboxMessagesQuery&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;from: &lt;/span&gt;&lt;span class="kp"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@from&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;messages_from_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;location: &lt;/span&gt;&lt;span class="s1"&gt;'inbox'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;read: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:from&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;messages_from_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;from: &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Chainable Query Objects!&lt;/h3&gt;

&lt;p&gt;A nice consequence of this approach is that you can chain these query objects to achieve what &lt;code&gt;ActiveRecord&lt;/code&gt; &lt;code&gt;scopes&lt;/code&gt; give you. If you want to get all the unread inbox messages, then you can:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;unread_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;UnreadMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;inbox_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;InboxMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;span class="n"&gt;unread_inbox_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unread_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inbox_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With this in mind, let&amp;rsquo;s see a new implementation of &lt;code&gt;UnreadInboxMessagesQuery&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnreadInboxMessagesQuery&lt;/span&gt;
  &lt;span class="c1"&gt;# initialize...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;unread_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;UnreadMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;inbox_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;InboxMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;messages_from_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MessagesFromUserQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;from: &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;inbox_messages_from_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inbox_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;messages_from_user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;unread_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inbox_messages_from_user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# other private methods...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, following this approach, you could find yourself chaining a few queries from time to time, which might become a bit verbose. Let&amp;rsquo;s attempt to make it shorter by expressing the chain of queries as a collection of queries, over which you get the results from one item of the collection and plug it into the next one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnreadInboxMessagesQuery&lt;/span&gt;
  &lt;span class="c1"&gt;# initialize...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;new_scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# other private methods...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;queries&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="no"&gt;UnreadMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="no"&gt;InboxMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="no"&gt;MessagesFromUserQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;from: &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Figuring out how to write this &lt;code&gt;inject&lt;/code&gt; every time would be quite the challenge. Let&amp;rsquo;s wrap that concept in a new &lt;code&gt;QueryChain&lt;/code&gt; class that does the magic for us:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;QueryChain&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@queries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queries&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;new_scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:queries&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now, you can use the &lt;code&gt;QueryChain&lt;/code&gt; to define other queries like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnreadInboxMessagesQuery&lt;/span&gt;
  &lt;span class="c1"&gt;# initialize...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;queries&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# other private methods...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;queries&lt;/span&gt;
    &lt;span class="no"&gt;QueryChain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="no"&gt;UnreadMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="no"&gt;InboxMessagesQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="no"&gt;MessagesFromUserQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;from: &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it for now. Enjoy!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The initial version of this blog post was published on 2016-01-26 and used the return value from one query&amp;rsquo;s &lt;code&gt;#results&lt;/code&gt; as the parameter of another query, and then jumped into using a &lt;code&gt;QueryChain&lt;/code&gt; as the solution. The current version, updated on 2016-04-10, has a more detailed reasoning for the resulting &lt;code&gt;QueryChain&lt;/code&gt; class. Thanks to Ashraf Hanafy for the feedback.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Installing MacVim with Lua enabled through Homebrew</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2016/01/11/installing-macvim-with-lua-enabled-through-homebrew.html"/>
    <id>https://www.gonzedge.com/blog/2016/01/11/installing-macvim-with-lua-enabled-through-homebrew.html</id>
    <published>2016-01-10T19:00:00-05:00</published>
    <updated>2018-03-11T18:29:13-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;p&gt;If you‚Äôre like me, you like to have control over the plugins that you have installed in your editor setup. However, staying up to date with the different plugins can be a little bit of a hassle from time to time, so lately, I‚Äôve been using &lt;a href="https://github.com/skwp/dotfiles"&gt;YADR&lt;/a&gt;, a set of community maintained dotfiles.&lt;/p&gt;

&lt;p&gt;A great autocompletion plugin that YADR comes with is &lt;a href="https://github.com/Shougo/neocomplete.vim"&gt;neocomplete.vim&lt;/a&gt;, which ‚Äúprovides a keyword completion system by maintaining a cache of keywords in the current buffer‚Äù. Unfortunately, for it to work, it needs MacVim with Lua enabled.&lt;/p&gt;

&lt;p&gt;Now, I already had MacVim installed through &lt;a href="http://caskroom.io/"&gt;Caskroom&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;which mvim
&lt;span class="c"&gt;# /usr/local/bin/mvim&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-l&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;which mvim&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# /usr/local/bin/mvim -&amp;gt; /opt/homebrew-cask/Caskroom/macvim/7.4-84/mvim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But this version was installed without Lua‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;p&gt;If you&amp;rsquo;re like me, you like to have control over the plugins that you have installed in your editor setup. However, staying up to date with the different plugins can be a little bit of a hassle from time to time, so lately, I&amp;rsquo;ve been using &lt;a href="https://github.com/skwp/dotfiles"&gt;YADR&lt;/a&gt;, a set of community maintained dotfiles.&lt;/p&gt;

&lt;p&gt;A great autocompletion plugin that YADR comes with is &lt;a href="https://github.com/Shougo/neocomplete.vim"&gt;neocomplete.vim&lt;/a&gt;, which &amp;ldquo;provides a keyword completion system by maintaining a cache of keywords in the current buffer&amp;rdquo;. Unfortunately, for it to work, it needs MacVim with Lua enabled.&lt;/p&gt;

&lt;p&gt;Now, I already had MacVim installed through &lt;a href="http://caskroom.io/"&gt;Caskroom&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;which mvim
&lt;span class="c"&gt;# /usr/local/bin/mvim&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-l&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;which mvim&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# /usr/local/bin/mvim -&amp;gt; /opt/homebrew-cask/Caskroom/macvim/7.4-84/mvim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But this version was installed without Lua enabled. If you find yourself in this situation, and you want to re-install MacVim with the correct setup, just follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install MacVim with Lua through Homebrew (and not Caskroom):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;macvim &lt;span class="nt"&gt;--with-cscope&lt;/span&gt; &lt;span class="nt"&gt;--with-lua&lt;/span&gt; &lt;span class="nt"&gt;--with-override-system-vim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remove the previous installations of the &lt;code&gt;mvim&lt;/code&gt; and &lt;code&gt;vim&lt;/code&gt; binaries (if there are any):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;rm&lt;/span&gt; /usr/local/bin/mvim
brew &lt;span class="nb"&gt;unlink &lt;/span&gt;vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Link newly installed binaries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;link &lt;/span&gt;macvim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, add the newly installed &lt;code&gt;MacVim.app&lt;/code&gt; to &lt;code&gt;/Applications&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;brew linkapps macvim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should now see the correct version of MacVim linked:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;which mvim
&lt;span class="c"&gt;# /usr/local/bin/mvim&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-l&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;which mvim&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# /usr/local/bin/mvim -&amp;gt; ../Cellar/macvim/7.4-89/bin/mvim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Update (January 18, 2016)&lt;/em&gt;&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;If instead of Caskroom, you had an existing &lt;code&gt;vim&lt;/code&gt; installation that was setup without Homebrew, you will have to restart your terminal for it to pick up the changes. You can verify which &lt;code&gt;vim&lt;/code&gt; binary is being run with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;which vim
&lt;span class="c"&gt;# vim: aliased to mvim -v (and not /usr/bin/vim)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, if you&amp;rsquo;d like to install &lt;code&gt;vim&lt;/code&gt; with Lua support and &lt;strong&gt;not&lt;/strong&gt; MacVim, you can achieve that with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;vim &lt;span class="nt"&gt;--with-lua&lt;/span&gt;
brew &lt;span class="nb"&gt;link &lt;/span&gt;vim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;Enjoy your brand new MacVim with Lua and neocompletion!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Pygmentizing your Rails app hosted on Heroku</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/07/28/pygmentizing-your-rails-app-hosted-on-heroku.html"/>
    <id>https://www.gonzedge.com/blog/2012/07/28/pygmentizing-your-rails-app-hosted-on-heroku.html</id>
    <published>2012-07-27T20:00:00-04:00</published>
    <updated>2016-01-14T23:54:43-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/pygmentizing-your-rails-app-hosted-on-heroku"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 28, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Last week, I watched &lt;a href="http://railscasts.com/episodes/207-syntax-highlighting-revised"&gt;Ryan Bates‚Äô Syntax Highlighting RailsCast&lt;/a&gt; and wanted to apply what I had just learned right away, using &lt;a href="http://pygments.org/"&gt;pygments&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As you might have noticed, the &lt;a href="http://www.ramblinglabs.com/slider"&gt;jQuery Rambling Slider homepage&lt;/a&gt; features the new syntax highlighting styling. I‚Äôve spent great part of the day updating the blog posts to use this new syntax highlighting style, to stop relying on GitHub‚Äôs gists, but that‚Äôs another story.&lt;/p&gt;

&lt;p&gt;Now, there are several ways to do this. There are a couple of gems out there, like the &lt;a href="https://github.com/tmm1/pygments.rb"&gt;&lt;code&gt;pygments.rb&lt;/code&gt;&lt;/a&gt; mentioned on the RailsCast, that are very helpful. I installed that gem locally and it worked like a charm, but when I tried to upload the changes to Heroku, the‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/pygmentizing-your-rails-app-hosted-on-heroku"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 28, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Last week, I watched &lt;a href="http://railscasts.com/episodes/207-syntax-highlighting-revised"&gt;Ryan Bates&amp;rsquo; Syntax Highlighting RailsCast&lt;/a&gt; and wanted to apply what I had just learned right away, using &lt;a href="http://pygments.org/"&gt;pygments&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As you might have noticed, the &lt;a href="http://www.ramblinglabs.com/slider"&gt;jQuery Rambling Slider homepage&lt;/a&gt; features the new syntax highlighting styling. I&amp;rsquo;ve spent great part of the day updating the blog posts to use this new syntax highlighting style, to stop relying on GitHub&amp;rsquo;s gists, but that&amp;rsquo;s another story.&lt;/p&gt;

&lt;p&gt;Now, there are several ways to do this. There are a couple of gems out there, like the &lt;a href="https://github.com/tmm1/pygments.rb"&gt;&lt;code&gt;pygments.rb&lt;/code&gt;&lt;/a&gt; mentioned on the RailsCast, that are very helpful. I installed that gem locally and it worked like a charm, but when I tried to upload the changes to Heroku, the site was throwing the following error on the application startup:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;Running: rake assets:precompile
rake aborted!
Could not open library &lt;span class="s1"&gt;'/usr/local/lib/libpython2.7.a'&lt;/span&gt;: /usr/local/lib/libpython2.7.a: invalid ELF header
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt; /tmp/build_12k2jikx5kgsi/app/assets/stylesheets/pygments.css.scss.erb&lt;span class="o"&gt;)&lt;/span&gt;
Tasks: TOP &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; assets:precompile:primary
&lt;span class="o"&gt;(&lt;/span&gt;See full trace by running task with &lt;span class="nt"&gt;--trace&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I submitted a support ticket to the Heroku guys, and they answered that &lt;code&gt;pygments.rb&lt;/code&gt; simply doesn&amp;rsquo;t work on Heroku.
Well, that sucks :(.&lt;/p&gt;

&lt;p&gt;Fortunately, there are a couple of workarounds! You could use the &lt;a href="http://rubygems.org/gems/pygmentize"&gt;&lt;code&gt;pygmentize&lt;/code&gt;&lt;/a&gt; gem, or you could do what I did using the &lt;a href="http://pygmentize.herokuapp.com"&gt;heroku-pygmentize service&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I added the following helper method to the &lt;code&gt;application_helper.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="nn"&gt;ApplicationHelper&lt;/span&gt;
  &lt;span class="no"&gt;PYGMENTIZE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt; &lt;span class="s1"&gt;'http://pygmentize.herokuapp.com/'&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;highlight_code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Digest&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;SHA1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hexdigest&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fetch&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sha&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="no"&gt;Net&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;HTTP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;PYGMENTIZE_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;lang: &lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;code: &lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;html_safe&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, when the &lt;code&gt;highlight_code&lt;/code&gt; method is called, an HTTP post request is sent and the result is cached in the application&amp;rsquo;s cache.
Then, you can do something like this on a view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight haml"&gt;&lt;code&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;highlight_code&lt;/span&gt; &lt;span class="s2"&gt;"gem 'rambling-trie'"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:ruby&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That sorted it out!&lt;/p&gt;

&lt;p&gt;Enjoy your syntax highligthing! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Version 0.4.2 of the Rambling Trie has been released!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/07/28/version-0-4-2-of-the-rambling-trie-has-been-released.html"/>
    <id>https://www.gonzedge.com/blog/2012/07/28/version-0-4-2-of-the-rambling-trie-has-been-released.html</id>
    <published>2012-07-27T20:00:00-04:00</published>
    <updated>2018-02-20T19:10:50-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/version-0-4-2-of-the-rambling-trie-has-been-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 28, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The Rambling Trie has reached its 0.4.2 version. This one includes the before mentioned changes for the trie instance to behave as an &lt;code&gt;Enumerable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This means that having this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;%w(some words and other stuff)&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is included!"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As well as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;any?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt; &lt;span class="s1"&gt;'x'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And any other method included in Ruby core&amp;rsquo;s &lt;a href="http://ruby-doc.org/core-1.9.3/Enumerable.html"&gt;&lt;code&gt;Enumerable&lt;/code&gt; module&lt;/a&gt;.
Isn&amp;rsquo;t that cool!?&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/version-0-4-2-of-the-rambling-trie-has-been-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 28, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The Rambling Trie has reached its 0.4.2 version. This one includes the before mentioned changes for the trie instance to behave as an &lt;code&gt;Enumerable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This means that having this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sx"&gt;%w(some words and other stuff)&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is included!"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As well as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;any?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt; &lt;span class="s1"&gt;'x'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And any other method included in Ruby core&amp;rsquo;s &lt;a href="http://ruby-doc.org/core-1.9.3/Enumerable.html"&gt;&lt;code&gt;Enumerable&lt;/code&gt; module&lt;/a&gt;.
Isn&amp;rsquo;t that cool!?&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>New homepage for Rambling Trie</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/07/28/new-homepage-for-rambling-trie.html"/>
    <id>https://www.gonzedge.com/blog/2012/07/28/new-homepage-for-rambling-trie.html</id>
    <published>2012-07-27T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/new-homepage-for-rambling-trie"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 28, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As done with the jQuery Rambling Slider &lt;a href="/blog/2012/07/22/jquery-rambling-slider-new-home-page.html"&gt;previously on this week&lt;/a&gt;, and as I promised on that post as well, the Rambling Trie now has its own homepage on ramblinglabs.com! Here‚Äôs the link:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ramblinglabs.com/trie"&gt;Rambling Trie | A Ruby implementation of the Trie data structure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It features installation and usage steps as well as a contributing page, and includes the badges from various cool GitHub services (more on that later). It also has a brand new logo, inspired on the trie data structure (and other tree data structures) concept.&lt;/p&gt;

&lt;p&gt;Go ahead and check it out!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Still pending&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Examples page for jQuery Rambling Slider&lt;/li&gt;
&lt;li&gt;Examples page for Rambling Trie&lt;/li&gt;
&lt;li&gt;Examples page for Rambling Slider‚Ä¶&lt;/li&gt;
&lt;/ul&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/new-homepage-for-rambling-trie"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 28, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As done with the jQuery Rambling Slider &lt;a href="/blog/2012/07/22/jquery-rambling-slider-new-home-page.html"&gt;previously on this week&lt;/a&gt;, and as I promised on that post as well, the Rambling Trie now has its own homepage on ramblinglabs.com! Here&amp;rsquo;s the link:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ramblinglabs.com/trie"&gt;Rambling Trie | A Ruby implementation of the Trie data structure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It features installation and usage steps as well as a contributing page, and includes the badges from various cool GitHub services (more on that later). It also has a brand new logo, inspired on the trie data structure (and other tree data structures) concept.&lt;/p&gt;

&lt;p&gt;Go ahead and check it out!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Still pending&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Examples page for jQuery Rambling Slider&lt;/li&gt;
&lt;li&gt;Examples page for Rambling Trie&lt;/li&gt;
&lt;li&gt;Examples page for Rambling Slider Rails&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>The rambling-slider-rails v0.1.0 has been released!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/07/22/rambling-slider-rails-v-0-1-0-has-been-released.html"/>
    <id>https://www.gonzedge.com/blog/2012/07/22/rambling-slider-rails-v-0-1-0-has-been-released.html</id>
    <published>2012-07-21T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/rambling-slider-rails-v-0-1-0-has-been-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 22, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Version 0.1.0 of the &lt;code&gt;rambling-slider-rails&lt;/code&gt; gem is here!
And it includes a major bug fix.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;rambling-slider-rails&lt;/code&gt; gem had an awful bug when running on production mode, causing the SASS to not be compiled.
There were a couple of failed attempts before &lt;code&gt;0.1.0&lt;/code&gt; trying to fix this. They were &lt;code&gt;0.0.2&lt;/code&gt; and &lt;code&gt;0.0.3&lt;/code&gt;, which have both been yanked from the RubyGems repository.&lt;/p&gt;

&lt;p&gt;After fixing the issue and revising the file/directory structure, the version 0.1.0 has been pushed to RubyGems and should now be working correctly on both production and development modes.&lt;/p&gt;

&lt;p&gt;See &lt;a href="/blog/2012/04/27/introducing-rambling-slider-rails-easily-include-the-jquery-rambling-slider-on-your-rails-app.html"&gt;Introducing rambling-slider-rails: Easily include the jQuery Rambling Slider on your rails app&lt;/a&gt; and &lt;a href="https://github.com/gonzedge/rambling-slider-rails"&gt;the project‚Ä¶&lt;/a&gt;&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/rambling-slider-rails-v-0-1-0-has-been-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 22, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Version 0.1.0 of the &lt;code&gt;rambling-slider-rails&lt;/code&gt; gem is here!
And it includes a major bug fix.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;rambling-slider-rails&lt;/code&gt; gem had an awful bug when running on production mode, causing the SASS to not be compiled.
There were a couple of failed attempts before &lt;code&gt;0.1.0&lt;/code&gt; trying to fix this. They were &lt;code&gt;0.0.2&lt;/code&gt; and &lt;code&gt;0.0.3&lt;/code&gt;, which have both been yanked from the RubyGems repository.&lt;/p&gt;

&lt;p&gt;After fixing the issue and revising the file/directory structure, the version 0.1.0 has been pushed to RubyGems and should now be working correctly on both production and development modes.&lt;/p&gt;

&lt;p&gt;See &lt;a href="/blog/2012/04/27/introducing-rambling-slider-rails-easily-include-the-jquery-rambling-slider-on-your-rails-app.html"&gt;Introducing rambling-slider-rails: Easily include the jQuery Rambling Slider on your rails app&lt;/a&gt; and &lt;a href="https://github.com/gonzedge/rambling-slider-rails"&gt;the project&amp;rsquo;s readme on GitHub&lt;/a&gt; for more information on how to use the gem.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider new home page</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/07/22/jquery-rambling-slider-new-home-page.html"/>
    <id>https://www.gonzedge.com/blog/2012/07/22/jquery-rambling-slider-new-home-page.html</id>
    <published>2012-07-21T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/jquery-rambling-slider-new-home-page"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 22, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The jQuery Rambling Slider now has its own dedicated section here on ramblinglabs.com. Here‚Äôs the link: &lt;a href="http://www.ramblinglabs.com/slider"&gt;jQuery Rambling Slider | A CoffeeScript improved version of the Nivo Slider&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It features thus far one download page and one description page with a fully functional slider, included on the site with the &lt;a href="https://github.com/gonzedge/rambling-slider-rails"&gt;rambling-slider-rails gem&lt;/a&gt; (see &lt;a href="/blog/2012/04/27/introducing-rambling-slider-rails-easily-include-the-jquery-rambling-slider-on-your-rails-app.html"&gt;Introducing rambling-slider-rails: Easily include the jQuery Rambling Slider on your rails app&lt;/a&gt; and &lt;a href="/blog/2012/07/22/rambling-slider-rails-v-0-1-0-has-been-released.html"&gt;The rambling-slider-rails v0.1.0 has been released!&lt;/a&gt;. I will be adding an examples page soon, to present the different themes, image resizing support, flash support and other options added.&lt;/p&gt;

&lt;p&gt;Go ahead and check it out!&lt;/p&gt;

&lt;p&gt;Also, the Rambling‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/jquery-rambling-slider-new-home-page"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 22, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The jQuery Rambling Slider now has its own dedicated section here on ramblinglabs.com. Here&amp;rsquo;s the link: &lt;a href="http://www.ramblinglabs.com/slider"&gt;jQuery Rambling Slider | A CoffeeScript improved version of the Nivo Slider&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It features thus far one download page and one description page with a fully functional slider, included on the site with the &lt;a href="https://github.com/gonzedge/rambling-slider-rails"&gt;rambling-slider-rails gem&lt;/a&gt; (see &lt;a href="/blog/2012/04/27/introducing-rambling-slider-rails-easily-include-the-jquery-rambling-slider-on-your-rails-app.html"&gt;Introducing rambling-slider-rails: Easily include the jQuery Rambling Slider on your rails app&lt;/a&gt; and &lt;a href="/blog/2012/07/22/rambling-slider-rails-v-0-1-0-has-been-released.html"&gt;The rambling-slider-rails v0.1.0 has been released!&lt;/a&gt;. I will be adding an examples page soon, to present the different themes, image resizing support, flash support and other options added.&lt;/p&gt;

&lt;p&gt;Go ahead and check it out!&lt;/p&gt;

&lt;p&gt;Also, the Rambling Trie home page is underway, so stay tuned!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Both the Rambling Trie and the Rambling Slider Rails gems have their own homepage now.
Feel free to check them out!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.ramblinglabs.com/trie"&gt;Rambling Trie | A Ruby implementation of the Trie data structure&lt;/a&gt;
&lt;a href="http://www.ramblinglabs.com/slider-rails"&gt;Rambling Slider Rails | Rails integration for jQuery Rambling Slider&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;
</content>
  </entry>
  <entry>
    <title>Rambling Trie 0.4.1 is out!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/07/21/rambling-trie-0-4-1-is-out.html"/>
    <id>https://www.gonzedge.com/blog/2012/07/21/rambling-trie-0-4-1-is-out.html</id>
    <published>2012-07-20T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/rambling-trie-0-4-1-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 21, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Version 0.4.1 of the &lt;a href="/blog/2012/02/10/rambling-trie-a-custom-trie-data-structure-implementation-in-ruby.html"&gt;Rambling Trie&lt;/a&gt; is here. It has some minor performance improvements over previous versions, changes in file/directoy structure, as well as a new API entry point, other API methods and more documentation.&lt;/p&gt;

&lt;p&gt;You can now instance a new trie like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;DEPRECATION WARNING&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The old API entry point &lt;code&gt;Rambling::Trie.new&lt;/code&gt; is now marked as deprecated and will be removed soon. Use the new &lt;code&gt;Rambling::Trie.create&lt;/code&gt; method.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Also, you can add words to the trie using &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s1"&gt;'word'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And check if a word is contained in the trie with &lt;code&gt;include?&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt; &lt;span class="s1"&gt;'word'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see more documentation available on &lt;a href="https://github.com/gonzedge/rambling-trie"&gt;the project‚Äôs repository‚Ä¶&lt;/a&gt;&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/07/rambling-trie-0-4-1-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on July 21, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Version 0.4.1 of the &lt;a href="/blog/2012/02/10/rambling-trie-a-custom-trie-data-structure-implementation-in-ruby.html"&gt;Rambling Trie&lt;/a&gt; is here. It has some minor performance improvements over previous versions, changes in file/directoy structure, as well as a new API entry point, other API methods and more documentation.&lt;/p&gt;

&lt;p&gt;You can now instance a new trie like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;DEPRECATION WARNING&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The old API entry point &lt;code&gt;Rambling::Trie.new&lt;/code&gt; is now marked as deprecated and will be removed soon. Use the new &lt;code&gt;Rambling::Trie.create&lt;/code&gt; method.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Also, you can add words to the trie using &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s1"&gt;'word'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And check if a word is contained in the trie with &lt;code&gt;include?&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt; &lt;span class="s1"&gt;'word'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see more documentation available on &lt;a href="https://github.com/gonzedge/rambling-trie"&gt;the project&amp;rsquo;s repository on GitHub&lt;/a&gt;, and a full description of classes, modules and methods on &lt;a href="http://rubydoc.info/gems/rambling-trie"&gt;the project&amp;rsquo;s Yard documentation on RubyDoc.info&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This marks the start of a streamline of changes to come, which will include new API methods (like the &lt;a href="http://ruby-doc.org/core-1.9.3/Enumerable.html"&gt;Enumerable&lt;/a&gt; methods) and further code and performance improvements.&lt;/p&gt;

&lt;p&gt;Stay tuned!
Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Introducing rambling-slider-rails: Easily include the jQuery Rambling Slider on your rails app</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/04/27/introducing-rambling-slider-rails-easily-include-the-jquery-rambling-slider-on-your-rails-app.html"/>
    <id>https://www.gonzedge.com/blog/2012/04/27/introducing-rambling-slider-rails-easily-include-the-jquery-rambling-slider-on-your-rails-app.html</id>
    <published>2012-04-26T20:00:00-04:00</published>
    <updated>2016-01-14T23:54:18-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/04/introducing-rambling-slider-rails-easily-include-the-jquery-rambling-slider-on-your-rails-app"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on April 27, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;About three weeks ago, I had to use the &lt;a href="https://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; together with the Rails asset pipeline‚Ä¶
It was a headache and a total mess‚Ä¶ Having to change all the references to the images on the CSS file, as well as the themes was not as smooth as I would like that to be.&lt;/p&gt;

&lt;p&gt;So, I automated the process a bit locally and started to think how would be the easiest way to integrate the &lt;a href="https://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; into a Rails app. Then it hit me‚Ä¶&lt;/p&gt;

&lt;p&gt;Of course! How about building a gem that includes the necessary adjustments for the asset pipeline on Rails?
That would we really cool and will save me from doing the same process over and over again for each new application‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/04/introducing-rambling-slider-rails-easily-include-the-jquery-rambling-slider-on-your-rails-app"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on April 27, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;About three weeks ago, I had to use the &lt;a href="https://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; together with the Rails asset pipeline&amp;hellip;
It was a headache and a total mess&amp;hellip; Having to change all the references to the images on the CSS file, as well as the themes was not as smooth as I would like that to be.&lt;/p&gt;

&lt;p&gt;So, I automated the process a bit locally and started to think how would be the easiest way to integrate the &lt;a href="https://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; into a Rails app. Then it hit me&amp;hellip;&lt;/p&gt;

&lt;p&gt;Of course! How about building a gem that includes the necessary adjustments for the asset pipeline on Rails?
That would we really cool and will save me from doing the same process over and over again for each new application in which I want to use it.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s how the &lt;code&gt;rambling-slider-rails&lt;/code&gt; gem was born. It offers a simple way to include the slider on your Rails app, without much cluttering.
You can see &lt;a href="https://github.com/gonzedge/rambling-slider-rails"&gt;the project on GitHub&lt;/a&gt;, currently on version 0.0.1.&lt;/p&gt;

&lt;p&gt;So, to include it in your application, just add this to your Gemfile:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'rambling-slider-rails'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, be sure to have at least these two lines on your &lt;code&gt;application.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//= require jquery&lt;/span&gt;
&lt;span class="c1"&gt;//= require jquery.rambling.slider&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this line on your &lt;code&gt;application.css&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/*
*= require jquery.rambling.slider
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it! You should be able to initialize the &lt;a href="https://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; wherever you need to now!&lt;/p&gt;

&lt;p&gt;For more documentation, head to the &lt;a href="https://github.com/gonzedge/rambling-slider-rails"&gt;rambling-slider-rails homepage on GitHub&lt;/a&gt;.
For more information on how to use the &lt;a href="https://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt;, you can go to &lt;a href="https://github.com/gonzedge/rambling.slider/wiki"&gt;its wiki on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Git: Removing sensitive data and rewriting history</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/04/27/git-removing-sensitive-data-and-rewriting-history.html"/>
    <id>https://www.gonzedge.com/blog/2012/04/27/git-removing-sensitive-data-and-rewriting-history.html</id>
    <published>2012-04-26T20:00:00-04:00</published>
    <updated>2016-01-14T23:54:17-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/04/git-removing-sensitive-data-and-rewriting-history"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on April 27, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One thing that tends to happen with Git, is being careless with what you add to your repository.
I‚Äôve seen this happen since I began using Git, a couple years ago, and it stays happening over and over again, for various reasons.&lt;/p&gt;

&lt;p&gt;On one of the projects I was a long time ago, we added lots of files with sensitive information, including emails and passwords for some accounts for certain services. We also added a lot of images that weren‚Äôt really needed, and some of the ones that were needed, were not in the optimal size either. We were just starting up with Git, and we didn‚Äôt know what to include or exclude.&lt;/p&gt;

&lt;p&gt;To avoid making the story any longer, I just have‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/04/git-removing-sensitive-data-and-rewriting-history"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on April 27, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One thing that tends to happen with Git, is being careless with what you add to your repository.
I&amp;rsquo;ve seen this happen since I began using Git, a couple years ago, and it stays happening over and over again, for various reasons.&lt;/p&gt;

&lt;p&gt;On one of the projects I was a long time ago, we added lots of files with sensitive information, including emails and passwords for some accounts for certain services. We also added a lot of images that weren&amp;rsquo;t really needed, and some of the ones that were needed, were not in the optimal size either. We were just starting up with Git, and we didn&amp;rsquo;t know what to include or exclude.&lt;/p&gt;

&lt;p&gt;To avoid making the story any longer, I just have to say that this repository was already &lt;strong&gt;800MB in size&lt;/strong&gt; last time I checked&amp;hellip; 800MB!!! &lt;em&gt;Not cool&lt;/em&gt;&amp;hellip; &lt;em&gt;Not cool at all&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The main cause for this repository to grow this big was the accidental addition of big files on a certain commit, and then removal on a subsequent commit. This is a novice mistake. As a beginner, one tends to forget (or simply ignore) that git will still have the file in its index, for history purposes. Now, repeat that process several times with files big enough, and you&amp;rsquo;ll end up with a repository of 500MB, even when the project only has a total of, say, 10MB.&lt;/p&gt;

&lt;p&gt;A size like this makes it really hard to clone and to handle in general, which is not ideal if you want to maintain a good pace, even for people new to the project.&lt;/p&gt;

&lt;p&gt;So, what do you do?
Rewrite history.
How do you it?
I&amp;rsquo;ll cover up two cases: removing files from the repository&amp;rsquo;s history, and changing a file&amp;rsquo;s content.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt;
This is &lt;strong&gt;not&lt;/strong&gt; recommended for projects with many contributors, because there is some processing that has to be done in each local environment to ensure that noone re-adds the files or changes removed.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Removing files from the history with &amp;lsquo;git filter-branch &amp;ndash;index-filter&amp;rsquo;&lt;/h3&gt;

&lt;p&gt;This is the way to go when you have added files accidentally, be it files with sensitive data as passwords or just big files, and you want to remove them completely from the repository history.&lt;/p&gt;

&lt;p&gt;Basically, what we want to do is simply remove the file from all commits and, also, prune the empty ones after they have been rewritten.&lt;/p&gt;

&lt;p&gt;The GitHub guys have &lt;a href="http://help.github.com/remove-sensitive-data/"&gt;a great tutorial for this&lt;/a&gt;, which I completely recommend.&lt;/p&gt;

&lt;p&gt;Now, let&amp;rsquo;s say that, for example, I have hundreds of &lt;code&gt;.mp3&lt;/code&gt; files added to my repository, located on a &lt;code&gt;resources&lt;/code&gt; directory, and which I would like to remove from the history of the repository. You will have to do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git filter-branch &lt;span class="nt"&gt;--index-filter&lt;/span&gt; &lt;span class="s1"&gt;'git rm --cached --ignore-unmatch -- resources/*.mp3'&lt;/span&gt; &lt;span class="nt"&gt;--prune-empty&lt;/span&gt; &lt;span class="nt"&gt;--&lt;/span&gt; &lt;span class="nt"&gt;--all&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that we are specifying the &lt;code&gt;--index-filter&lt;/code&gt; option, and that it receives a command to execute on each of the repository&amp;rsquo;s commits. By default, it evaluates this action on the whole history of the repository, but you can specify a commit range as you do on any other git command.&lt;/p&gt;

&lt;p&gt;So, what this will do is evaluate the command passed (which is removing the &lt;code&gt;.mp3&lt;/code&gt; files from the index for this case) for each commit, and then it will generate a new commit. Finally, note that we specify the &lt;code&gt;--prune-empty&lt;/code&gt; option so that it prunes the commits that will result empty. This means that any commit that was related only to the deleted files will be removed as well.&lt;/p&gt;

&lt;h3&gt;Changing a file&amp;rsquo;s content with &amp;lsquo;git filter-branch &amp;ndash;tree-filter&amp;rsquo;&lt;/h3&gt;

&lt;p&gt;Now, if you want to change a file&amp;rsquo;s content instead of removing it, then the &lt;code&gt;--tree-filter&lt;/code&gt; option is the way to go. As the &lt;code&gt;--index-filter&lt;/code&gt; option, this one receives a command to execute on any file on the repository.&lt;/p&gt;

&lt;p&gt;So, if, for example, you added a password accidentally to the &lt;code&gt;config/database.yml&lt;/code&gt; of your app and you would like to just change it to a dummy password, you can do something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git filter-branch &lt;span class="nt"&gt;--tree-filter&lt;/span&gt; &lt;span class="s1"&gt;'sed -i s/the_password/the_dummy_password/g config/database.yml'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, I&amp;rsquo;m using the &lt;code&gt;sed -i&lt;/code&gt; which will edit the files in place, instead for spitting the changes through the standard output. As you can see, I don&amp;rsquo;t need to add the file to the git index again after making the changes, since the &lt;code&gt;--tree-filter&lt;/code&gt; option will automatically add them.&lt;/p&gt;

&lt;h3&gt;Making these changes available to others&lt;/h3&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt;
A forced push is &lt;strong&gt;not&lt;/strong&gt; recommended either, but the other work arounds I&amp;rsquo;ve found aren&amp;rsquo;t very pretty.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;In order to make the changes available to others (or you in the future), you could force a push. This will ensure that everyone that clones the repository from there on will have the new version of the repository, be it with the deleted files or with the changes to sensitive data. It is important to note though, that &lt;strong&gt;this will only work for the people that make a fresh clone of the repository&lt;/strong&gt;. If you have other contributors and you would like them to have the new version, they will have to either fresh clone the repository again or run the commands as well before performing a pull.&lt;/p&gt;

&lt;p&gt;I want to emphasize that your other contributors should &lt;strong&gt;download a fresh clone of the repository or run the commands&lt;/strong&gt;. The problem with performing a pull for a person with the older version of the repository, is that it will merge the old commits (with the files still added or the sensitive data) with the new commits. This would result on some &amp;ldquo;duplicated&amp;rdquo; commits, and would re-add the deleted files or override the changes we&amp;rsquo;ve made. So try to be very careful with that.&lt;/p&gt;

&lt;p&gt;One last thing that I want to point out is that old commits will still remain on the remote repository, but without any references pointing to them.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;To finish this one off, I just wanted to clarify that I&amp;rsquo;ve used this mostly on personal projects or with a low number of contributors. I&amp;rsquo;ve also used these techniques when the repository is too big and has taken over &lt;strong&gt;700MB&lt;/strong&gt;, but it has been under a controlled environment.&lt;/p&gt;

&lt;p&gt;Well that&amp;rsquo;s it for now.
Remember to use this wisely and carefully! You don&amp;rsquo;t want to piss off your coworkers with funky &lt;code&gt;git log&lt;/code&gt; outputs.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails - Custom 404 and 500 pages and the exception_notification gem</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/04/27/rails-custom-404-and-500-pages-and-the-exception-notification-gem.html"/>
    <id>https://www.gonzedge.com/blog/2012/04/27/rails-custom-404-and-500-pages-and-the-exception-notification-gem.html</id>
    <published>2012-04-26T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/04/rails-custom-404-and-500-pages-and-the-exception-notification-gem"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on April 27, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As I explained before on the &lt;a href="/blog/2012/01/05/rails-3-1-adding-custom-404-and-500-error-pages.html"&gt;Rails 3.1 - Adding custom 404 and 500 error pages&lt;/a&gt; post, sometimes you might want to have a custom way to handle your not found and internal server errors. In that case we wanted to show the error with a custom template.&lt;/p&gt;

&lt;p&gt;But, what if I have an important site from which I want to be notified if there is any error raised?
There are a couple of gems for this. The one I‚Äôm most familiar with is &lt;a href="https://github.com/smartinez87/exception_notification"&gt;&lt;code&gt;exception_notification&lt;/code&gt;&lt;/a&gt; gem, which is easily configured as it is depicted on &lt;a href="https://github.com/smartinez87/exception_notification"&gt;its README&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This gem is added to the rails middleware stack and will capture any raised error and send you an email notifying about it.&lt;/p&gt;

&lt;p&gt;However, someone pointed out‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/04/rails-custom-404-and-500-pages-and-the-exception-notification-gem"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on April 27, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As I explained before on the &lt;a href="/blog/2012/01/05/rails-3-1-adding-custom-404-and-500-error-pages.html"&gt;Rails 3.1 - Adding custom 404 and 500 error pages&lt;/a&gt; post, sometimes you might want to have a custom way to handle your not found and internal server errors. In that case we wanted to show the error with a custom template.&lt;/p&gt;

&lt;p&gt;But, what if I have an important site from which I want to be notified if there is any error raised?
There are a couple of gems for this. The one I&amp;rsquo;m most familiar with is &lt;a href="https://github.com/smartinez87/exception_notification"&gt;&lt;code&gt;exception_notification&lt;/code&gt;&lt;/a&gt; gem, which is easily configured as it is depicted on &lt;a href="https://github.com/smartinez87/exception_notification"&gt;its README&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This gem is added to the rails middleware stack and will capture any raised error and send you an email notifying about it.&lt;/p&gt;

&lt;p&gt;However, someone pointed out that when you set up both the custom error pages and the exception_notification, the email is never sent. This is because the exception is captured on the &lt;code&gt;ApplicationController&lt;/code&gt; and it never gets to pass through the &lt;code&gt;ExceptionNotifier&lt;/code&gt; middleware.&lt;/p&gt;

&lt;p&gt;Thankfully, the solution for this is very simple and is described on &lt;a href="https://github.com/smartinez87/exception_notification#manually-notify-of-exception"&gt;the README&lt;/a&gt;. So, just add this method to your &lt;code&gt;application_controller.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApplicationController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActionController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;notify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;ExceptionNotifier&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Notifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;exception_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;data: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;message: &lt;/span&gt;&lt;span class="s1"&gt;'an error happened'&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nf"&gt;deliver&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And call it from both &lt;code&gt;render_404&lt;/code&gt; and &lt;code&gt;render_500&lt;/code&gt; methods:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApplicationController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActionController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;render_404&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;notify&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;render_500&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;notify&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That should do it!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rambling Trie 0.3.3 has been released!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/02/13/rambling-trie-0-3-3-has-been-released.html"/>
    <id>https://www.gonzedge.com/blog/2012/02/13/rambling-trie-0-3-3-has-been-released.html</id>
    <published>2012-02-12T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/02/rambling-trie-0-3-3-has-been-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on February 13, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The new version of the &lt;code&gt;rambling-trie&lt;/code&gt; gem is out!
As I said on &lt;a href="/blog/2012/02/10/rambling-trie-a-custom-trie-data-structure-implementation-in-ruby.html"&gt;my previous post&lt;/a&gt;, the &lt;code&gt;rambling-trie&lt;/code&gt; is an implementation of the Trie data structure in Ruby.&lt;/p&gt;

&lt;p&gt;Version 0.3.3 has several performance improvements, and I also added the code‚Äôs documentation via &lt;a href="http://yardoc.org"&gt;Yard&lt;/a&gt;.
Also, since the previous version (0.3.2), the methods &lt;code&gt;has_branch_for?&lt;/code&gt; and &lt;code&gt;is_word?&lt;/code&gt; have been fixed for the compressed trie.&lt;/p&gt;

&lt;p&gt;For the uncompressed trie, the &lt;code&gt;has_branch_for?&lt;/code&gt; and &lt;code&gt;is_word?&lt;/code&gt; methods work very fast. The compressed trie‚Äôs &lt;code&gt;is_word?&lt;/code&gt; method is as fast as it‚Äôs uncompressed counterpart, but the &lt;code&gt;has_branch_for?&lt;/code&gt; is a bit slower.&lt;/p&gt;

&lt;p&gt;I‚Äôve also added some benchmarking reports for each version of the &lt;code&gt;rambling‚Ä¶&lt;/code&gt;&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/02/rambling-trie-0-3-3-has-been-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on February 13, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The new version of the &lt;code&gt;rambling-trie&lt;/code&gt; gem is out!
As I said on &lt;a href="/blog/2012/02/10/rambling-trie-a-custom-trie-data-structure-implementation-in-ruby.html"&gt;my previous post&lt;/a&gt;, the &lt;code&gt;rambling-trie&lt;/code&gt; is an implementation of the Trie data structure in Ruby.&lt;/p&gt;

&lt;p&gt;Version 0.3.3 has several performance improvements, and I also added the code&amp;rsquo;s documentation via &lt;a href="http://yardoc.org"&gt;Yard&lt;/a&gt;.
Also, since the previous version (0.3.2), the methods &lt;code&gt;has_branch_for?&lt;/code&gt; and &lt;code&gt;is_word?&lt;/code&gt; have been fixed for the compressed trie.&lt;/p&gt;

&lt;p&gt;For the uncompressed trie, the &lt;code&gt;has_branch_for?&lt;/code&gt; and &lt;code&gt;is_word?&lt;/code&gt; methods work very fast. The compressed trie&amp;rsquo;s &lt;code&gt;is_word?&lt;/code&gt; method is as fast as it&amp;rsquo;s uncompressed counterpart, but the &lt;code&gt;has_branch_for?&lt;/code&gt; is a bit slower.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also added some benchmarking reports for each version of the &lt;code&gt;rambling-trie&lt;/code&gt; &lt;a href="https://github.com/gonzedge/rambling-trie/blob/master/reports/performance"&gt;on GitHub&lt;/a&gt;. These results show the time taken for 200,000 calls of each method for the same words.&lt;/p&gt;

&lt;p&gt;To install the latest version, simply run &lt;code&gt;gem install rambling-trie&lt;/code&gt; or include it on your &lt;code&gt;Gemfile&lt;/code&gt;. In case you have an older version already installed, run &lt;code&gt;gem update rambling-trie&lt;/code&gt;, or if you have in your &lt;code&gt;Gemfile&lt;/code&gt;, run &lt;code&gt;bundle update rambling-trie&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can see more information about how to use it on &lt;a href="https://github.com/gonzedge/rambling-trie#readme"&gt;the project&amp;rsquo;s readme on GitHub&lt;/a&gt;.
Also, you can see the API documentation on &lt;a href="http://rubydoc.info/gems/rambling-trie"&gt;the project&amp;rsquo;s page on RubyDoc.info&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Version 0.3.1 was broken, so it was yanked from the RubyGems repository.&lt;/p&gt;

&lt;hr&gt;
</content>
  </entry>
  <entry>
    <title>Rambling Trie: A custom Trie data structure implementation in Ruby</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/02/10/rambling-trie-a-custom-trie-data-structure-implementation-in-ruby.html"/>
    <id>https://www.gonzedge.com/blog/2012/02/10/rambling-trie-a-custom-trie-data-structure-implementation-in-ruby.html</id>
    <published>2012-02-09T19:00:00-05:00</published>
    <updated>2018-02-20T19:59:05-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/02/rambling-trie-a-custom-trie-data-structure-implementation-in-ruby"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on February 10, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;We‚Äôre proud to announce that our first gem is here!&lt;/p&gt;

&lt;p&gt;It‚Äôs called &lt;code&gt;rambling-trie&lt;/code&gt;, and it‚Äôs an implementation of the &lt;a href="http://en.wikipedia.org/wiki/Trie"&gt;Trie data structure&lt;/a&gt;.
A Trie is an ordered tree data structure, and it is great for managing dictionaries and for word searching and matching.&lt;/p&gt;

&lt;p&gt;Now, to install the &lt;code&gt;rambling-trie&lt;/code&gt;, you can either install it manually by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;rambling-trie
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, you can add this line to the Gemfile of your application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'rambling-trie'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a new Trie you can do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rambling-trie'&lt;/span&gt;

&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And to add a new word to the Trie, you can call this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;add_branch_from&lt;/span&gt; &lt;span class="s1"&gt;'word'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or to automatically load words from a file‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/02/rambling-trie-a-custom-trie-data-structure-implementation-in-ruby"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on February 10, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;We&amp;rsquo;re proud to announce that our first gem is here!&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s called &lt;code&gt;rambling-trie&lt;/code&gt;, and it&amp;rsquo;s an implementation of the &lt;a href="http://en.wikipedia.org/wiki/Trie"&gt;Trie data structure&lt;/a&gt;.
A Trie is an ordered tree data structure, and it is great for managing dictionaries and for word searching and matching.&lt;/p&gt;

&lt;p&gt;Now, to install the &lt;code&gt;rambling-trie&lt;/code&gt;, you can either install it manually by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;rambling-trie
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, you can add this line to the Gemfile of your application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'rambling-trie'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a new Trie you can do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rambling-trie'&lt;/span&gt;

&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And to add a new word to the Trie, you can call this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;add_branch_from&lt;/span&gt; &lt;span class="s1"&gt;'word'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or to automatically load words from a file, you can do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;trie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rambling&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Trie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="s1"&gt;'/path/to/dictionary'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, there&amp;rsquo;s a &lt;code&gt;compress!&lt;/code&gt; method which use a redundant node technique to compress the Trie and that ends up saving a lot of memory.&lt;/p&gt;

&lt;p&gt;You can find more information on how to use it on the &lt;a href="http://github.com/gonzedge/rambling-trie#readme"&gt;project&amp;rsquo;s readme on GitHub&lt;/a&gt;.
If you find any bugs or want any features, go ahead an submit them to the &lt;a href="http://github.com/gonzedge/rambling-trie/issues"&gt;project&amp;rsquo;s issues on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Implementing this data structure has helped us to learn a lot about performance and memory boosting on Ruby. The first drafts (version 0.0.1 and 0.0.2) came to life last Saturday, when we needed an efficient way to store and traverse a dictionary to search for valid words. In this stage, a 175K word dictionary was taking about 200MB on ruby 1.9.2 and 220MB on ruby 1.9.3. A lot of memory if you ask me.&lt;/p&gt;

&lt;p&gt;Version 0.1.0 was a simple API change, and then came version 0.2.0 with the memory and performance boosting. We removed some unnecessary instance variables and added the &lt;code&gt;compress!&lt;/code&gt; method and got to these results for the same 175K word dictionary: 134MB on both ruby 1.9.2 and ruby 1.9.3.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;rambling-trie&lt;/code&gt; has been thoroughly developed with BDD using RSpec.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s on a fairly stable stage right now on version 0.3.0, so you can start using it right away!
Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Writing your blog posts in Markdown with Postmarkdown</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/02/03/writing-your-blog-posts-in-markdown-with-postmarkdown.html"/>
    <id>https://www.gonzedge.com/blog/2012/02/03/writing-your-blog-posts-in-markdown-with-postmarkdown.html</id>
    <published>2012-02-02T19:00:00-05:00</published>
    <updated>2016-01-14T23:54:14-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/02/writing-your-blog-posts-in-markdown-with-postmarkdown"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on February 3, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Another thing we added to our new site, uploaded back at the end of December, was the ability to write our blog posts in &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;, which is a text-to-html tool that allows you to write formatted text without actually having to write all the corresponding HTML. Markdown is used for the project wiki pages on GitHub, and can also be used for the project‚Äôs readme file.&lt;/p&gt;

&lt;p&gt;Most of the time, I don‚Äôt like that HTML gets autogenerated for me, since I usually don‚Äôt get the results I want. We used to have the site (which was really the blog only) in WordPress, and I never used the autogenerated HTML. In fact, it was quite the opposite: I wrote every blog post in plain‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/02/writing-your-blog-posts-in-markdown-with-postmarkdown"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on February 3, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Another thing we added to our new site, uploaded back at the end of December, was the ability to write our blog posts in &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;, which is a text-to-html tool that allows you to write formatted text without actually having to write all the corresponding HTML. Markdown is used for the project wiki pages on GitHub, and can also be used for the project&amp;rsquo;s readme file.&lt;/p&gt;

&lt;p&gt;Most of the time, I don&amp;rsquo;t like that HTML gets autogenerated for me, since I usually don&amp;rsquo;t get the results I want. We used to have the site (which was really the blog only) in WordPress, and I never used the autogenerated HTML. In fact, it was quite the opposite: I wrote every blog post in plain HTML.&lt;/p&gt;

&lt;p&gt;On the other hand, with Markdown, I can get what I want most of the times. Additionally, &lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown has a beautiful Syntax&lt;/a&gt; and if there is any case where I can&amp;rsquo;t get exactly what I want, I can write &lt;strong&gt;&lt;em&gt;only the part I&amp;rsquo;m having issues with in HTML and not the whole post&lt;/em&gt;&lt;/strong&gt;. That last thing is a big win in my opinion, because I&amp;rsquo;m not restricted to use one or the other alone.&lt;/p&gt;

&lt;p&gt;Now, in order to write our blog posts in Markdown, we used a modified version of the &lt;a href="https://github.com/ennova/postmarkdown"&gt;Postmarkdown gem&lt;/a&gt;.
The gem itself is very useful out of the box and really easy to configure. To include it to your rails app, add this to your &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'postmarkdown'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run this commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;bundle &lt;span class="nb"&gt;install
&lt;/span&gt;rails generate postmarkdown:install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The posts have to be on the &lt;code&gt;app/posts&lt;/code&gt; directory. By default, the root route for the posts in your application is going to be &lt;code&gt;/posts&lt;/code&gt;. To change this, add the following line to your &lt;code&gt;config/routes.rb&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;postmarkdown&lt;/span&gt; &lt;span class="ss"&gt;as: :blog&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will change the root route to &lt;code&gt;/blog&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To generate a new post, just run this (the &lt;code&gt;--date&lt;/code&gt; parameter will default to the current time if not passed):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails generate postmarkdown:post name-of-the-post &lt;span class="nt"&gt;--date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2012-02-03
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also read more documentation about Postmarkdown in the &lt;a href="https://github.com/ennova/postmarkdown#readme"&gt;project&amp;rsquo;s readme on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We had to do some changes to the gem though. For example, by default, the gem assumes that you will write at most one post per day. This isn&amp;rsquo;t very convenient for us, since sometimes we post 3 or 4 times in one day. So, we changed the date format for both post generation and post lookup.&lt;/p&gt;

&lt;p&gt;We also added the tags to the metadata of the posts, and built some additional views, like Archives and By Tags, so that it&amp;rsquo;s a bit more complete.&lt;/p&gt;

&lt;p&gt;We had to migrate the old posts from WordPress to Markdown, but that&amp;rsquo;s a story for another post.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Migrating your blog posts to Markdown with Upmark and Nokogiri</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/02/03/migrating-your-blog-posts-to-markdown-with-upmark-and-nokogiri.html"/>
    <id>https://www.gonzedge.com/blog/2012/02/03/migrating-your-blog-posts-to-markdown-with-upmark-and-nokogiri.html</id>
    <published>2012-02-02T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/02/migrating-your-blog-posts-to-markdown-with-upmark-and-nokogiri"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on February 3, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As I said in &lt;a href="/blog/2012/02/03/writing-your-blog-posts-in-markdown-with-postmarkdown.html"&gt;my last post&lt;/a&gt;, for our new site, we changed our blog engine from WordPress to the Postmarkdown gem. At the end of that post, I mentioned that we had to migrate the old posts from WordPress to Markdown.&lt;/p&gt;

&lt;p&gt;To do this, we built a ruby script using the &lt;a href="https://github.com/conversation/upmark"&gt;Upmark gem&lt;/a&gt; and the &lt;a href="http://nokogiri.org/"&gt;Nokogiri gem&lt;/a&gt;. Nokogiri is used for HTML and XML parsing, among other things, while Upmark is used to generate Markdown from a given HTML.&lt;/p&gt;

&lt;p&gt;First, we exported our old blog posts from WordPress to an XML file that looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. --&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;rss&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/02/migrating-your-blog-posts-to-markdown-with-upmark-and-nokogiri"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on February 3, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As I said in &lt;a href="/blog/2012/02/03/writing-your-blog-posts-in-markdown-with-postmarkdown.html"&gt;my last post&lt;/a&gt;, for our new site, we changed our blog engine from WordPress to the Postmarkdown gem. At the end of that post, I mentioned that we had to migrate the old posts from WordPress to Markdown.&lt;/p&gt;

&lt;p&gt;To do this, we built a ruby script using the &lt;a href="https://github.com/conversation/upmark"&gt;Upmark gem&lt;/a&gt; and the &lt;a href="http://nokogiri.org/"&gt;Nokogiri gem&lt;/a&gt;. Nokogiri is used for HTML and XML parsing, among other things, while Upmark is used to generate Markdown from a given HTML.&lt;/p&gt;

&lt;p&gt;First, we exported our old blog posts from WordPress to an XML file that looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. --&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;rss&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;"2.0"&lt;/span&gt;
     &lt;span class="na"&gt;xmlns:excerpt=&lt;/span&gt;&lt;span class="s"&gt;"http://wordpress.org/export/1.1/excerpt/"&lt;/span&gt;
     &lt;span class="na"&gt;xmlns:content=&lt;/span&gt;&lt;span class="s"&gt;"http://purl.org/rss/1.0/modules/content/"&lt;/span&gt;
     &lt;span class="na"&gt;xmlns:wfw=&lt;/span&gt;&lt;span class="s"&gt;"http://wellformedweb.org/CommentAPI/"&lt;/span&gt;
     &lt;span class="na"&gt;xmlns:dc=&lt;/span&gt;&lt;span class="s"&gt;"http://purl.org/dc/elements/1.1/"&lt;/span&gt;
     &lt;span class="na"&gt;xmlns:wp=&lt;/span&gt;&lt;span class="s"&gt;"http://wordpress.org/export/1.1/"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Rambling Labs&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&amp;gt;&lt;/span&gt;http://www.ramblinglabs.com&lt;span class="nt"&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;description&amp;gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;Fri, 23 Dec 2011 18:49:41 +0000&lt;span class="nt"&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;language&amp;gt;&lt;/span&gt;en&lt;span class="nt"&gt;&amp;lt;/language&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;wp:wxr_version&amp;gt;&lt;/span&gt;1.1&lt;span class="nt"&gt;&amp;lt;/wp:wxr_version&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;wp:base_site_url&amp;gt;&lt;/span&gt;http://www.ramblinglabs.com&lt;span class="nt"&gt;&amp;lt;/wp:base_site_url&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;wp:base_blog_url&amp;gt;&lt;/span&gt;http://www.ramblinglabs.com&lt;span class="nt"&gt;&amp;lt;/wp:base_blog_url&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- Several items in the following format --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;The Name of the post&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;link&amp;gt;&lt;/span&gt;http://www.ramblinglabs.com/2012/12/the-name-of-the-post/&lt;span class="nt"&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;Mon, 05 Dec 2011 19:30:17 +0000&lt;span class="nt"&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;dc:creator&amp;gt;&lt;/span&gt;the_creator&lt;span class="nt"&gt;&amp;lt;/dc:creator&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;guid&lt;/span&gt; &lt;span class="na"&gt;isPermaLink=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;http://www.ramblinglabs.com/?p=8&lt;span class="nt"&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;description&amp;gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;content:encoded&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;![CDATA[&amp;lt;!-- A lot of HTML --&amp;gt;]]&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/content:encoded&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/rss&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, on the script, we read the items with Nokogiri:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"export.xml"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Nokogiri&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;XML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"//channel//item"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that, we migrate the HTML to Markdown with Upmark:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="c1"&gt;# ...&lt;/span&gt;
  &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Upmark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;at_xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content:encoded"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally, write the appropriate files (in &lt;code&gt;app/posts&lt;/code&gt; for Postmarkdown) with these lines, inside the loop as well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="n"&gt;date_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;at_xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"wp:post_date_gmt"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;" +0000"&lt;/span&gt;
    &lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;at_xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"wp:post_name"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strip&lt;/span&gt;

    &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date_str&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;utc&lt;/span&gt;
    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"%Y-%m-%d-%H%M%S-"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;".markdown"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'app/posts/'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;

    &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pretty cool, huh?!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1: Treating your '.swf' files as assets</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/01/12/rails-3-1-treating-your-swf-files-as-assets.html"/>
    <id>https://www.gonzedge.com/blog/2012/01/12/rails-3-1-treating-your-swf-files-as-assets.html</id>
    <published>2012-01-11T19:00:00-05:00</published>
    <updated>2016-01-14T23:54:09-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/rails-3-1-treating-your-swf-files-as-assets"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 12, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This week, I‚Äôve been deploying one of my current Ruby on Rails projects to &lt;a href="http://webfaction.com"&gt;WebFaction&lt;/a&gt;.
For what we found, it‚Äôs definitely one of the best options out there for shared hosting with Python and Ruby.&lt;/p&gt;

&lt;p&gt;The application being deployed happened to contain some static flash content (not my idea of course :P), which so far we had put in the &lt;code&gt;public/&lt;/code&gt; directory and had served with no problems so far, while testing locally and on Heroku. However, when we were testing it out on WebFaction, it kept returning 404 errors.&lt;/p&gt;

&lt;p&gt;So, googling for a while, I stumbled into the &lt;a href="https://github.com/marcandre/swf_fu"&gt;swf_fu gem&lt;/a&gt;. It‚Äôs main function is to treat the swf objects as just another asset in the application. So,‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/rails-3-1-treating-your-swf-files-as-assets"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 12, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This week, I&amp;rsquo;ve been deploying one of my current Ruby on Rails projects to &lt;a href="http://webfaction.com"&gt;WebFaction&lt;/a&gt;.
For what we found, it&amp;rsquo;s definitely one of the best options out there for shared hosting with Python and Ruby.&lt;/p&gt;

&lt;p&gt;The application being deployed happened to contain some static flash content (not my idea of course :P), which so far we had put in the &lt;code&gt;public/&lt;/code&gt; directory and had served with no problems so far, while testing locally and on Heroku. However, when we were testing it out on WebFaction, it kept returning 404 errors.&lt;/p&gt;

&lt;p&gt;So, googling for a while, I stumbled into the &lt;a href="https://github.com/marcandre/swf_fu"&gt;swf_fu gem&lt;/a&gt;. It&amp;rsquo;s main function is to treat the swf objects as just another asset in the application. So, I added the following line to the &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'swf_fu'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I executed &lt;code&gt;bundle install&lt;/code&gt;, created a &lt;code&gt;swfs&lt;/code&gt; directory on &lt;code&gt;app/assets&lt;/code&gt; and moved all my &lt;code&gt;.swf&lt;/code&gt; files into that directory.
That was it!&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;swf_fu&lt;/code&gt; gem also offers some cool helper methods to get the &lt;code&gt;.swf&lt;/code&gt; files through the &lt;code&gt;swfobject.js&lt;/code&gt; library.&lt;/p&gt;

&lt;p&gt;Go ahead and try it out!
This has saved me some headaches today!&lt;/p&gt;

&lt;p&gt;Enjoy! :D&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider v0.3.1 is out!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/01/07/jquery-rambling-slider-v0-3-1-is-out.html"/>
    <id>https://www.gonzedge.com/blog/2012/01/07/jquery-rambling-slider-v0-3-1-is-out.html</id>
    <published>2012-01-06T19:00:00-05:00</published>
    <updated>2018-02-20T19:05:47-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/jquery-rambling-slider-v0-3-1-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 7, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Version 0.3.1 of the jQuery Rambling Slider has been released!
You can &lt;a href="https://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.3.1.zip"&gt;download it from GitHub&lt;/a&gt; and test it out.&lt;/p&gt;

&lt;p&gt;The latest documentation of the jQuery Rambling Slider can be found &lt;a href="https://github.com/gonzedge/rambling.slider/wiki"&gt;on the project‚Äôs wiki on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There was an issue with the slider not working on IE 8, due to an undefined function.
I have to thank the people that emailed me about it.
Because of them I was able to spot the issue and fix it!&lt;/p&gt;

&lt;p&gt;This release includes the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Removed dev7 logo and added RamblingLabs logo.&lt;/li&gt;
&lt;li&gt;Added the box and slice generators.&lt;/li&gt;
&lt;li&gt;Removed some unnecessary &lt;code&gt;px&lt;/code&gt; suffixes (&lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;indexOf&lt;/code&gt; issue with IE 8.&lt;/li&gt;
&lt;li&gt;Some additional refactoring.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/jquery-rambling-slider-v0-3-1-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 7, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Version 0.3.1 of the jQuery Rambling Slider has been released!
You can &lt;a href="https://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.3.1.zip"&gt;download it from GitHub&lt;/a&gt; and test it out.&lt;/p&gt;

&lt;p&gt;The latest documentation of the jQuery Rambling Slider can be found &lt;a href="https://github.com/gonzedge/rambling.slider/wiki"&gt;on the project&amp;rsquo;s wiki on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There was an issue with the slider not working on IE 8, due to an undefined function.
I have to thank the people that emailed me about it.
Because of them I was able to spot the issue and fix it!&lt;/p&gt;

&lt;p&gt;This release includes the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Removed dev7 logo and added RamblingLabs logo.&lt;/li&gt;
&lt;li&gt;Added the box and slice generators.&lt;/li&gt;
&lt;li&gt;Removed some unnecessary &lt;code&gt;px&lt;/code&gt; suffixes (&lt;code&gt;top&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;indexOf&lt;/code&gt; issue with IE 8.&lt;/li&gt;
&lt;li&gt;Some additional refactoring.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you find any issues, go ahead and &lt;a href="https://github.com/gonzedge/rambling.slider/issues"&gt;submit an issue on GitHub&lt;/a&gt;.
If you have any questions or want some additional support, don&amp;rsquo;t be afraid to send us an email to &lt;a href="mailto:development@ramblinglabs.com"&gt;development@ramblinglabs.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lots of stuff still pending!
I have been working on migrating the project&amp;rsquo;s format so that it is supported by the new jQuery plugins site currently being developed (&lt;a href="http://github.com/jquery/plugins.jquery.com"&gt;watch it&amp;rsquo;s progress on GitHub&lt;/a&gt;). I&amp;rsquo;ll be posting about this soon.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m currently working on the project&amp;rsquo;s home page and I&amp;rsquo;m very excited about it.
So, let&amp;rsquo;s see if we can move closer to the project&amp;rsquo;s home page release and to version 1.0.0 in the next couple of weeks!&lt;/p&gt;

&lt;p&gt;Enjoy! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1 - Adding custom 404 and 500 error pages</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/01/05/rails-3-1-adding-custom-404-and-500-error-pages.html"/>
    <id>https://www.gonzedge.com/blog/2012/01/05/rails-3-1-adding-custom-404-and-500-error-pages.html</id>
    <published>2012-01-04T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/rails-3-1-adding-custom-404-and-500-error-pages"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 5, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As I said when &lt;a href="/blog/2011/12/30/new-look-for-rambling-labs.html"&gt;announcing the Rambling Labs new site&lt;/a&gt;, we‚Äôve been learning &lt;a href="/blog/tags/new-site.html"&gt;a &lt;strong&gt;lot&lt;/strong&gt; of stuff&lt;/a&gt; while building it.&lt;/p&gt;

&lt;p&gt;Something that we didn‚Äôt have the chance to implement on our current projects (but that we will be including soon), is adding custom error pages to the site. So far, what we were looking for was two things: a custom 404 error page and a custom generic 500 error page.&lt;/p&gt;

&lt;p&gt;For the experience I have now with Rails, I thought this would be a piece of cake. Well, in fact‚Ä¶ it would‚Äôve been if we were using Rails 2. But guess what? The error handling behavior in Rails 3 is not what you would expect. Even worse, it‚Äôs broken for routing errors!&lt;/p&gt;

&lt;p&gt;For what I could‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/rails-3-1-adding-custom-404-and-500-error-pages"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 5, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As I said when &lt;a href="/blog/2011/12/30/new-look-for-rambling-labs.html"&gt;announcing the Rambling Labs new site&lt;/a&gt;, we&amp;rsquo;ve been learning &lt;a href="/blog/tags/new-site.html"&gt;a &lt;strong&gt;lot&lt;/strong&gt; of stuff&lt;/a&gt; while building it.&lt;/p&gt;

&lt;p&gt;Something that we didn&amp;rsquo;t have the chance to implement on our current projects (but that we will be including soon), is adding custom error pages to the site. So far, what we were looking for was two things: a custom 404 error page and a custom generic 500 error page.&lt;/p&gt;

&lt;p&gt;For the experience I have now with Rails, I thought this would be a piece of cake. Well, in fact&amp;hellip; it would&amp;rsquo;ve been if we were using Rails 2. But guess what? The error handling behavior in Rails 3 is not what you would expect. Even worse, it&amp;rsquo;s broken for routing errors!&lt;/p&gt;

&lt;p&gt;For what I could find on StackOverflow (&lt;a href="http://stackoverflow.com/questions/4260778/rails-3-customizing-the-error-404-pages"&gt;question 1&lt;/a&gt;, &lt;a href="http://stackoverflow.com/questions/5331008/dynamic-error-pages-in-rails-3"&gt;question 2&lt;/a&gt;), in order to handle errors in a rails 3 application, this is what you have to add to the &lt;code&gt;ApplicationController&lt;/code&gt;:&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;render_error&lt;/code&gt; method was missing the layouts, so a funky error happened when using nested templates.
The code for &lt;code&gt;ApplicationController&lt;/code&gt; has been updated.&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE September 23rd, 2012&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some refactoring made to the &lt;code&gt;ApplicationController&lt;/code&gt;, &lt;a href="http://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;DRYing&lt;/a&gt; up.
Thanks to Alexey for &lt;a href="http://www.ramblinglabs.com/blog/2012/01/05/rails-3-1-adding-custom-404-and-500-error-pages.html"&gt;his suggestion on the comments&lt;/a&gt;!&lt;/p&gt;

&lt;hr&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ApplicationController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActionController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;consider_all_requests_local&lt;/span&gt;
    &lt;span class="n"&gt;rescue_from&lt;/span&gt; &lt;span class="no"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;render_error&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;rescue_from&lt;/span&gt; &lt;span class="no"&gt;ActionController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RoutingError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ActionController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;UnknownController&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;AbstractController&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;ActionNotFound&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RecordNotFound&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;with: &lt;/span&gt;&lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;render_error&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;render_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;respond_to&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;template: &lt;/span&gt;&lt;span class="s2"&gt;"errors/error_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;layout: &lt;/span&gt;&lt;span class="s1"&gt;'layouts/application'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;nothing: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But, as I said before, this doesn&amp;rsquo;t work for routing errors. To solve this, first generate the &lt;code&gt;ErrorsController&lt;/code&gt; and the &lt;code&gt;error_404&lt;/code&gt; and &lt;code&gt;error_500&lt;/code&gt; views with this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails generate controller errors error_404 error_500
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add this to your just generated &lt;code&gt;ErrorsController&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ErrorsController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;error_404&lt;/span&gt;
    &lt;span class="vi"&gt;@not_found_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:not_found&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;error_500&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, customize the &lt;code&gt;error_404.html.erb&lt;/code&gt; and &lt;code&gt;error_500.html.erb&lt;/code&gt; views (&lt;code&gt;error_404.html.haml&lt;/code&gt; and &lt;code&gt;error_500.html.haml&lt;/code&gt; in my case) in the &lt;code&gt;app/views/errors&lt;/code&gt; directory. This is what I got for the &lt;code&gt;error_404&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight haml"&gt;&lt;code&gt;&lt;span class="nt"&gt;%h2&lt;/span&gt; 404
&lt;span class="nt"&gt;%div&lt;/span&gt;
  &lt;span class="nt"&gt;%h3&lt;/span&gt; We're sorry
  &lt;span class="nt"&gt;%p&lt;/span&gt;
    The content that you requested could not be found.
  &lt;span class="nt"&gt;%p&lt;/span&gt;
    You tried to access '&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@not_found_path&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;', which is not a valid page.
  &lt;span class="nt"&gt;%p&lt;/span&gt;
    Want to
    &lt;span class="nt"&gt;%a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;href: &lt;/span&gt;&lt;span class="n"&gt;root_path&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; go back to our home page
    and try again?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, add these lines at the end of your &lt;code&gt;config/routes.rb&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;consider_all_requests_local&lt;/span&gt;
    &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="s1"&gt;'*not_found'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: &lt;/span&gt;&lt;span class="s1"&gt;'errors#error_404'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And remove these two routes from the &lt;code&gt;config/routes.rb&lt;/code&gt; file, since they are unnecessary:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;"errors/error_404"&lt;/span&gt;
  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="s2"&gt;"errors/error_500"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One last thing.
The errors are not shown on development, so to test them out and make sure that they work as expected, temporarily remove the &lt;code&gt;Rails.application.config.consider_all_requests_local&lt;/code&gt; condition from both the &lt;code&gt;config/routes.rb&lt;/code&gt; and the &lt;code&gt;app/controllers/application_controller.rb&lt;/code&gt; files.&lt;/p&gt;

&lt;p&gt;That should do it for now!&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t forget to write the tests for your &lt;code&gt;ErrorsController&lt;/code&gt; and add the &lt;code&gt;consider_all_requests_local&lt;/code&gt; condition again.&lt;/p&gt;

&lt;p&gt;Enjoy! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Replacing ERb with HAML on your Rails application generators</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/01/05/replacing-erb-with-haml-on-your-rails-application-generators.html"/>
    <id>https://www.gonzedge.com/blog/2012/01/05/replacing-erb-with-haml-on-your-rails-application-generators.html</id>
    <published>2012-01-04T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/replacing-erb-with-haml-on-your-rails-application-generators"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 5, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know, &lt;a href="/blog/2012/01/04/writing-elegant-html-with-haml.html"&gt;we‚Äôve been using HAML lately&lt;/a&gt; for our views.&lt;/p&gt;

&lt;p&gt;Since I don‚Äôt plan to use ERb for my views anytime soon, I want &lt;a href="http://haml-lang.com"&gt;HAML&lt;/a&gt; to fit in as smoothly as possible.
Luckily, there is a way to replace ERb as the default generated view.&lt;/p&gt;

&lt;p&gt;Just add this line to your &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'haml-rails'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And you should be good to go!&lt;/p&gt;

&lt;p&gt;Now, when you run &lt;code&gt;rails generate controller test method_one method_two&lt;/code&gt;, you should see something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;      &lt;span class="c"&gt;# ...&lt;/span&gt;
      invoke haml
      create app/views/test
      create app/views/test/method_one.html.haml
      create app/views/test/method_two.html.haml
      &lt;span class="c"&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Way easier than what I thought it would be. But you know, that‚Äôs‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/replacing-erb-with-haml-on-your-rails-application-generators"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 5, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know, &lt;a href="/blog/2012/01/04/writing-elegant-html-with-haml.html"&gt;we&amp;rsquo;ve been using HAML lately&lt;/a&gt; for our views.&lt;/p&gt;

&lt;p&gt;Since I don&amp;rsquo;t plan to use ERb for my views anytime soon, I want &lt;a href="http://haml-lang.com"&gt;HAML&lt;/a&gt; to fit in as smoothly as possible.
Luckily, there is a way to replace ERb as the default generated view.&lt;/p&gt;

&lt;p&gt;Just add this line to your &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'haml-rails'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And you should be good to go!&lt;/p&gt;

&lt;p&gt;Now, when you run &lt;code&gt;rails generate controller test method_one method_two&lt;/code&gt;, you should see something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;      &lt;span class="c"&gt;# ...&lt;/span&gt;
      invoke haml
      create app/views/test
      create app/views/test/method_one.html.haml
      create app/views/test/method_two.html.haml
      &lt;span class="c"&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Way easier than what I thought it would be. But you know, that&amp;rsquo;s why I love the Ruby and Rails communities.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Writing elegant HTML with HAML</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/01/04/writing-elegant-html-with-haml.html"/>
    <id>https://www.gonzedge.com/blog/2012/01/04/writing-elegant-html-with-haml.html</id>
    <published>2012-01-03T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:56-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/writing-elegant-html-with-haml"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 4, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Another cool thing that we learned while building the new Rambling Labs site was &lt;a href="http://haml-lang.com"&gt;HAML&lt;/a&gt;.
It‚Äôs a markup language that is based on the premise that ‚ÄòMarkup should be beautiful‚Äô, in their own words.&lt;/p&gt;

&lt;p&gt;It‚Äôs very easy to install, just add &lt;code&gt;gem 'haml'&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt; and run &lt;code&gt;bundle install&lt;/code&gt;. To use it, replace your &lt;code&gt;view_name.html.erb&lt;/code&gt; file with a &lt;code&gt;view_name.html.haml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Like &lt;a href="http://sass-lang.com"&gt;SASS&lt;/a&gt; and &lt;a href="http://coffeescript.org"&gt;CoffeeScript&lt;/a&gt;, to achieve the beauty it professes, HAML uses indentation to determine what it should do next. This means, and you guessed it, that it writes beautifully.&lt;/p&gt;

&lt;p&gt;Compare this ERb file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"single_post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post_title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/writing-elegant-html-with-haml"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 4, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Another cool thing that we learned while building the new Rambling Labs site was &lt;a href="http://haml-lang.com"&gt;HAML&lt;/a&gt;.
It&amp;rsquo;s a markup language that is based on the premise that &amp;lsquo;Markup should be beautiful&amp;rsquo;, in their own words.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s very easy to install, just add &lt;code&gt;gem &amp;#39;haml&amp;#39;&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt; and run &lt;code&gt;bundle install&lt;/code&gt;. To use it, replace your &lt;code&gt;view_name.html.erb&lt;/code&gt; file with a &lt;code&gt;view_name.html.haml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Like &lt;a href="http://sass-lang.com"&gt;SASS&lt;/a&gt; and &lt;a href="http://coffeescript.org"&gt;CoffeeScript&lt;/a&gt;, to achieve the beauty it professes, HAML uses indentation to determine what it should do next. This means, and you guessed it, that it writes beautifully.&lt;/p&gt;

&lt;p&gt;Compare this ERb file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"single_post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post_title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post_content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post_date"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      Posted on &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strftime&lt;/span&gt; &lt;span class="s1"&gt;'%e %B %Y'&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"posted_by"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      By: &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;author&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comments_number"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;comment_count&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;summary_html&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        Continue Reading &lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;content_html&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post_tags"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;tag_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To this HAML file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight haml"&gt;&lt;code&gt;&lt;span class="nf"&gt;#single_post&lt;/span&gt;
  &lt;span class="nt"&gt;%h2&lt;/span&gt;&lt;span class="nc"&gt;.post_title&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;
  &lt;span class="nc"&gt;.post_content&lt;/span&gt;
    &lt;span class="nc"&gt;.post_date&lt;/span&gt;
      Posted on &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strftime&lt;/span&gt; &lt;span class="s1"&gt;'%e %B %Y'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.posted_by&lt;/span&gt;
      By: &lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;author&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.comments_number&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;comment_count&lt;/span&gt;
    &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;
      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;summary_html&lt;/span&gt;
      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        Continue Reading &lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt;
    &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;content_html&lt;/span&gt;
    &lt;span class="nt"&gt;%ul&lt;/span&gt;&lt;span class="nc"&gt;.post_tags&lt;/span&gt;
      &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="nt"&gt;%li&lt;/span&gt;
          &lt;span class="nt"&gt;%a&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;href: &lt;/span&gt;&lt;span class="s2"&gt;"/blog/tag/#{tag.name}"&lt;/span&gt;&lt;span class="p"&gt;}=&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just beautiful, right?&lt;/p&gt;

&lt;p&gt;Note that the closing tags as well as the closing &lt;code&gt;end&lt;/code&gt; keywords are thrown away, by convention the default element is &lt;code&gt;div&lt;/code&gt;, in order to execute ruby, the statement is preceeded by &lt;code&gt;-&lt;/code&gt;, and to print the result of a ruby statement both the &lt;code&gt;=&lt;/code&gt; and the &lt;code&gt;#{}&lt;/code&gt; are used.&lt;/p&gt;

&lt;p&gt;I just love it!&lt;/p&gt;

&lt;p&gt;Nevertheless, for what I&amp;rsquo;ve read on the web, some people are against using HAML. Some say that ERb is more natural for people crossing between languages, which might be true. Others just don&amp;rsquo;t see the point of &amp;lsquo;having to learn something more&amp;rsquo; (same happens with CoffeeScript). This latter opinion I consider an invalid reason. As a programmer, you should always be challenging yourself, be it within your regular tools or within new ones.&lt;/p&gt;

&lt;p&gt;It is true, though, that unlike SASS, HAML and CoffeeScript don&amp;rsquo;t add functionality that can&amp;rsquo;t be achieved with ERb and JavaScript, but I don&amp;rsquo;t think that should be a show stopper. If you think otherwise, be my guest.&lt;/p&gt;

&lt;p&gt;Be sure to add this tool to your toolbox!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Generating your site menu with the 'simple-navigation' gem</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2012/01/03/generating-your-site-menu-with-the-simple-navigation-gem.html"/>
    <id>https://www.gonzedge.com/blog/2012/01/03/generating-your-site-menu-with-the-simple-navigation-gem.html</id>
    <published>2012-01-02T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:55-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/generating-your-site-menu-with-the-simple-navigation-gem"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 3, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One of the cool things I learned while building our new site was how to generate your site navigation menu without having to do the highlighting logic yourself.&lt;/p&gt;

&lt;p&gt;There‚Äôs a great gem out there for this called &lt;code&gt;simple-navigation&lt;/code&gt;, which you can &lt;a href="https://github.com/andi/simple-navigation"&gt;find on GitHub&lt;/a&gt;.
It‚Äôs easy to set up and use, so you will probably do what you need to do really quick. To install, add it to your rails application &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'simple-navigation'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run &lt;code&gt;bundle install&lt;/code&gt;. After it‚Äôs installed, generate the configuration file for it, which will be the &lt;code&gt;config/navigation.rb&lt;/code&gt;, with the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails generate navigation_config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go ahead and open the &lt;code&gt;config/navigation.rb&lt;/code&gt; file, and add your‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2012/01/generating-your-site-menu-with-the-simple-navigation-gem"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on January 3, 2012.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One of the cool things I learned while building our new site was how to generate your site navigation menu without having to do the highlighting logic yourself.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a great gem out there for this called &lt;code&gt;simple-navigation&lt;/code&gt;, which you can &lt;a href="https://github.com/andi/simple-navigation"&gt;find on GitHub&lt;/a&gt;.
It&amp;rsquo;s easy to set up and use, so you will probably do what you need to do really quick. To install, add it to your rails application &lt;code&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'simple-navigation'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run &lt;code&gt;bundle install&lt;/code&gt;. After it&amp;rsquo;s installed, generate the configuration file for it, which will be the &lt;code&gt;config/navigation.rb&lt;/code&gt;, with the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails generate navigation_config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go ahead and open the &lt;code&gt;config/navigation.rb&lt;/code&gt; file, and add your navigation items, which in my case is the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;SimpleNavigation&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Configuration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;run&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;selected_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'current'&lt;/span&gt;
  &lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;items&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;item&lt;/span&gt; &lt;span class="ss"&gt;:menu_home&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Home'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;root_path&lt;/span&gt;
    &lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;item&lt;/span&gt; &lt;span class="ss"&gt;:menu_about_us&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'About Us'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;about_us_path&lt;/span&gt;
    &lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;item&lt;/span&gt; &lt;span class="ss"&gt;:menu_blog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Blog'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;posts_path&lt;/span&gt;
    &lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;item&lt;/span&gt; &lt;span class="ss"&gt;:menu_contact_us&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Contact Us'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contact_us_path&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you may have noticed, I don&amp;rsquo;t have to specify when to be highlighted. This is because the gem assumes, by convention, that each navigation item will only be highlighted when its url matches the current url being accessed. Great! That&amp;rsquo;s less navigation code for me to write.&lt;/p&gt;

&lt;p&gt;Ah, but wait, I want my blog navigation item to be highlighted whenever your accessing any url under &lt;code&gt;/blog&lt;/code&gt;. Fair enough, &lt;code&gt;simple-navigation&lt;/code&gt; supports a &lt;code&gt;highlights_on&lt;/code&gt; option, which can be passed either a regular expression to match with the current url or a lambda that will determine if it&amp;rsquo;s highlighted. I changed the blog navigation to this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;items&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;item&lt;/span&gt; &lt;span class="ss"&gt;:menu_blog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Blog'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;posts_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;highlights_on: &lt;/span&gt;&lt;span class="sr"&gt;/\/blog/&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where they completely bought me in was with the navigation rendering. To render your navigation menu, just write this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;render_navigation&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;rsquo;s it!
Awesome, right?&lt;/p&gt;

&lt;p&gt;In case you want to define navigation levels, just pass a block to the &lt;code&gt;primary.item&lt;/code&gt; definition, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;navigation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;items&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="n"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;item&lt;/span&gt; &lt;span class="ss"&gt;:menu_blog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Blog'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;posts_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;highlights_on: &lt;/span&gt;&lt;span class="sr"&gt;/\/blog/&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;item&lt;/span&gt; &lt;span class="ss"&gt;:menu_popular&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Popular'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;popular_posts_path&lt;/span&gt;
      &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;item&lt;/span&gt; &lt;span class="ss"&gt;:menu_recent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Recent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recent_posts_path&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can find more documentation on the &lt;a href="https://github.com/andi/simple-navigation/wiki"&gt;simple navigation&amp;rsquo;s wiki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>New look for Rambling Labs!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/12/30/new-look-for-rambling-labs.html"/>
    <id>https://www.gonzedge.com/blog/2011/12/30/new-look-for-rambling-labs.html</id>
    <published>2011-12-29T19:00:00-05:00</published>
    <updated>2018-02-20T18:42:14-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/12/new-look-for-rambling-labs"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on December 30, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may have noticed, our logo, our favicon, and our site and blog have a new look.
We have added a pretty &lt;a href="http://www.ramblinglabs.com"&gt;Home page&lt;/a&gt;, a cool &lt;a href="http://www.ramblinglabs.com/contact-us"&gt;Contact page&lt;/a&gt; and an informative &lt;a href="http://www.ramblinglabs.com/about-us"&gt;About us page&lt;/a&gt;.
Also, the blog has moved from it‚Äôs original location at the root of the ramblinglabs.com domain to &lt;a href="http://www.ramblinglabs.com/blog"&gt;ramblinglabs.com/blog&lt;/a&gt;. Every old blog post link and blog tag link has been taken care of and redirects to the new location.&lt;/p&gt;

&lt;p&gt;The site is gonna be used as our portfolio site, and will be our first thing to show to our customers.
We plan to use it as the center of our developed products and projects.
But, hey, don‚Äôt worry, we won‚Äôt stop blogging!&lt;/p&gt;

&lt;p&gt;How the site came to be for the first time‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/12/new-look-for-rambling-labs"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on December 30, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may have noticed, our logo, our favicon, and our site and blog have a new look.
We have added a pretty &lt;a href="http://www.ramblinglabs.com"&gt;Home page&lt;/a&gt;, a cool &lt;a href="http://www.ramblinglabs.com/contact-us"&gt;Contact page&lt;/a&gt; and an informative &lt;a href="http://www.ramblinglabs.com/about-us"&gt;About us page&lt;/a&gt;.
Also, the blog has moved from it&amp;rsquo;s original location at the root of the ramblinglabs.com domain to &lt;a href="http://www.ramblinglabs.com/blog"&gt;ramblinglabs.com/blog&lt;/a&gt;. Every old blog post link and blog tag link has been taken care of and redirects to the new location.&lt;/p&gt;

&lt;p&gt;The site is gonna be used as our portfolio site, and will be our first thing to show to our customers.
We plan to use it as the center of our developed products and projects.
But, hey, don&amp;rsquo;t worry, we won&amp;rsquo;t stop blogging!&lt;/p&gt;

&lt;p&gt;How the site came to be for the first time, a few months ago, is a funny story. My partner told me that we should start blogging. I wasn&amp;rsquo;t quite amused with the idea, and I didn&amp;rsquo;t want to be a part of it. But when I was shown the actual blog, I got all excited and asked to be included again. Then, I blogged once, and didn&amp;rsquo;t blog again for about two months. Yet, here I am now.&lt;/p&gt;

&lt;p&gt;This has been an interesting journey, and I want it to continue like this.
We have plenty of ideas and will be updating the site frequently with new posts, more information and new pages.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve had enormous fun building this site.
Personally, I&amp;rsquo;ve learned a lot more about rails and some gems out there (which we will be posting about soon).&lt;/p&gt;

&lt;p&gt;If you happen to find a bug or have any suggestion, please contact us at &lt;a href="mailto:development@ramblinglabs.com"&gt;development@ramblinglabs.com&lt;/a&gt;.
We will be glad to hear from you.&lt;/p&gt;

&lt;p&gt;Enjoy our new look!
We certainly are enjoying it!&lt;/p&gt;

&lt;p&gt;:)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider v0.3.0 released!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/12/28/jquery-rambling-slider-v0-3-0-released.html"/>
    <id>https://www.gonzedge.com/blog/2011/12/28/jquery-rambling-slider-v0-3-0-released.html</id>
    <published>2011-12-27T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:53-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/12/jquery-rambling-slider-v0-3-0-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on December 28, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Version 0.3.0 of the jQuery Rambling Slider is out!
Well‚Ä¶ it‚Äôs been out for a while now (a couple of weeks), but I haven‚Äôt had the time to write the post for it :/.
You can &lt;a href="https://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.3.0.zip"&gt;download it from GitHub.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically added a lot of tests and some transitions. I also removed and/or changed some of the transitions, so I will be updating the documentation soon (wiki). This release includes these features and fixes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Changed file combining order logic.&lt;/li&gt;
&lt;li&gt;Migrated the styles to Sassy stylesheets.&lt;/li&gt;
&lt;li&gt;Tweaked theme method to change it for all containers as well.&lt;/li&gt;
&lt;li&gt;Fixed glitch on image to flash transitions.&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;'this' is not a function&lt;/code&gt; issue for flash transitions.&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;slider‚Ä¶&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/12/jquery-rambling-slider-v0-3-0-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on December 28, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Version 0.3.0 of the jQuery Rambling Slider is out!
Well&amp;hellip; it&amp;rsquo;s been out for a while now (a couple of weeks), but I haven&amp;rsquo;t had the time to write the post for it :/.
You can &lt;a href="https://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.3.0.zip"&gt;download it from GitHub.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically added a lot of tests and some transitions. I also removed and/or changed some of the transitions, so I will be updating the documentation soon (wiki). This release includes these features and fixes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Changed file combining order logic.&lt;/li&gt;
&lt;li&gt;Migrated the styles to Sassy stylesheets.&lt;/li&gt;
&lt;li&gt;Tweaked theme method to change it for all containers as well.&lt;/li&gt;
&lt;li&gt;Fixed glitch on image to flash transitions.&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;&amp;#39;this&amp;#39; is not a function&lt;/code&gt; issue for flash transitions.&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;slider already initialized&lt;/code&gt; not thrown when no options passed. Refactored.&lt;/li&gt;
&lt;li&gt;Added tests for the &lt;code&gt;animateBoxesIn2d&lt;/code&gt; helper function.&lt;/li&gt;
&lt;li&gt;Refactored the cake tasks.&lt;/li&gt;
&lt;li&gt;Removed the &lt;code&gt;boxRandom&lt;/code&gt;, same as &lt;code&gt;boxRainRandom&lt;/code&gt; transition.&lt;/li&gt;
&lt;li&gt;Fixed &lt;code&gt;boxRain&lt;/code&gt; and &lt;code&gt;boxGrow&lt;/code&gt; transition groups, added the &lt;code&gt;Forward&lt;/code&gt; suffix.&lt;/li&gt;
&lt;li&gt;Renamed and refactored the &lt;code&gt;boxRainGrow&lt;/code&gt; to &lt;code&gt;boxGrow&lt;/code&gt;. Added the &lt;code&gt;boxRainRandom&lt;/code&gt; and &lt;code&gt;boxGrowRandom&lt;/code&gt; transitions.&lt;/li&gt;
&lt;li&gt;Added tests for &lt;code&gt;boxRandom&lt;/code&gt;, &lt;code&gt;boxRain&lt;/code&gt;, &lt;code&gt;boxRainReverse&lt;/code&gt;, &lt;code&gt;boxRainOutIn&lt;/code&gt;, &lt;code&gt;boxRainInOut&lt;/code&gt;, &lt;code&gt;boxRainGrow&lt;/code&gt;, &lt;code&gt;boxRainGrowReverse&lt;/code&gt;, &lt;code&gt;boxRainGrowOutIn&lt;/code&gt; and &lt;code&gt;boxRainGrowInOut&lt;/code&gt; transitions.&lt;/li&gt;
&lt;li&gt;Fixed bug with transition group names.&lt;/li&gt;
&lt;li&gt;Added tests for &lt;code&gt;fadeIn&lt;/code&gt;, &lt;code&gt;fadeOut&lt;/code&gt;, &lt;code&gt;rolloverLeft&lt;/code&gt;, &lt;code&gt;rolloverRight&lt;/code&gt;, &lt;code&gt;slideInLeft&lt;/code&gt; and &lt;code&gt;slideInRight&lt;/code&gt; transitions.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;slider&lt;/code&gt; and &lt;code&gt;settings&lt;/code&gt; to the animation set up callback.&lt;/li&gt;
&lt;li&gt;Added tests for &lt;code&gt;sliceDown&lt;/code&gt;, &lt;code&gt;sliceUp&lt;/code&gt;, &lt;code&gt;sliceUpDown&lt;/code&gt;, &lt;code&gt;sliceFade&lt;/code&gt; and &lt;code&gt;fold&lt;/code&gt; transitions.&lt;/li&gt;
&lt;li&gt;Added the &lt;code&gt;sliceFadeRight&lt;/code&gt;, &lt;code&gt;sliceFadeLeft&lt;/code&gt; and &lt;code&gt;sliceFadeRandom&lt;/code&gt; transitions.&lt;/li&gt;
&lt;li&gt;Fixed the build files combining order.&lt;/li&gt;
&lt;li&gt;Added the &lt;code&gt;sortInOut&lt;/code&gt; jQuery function, and specs.&lt;/li&gt;
&lt;li&gt;Added the &lt;code&gt;transitionGroups&lt;/code&gt; and &lt;code&gt;transitionGroupSuffixes&lt;/code&gt; options.&lt;/li&gt;
&lt;li&gt;Added the &lt;code&gt;fadeBoxes&lt;/code&gt; helper function.&lt;/li&gt;
&lt;li&gt;Changed build utils file sort function log messages.&lt;/li&gt;
&lt;li&gt;Moved the transitions into own file, using the transition extensibility.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Still pending:&lt;/strong&gt; Integrating SASS compilation to CSS into the build process, new themes and examples as well as some other tests. Though it&amp;rsquo;s definitely becoming more stable as time passes, code is refactored and tests are added.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using RVM within a cron job</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/12/16/using-rvm-within-a-cron-job.html"/>
    <id>https://www.gonzedge.com/blog/2011/12/16/using-rvm-within-a-cron-job.html</id>
    <published>2011-12-15T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:52-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/12/using-rvm-within-a-cron-job"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on December 16, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Long time no post! I‚Äôve been really busy these days with some projects. Yet, here I am again, so here it goes.&lt;/p&gt;

&lt;p&gt;A couple of days ago, I started working on a big story in one of those projects I‚Äôm currently working on. It‚Äôs one of those things that needs to be run a couple of times a day‚Ä¶ yeah, a scheduled background job.&lt;/p&gt;

&lt;p&gt;Basically, what it need to do is check some database records, check their expiration date against the current date, and take some actions for each one of the expired ones. Simple enough, right?&lt;/p&gt;

&lt;p&gt;I went ahead and wrote a rake task that would do the heavy work. Something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:check_expired_records&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="no"&gt;Record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'expired =‚Ä¶&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/12/using-rvm-within-a-cron-job"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on December 16, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Long time no post! I&amp;rsquo;ve been really busy these days with some projects. Yet, here I am again, so here it goes.&lt;/p&gt;

&lt;p&gt;A couple of days ago, I started working on a big story in one of those projects I&amp;rsquo;m currently working on. It&amp;rsquo;s one of those things that needs to be run a couple of times a day&amp;hellip; yeah, a scheduled background job.&lt;/p&gt;

&lt;p&gt;Basically, what it need to do is check some database records, check their expiration date against the current date, and take some actions for each one of the expired ones. Simple enough, right?&lt;/p&gt;

&lt;p&gt;I went ahead and wrote a rake task that would do the heavy work. Something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:check_expired_records&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="no"&gt;Record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'expired = ? AND expires_at &amp;lt; ?'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="c1"&gt;# send some emails&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="c1"&gt;# take some other actions&lt;/span&gt;
    &lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expired&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I was going to add a line to the crontab to run it when scheduled, which I thought would be the easiest part. I added a line like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;0 &lt;span class="k"&gt;*&lt;/span&gt;/12 &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/the/records_app/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rake check_expired_records
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To my surprise, it didn&amp;rsquo;t work. Checking the &lt;code&gt;/var/log/syslog&lt;/code&gt; file, I saw this perplexing message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;error &lt;span class="o"&gt;(&lt;/span&gt;grandchild &lt;span class="c"&gt;#4993 failed with exit status 127)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doing some extra debugging (redirecting both stdout and stderr outputs to a file), I found out that the problem was rake not being found.&lt;/p&gt;

&lt;p&gt;Hmm, that must mean that rvm isn&amp;rsquo;t being loaded, right? I tried this instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;0 &lt;span class="k"&gt;*&lt;/span&gt;/12 &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; rvm use 1.9.2 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rvm gemset use records_app &lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/the/records_app/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rake check_expired_records
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Same error&amp;hellip; But now it doesn&amp;rsquo;t find rvm. Let&amp;rsquo;s load it to the path manually:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;0 &lt;span class="k"&gt;*&lt;/span&gt;/12 &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.rvm/bin &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rvm use 1.9.2 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rvm gemset use records_app &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/the/records_app/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rake check_expired_records
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ugh, yet another error message&amp;hellip; &lt;code&gt;Gemsets cannot be set when not using rvm rubies (currently).&lt;/code&gt;. Ok, let&amp;rsquo;s add the gems path to our path as well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;0 &lt;span class="k"&gt;*&lt;/span&gt;/12 &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.rvm/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.rvm/gems/ruby-1.9.2-p290@records_app/bin &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rvm use 1.9.2 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; /path/to/the/records_app/ &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rake check_expired_records
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nothing!&amp;hellip; Now the error is a &lt;code&gt;GemNotFoundException&lt;/code&gt;&amp;hellip; &lt;strong&gt;Say what??&lt;/strong&gt;.
Hmm, taking into account all previous errors, it&amp;rsquo;s definitely an environment issue.&lt;/p&gt;

&lt;p&gt;After some googling, I found &lt;a href="http://blog.scoutapp.com/articles/2010/09/07/rvm-and-cron-in-production"&gt;this post&lt;/a&gt; which pretty much explained how to do what I was trying to do. Turns out that the cron job is executed with a very limited environment. That means that in order for rvm to work correctly I have to fire up another bash with the correct environment, load rvm and finally execute what I want to.&lt;/p&gt;

&lt;p&gt;So, at last, I ended up with this line in the crontab file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;0 &lt;span class="k"&gt;*&lt;/span&gt;/12 &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt; /bin/bash &lt;span class="nt"&gt;-l&lt;/span&gt; &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'source "$HOME/.rvm/scripts/rvm" &amp;amp;&amp;amp; rvm use 1.9.2 &amp;amp;&amp;amp; rvm gemset use records_app &amp;amp;&amp;amp; cd /path/to/the/records_app/ &amp;amp;&amp;amp; rake check_expired_records'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Awesome! It works!
Now &lt;strong&gt;that&lt;/strong&gt; was intense!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CoffeeScript: The '=&gt;' operator</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/12/16/coffeescript-the-operator.html"/>
    <id>https://www.gonzedge.com/blog/2011/12/16/coffeescript-the-operator.html</id>
    <published>2011-12-15T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/12/coffeescript-the-operator"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on December 16, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know, I‚Äôve been &lt;a href="/blog/2011/11/11/the-joy-of-writing-coffeescript.html"&gt;playing around with CoffeeScript&lt;/a&gt; for a couple of months now.&lt;/p&gt;

&lt;p&gt;One of CoffeeScript‚Äôs jewels that I haven‚Äôt talked about yet and that I‚Äôve been using lately on the jQuery Rambling Slider codebase, is the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator. It is basically a custom function definition, which binds that function to the current context. That is, it ties the &lt;code&gt;this&lt;/code&gt; value of the outer scope to the &lt;code&gt;this&lt;/code&gt; value of the function being defined.&lt;/p&gt;

&lt;p&gt;How many times, writing JavaScript, have you done something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;outerFunctionWithCallback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/* Do something with options */&lt;/span&gt;
  &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;theFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/12/coffeescript-the-operator"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on December 16, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know, I&amp;rsquo;ve been &lt;a href="/blog/2011/11/11/the-joy-of-writing-coffeescript.html"&gt;playing around with CoffeeScript&lt;/a&gt; for a couple of months now.&lt;/p&gt;

&lt;p&gt;One of CoffeeScript&amp;rsquo;s jewels that I haven&amp;rsquo;t talked about yet and that I&amp;rsquo;ve been using lately on the jQuery Rambling Slider codebase, is the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator. It is basically a custom function definition, which binds that function to the current context. That is, it ties the &lt;code&gt;this&lt;/code&gt; value of the outer scope to the &lt;code&gt;this&lt;/code&gt; value of the function being defined.&lt;/p&gt;

&lt;p&gt;How many times, writing JavaScript, have you done something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;outerFunctionWithCallback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/* Do something with options */&lt;/span&gt;
  &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;theFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;doFirstThing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* ... */&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;doSecondThing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/* ... */&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;initialize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;doFirstThing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;doSecondThing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;outerFunctionWithCallback&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="cm"&gt;/* options */&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or it&amp;rsquo;s CoffeeScript equivalent:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;outerFunctionWithCallback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="c1"&gt;# Do something with options&lt;/span&gt;
  &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;theFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;
  &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;doFirstThing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;doSecondThing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="nx"&gt;initialize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;doFirstThing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;doSecondThing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;outerFunctionWithCallback&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="nx"&gt;initialize&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice the definition of a variable named &lt;code&gt;self&lt;/code&gt;, just for the sake of being able to access the outer function context (&lt;code&gt;theFunction&lt;/code&gt;) from an inner function (&lt;code&gt;initialize&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Well, with CoffeeScript&amp;rsquo;s &lt;code&gt;=&amp;gt;&lt;/code&gt; operator, you won&amp;rsquo;t have to do this anymore!
Of course, as long as you&amp;rsquo;re not expecting another value for &lt;code&gt;this&lt;/code&gt;, as is the case for jQuery plugins and functions bound to events.&lt;/p&gt;

&lt;p&gt;So, you can turn the code above into this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;outerFunctionWithCallback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="c1"&gt;# Do something with options&lt;/span&gt;
  &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nx"&gt;theFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;doFirstThing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;doSecondThing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;# ...&lt;/span&gt;

  &lt;span class="nx"&gt;initialize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;doFirstThing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;doSecondThing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;outerFunctionWithCallback&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="nx"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No need to write &lt;code&gt;self&lt;/code&gt; anymore :).
Beautiful, right?&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider v0.2.1 released!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/30/jquery-rambling-slider-v0-2-1-released.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/30/jquery-rambling-slider-v0-2-1-released.html</id>
    <published>2011-11-29T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-2-1-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 30, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This one, as opposed to &lt;a href="/blog/2011/11/28/jquery-rambling-slider-v0-2-0-is-out.html"&gt;version 0.2.0&lt;/a&gt; is mostly tests added, refactoring and one bug fix. Also, changed some parameters order to have a more consistent API, for the &lt;a href="/blog/2011/11/30/extending-the-jquery-rambling-slider.html"&gt;transition extensibility&lt;/a&gt;. You can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.2.1.zip"&gt;download it from GitHub&lt;/a&gt;, &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;browse the tags&lt;/a&gt; and read &lt;a href="http://github.com/gonzedge/rambling.slider/wiki"&gt;the project‚Äôs wiki&lt;/a&gt; for documentation.&lt;/p&gt;

&lt;p&gt;This release includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fixed the flash flickering before initializing.&lt;/li&gt;
&lt;li&gt;Added tests for ‚ÄòslideUpDownSlices‚Äô, ‚ÄòfoldSlices‚Äô and ‚ÄòfadeSlices‚Äô (#6).&lt;/li&gt;
&lt;li&gt;Added tests for ‚ÄòslideUpSlices‚Äô and ‚ÄòslideDownSlices‚Äô.&lt;/li&gt;
&lt;li&gt;Added tests for the ‚ÄòanimateBoxes‚Äô helper.&lt;/li&gt;
&lt;li&gt;Added ‚ÄòsliceFade‚Äô to the transition groups.&lt;/li&gt;
&lt;li&gt;Changed the parameters order for the ‚ÄòanimateSlices‚Äô helper.&lt;/li&gt;
&lt;li&gt;Added tests for the ‚ÄòanimateSlices‚Ä¶&lt;/li&gt;
&lt;/ul&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-2-1-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 30, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This one, as opposed to &lt;a href="/blog/2011/11/28/jquery-rambling-slider-v0-2-0-is-out.html"&gt;version 0.2.0&lt;/a&gt; is mostly tests added, refactoring and one bug fix. Also, changed some parameters order to have a more consistent API, for the &lt;a href="/blog/2011/11/30/extending-the-jquery-rambling-slider.html"&gt;transition extensibility&lt;/a&gt;. You can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.2.1.zip"&gt;download it from GitHub&lt;/a&gt;, &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;browse the tags&lt;/a&gt; and read &lt;a href="http://github.com/gonzedge/rambling.slider/wiki"&gt;the project&amp;rsquo;s wiki&lt;/a&gt; for documentation.&lt;/p&gt;

&lt;p&gt;This release includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fixed the flash flickering before initializing.&lt;/li&gt;
&lt;li&gt;Added tests for &amp;lsquo;slideUpDownSlices&amp;rsquo;, &amp;lsquo;foldSlices&amp;rsquo; and &amp;lsquo;fadeSlices&amp;rsquo; (#6).&lt;/li&gt;
&lt;li&gt;Added tests for &amp;lsquo;slideUpSlices&amp;rsquo; and &amp;lsquo;slideDownSlices&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Added tests for the &amp;lsquo;animateBoxes&amp;rsquo; helper.&lt;/li&gt;
&lt;li&gt;Added &amp;lsquo;sliceFade&amp;rsquo; to the transition groups.&lt;/li&gt;
&lt;li&gt;Changed the parameters order for the &amp;lsquo;animateSlices&amp;rsquo; helper.&lt;/li&gt;
&lt;li&gt;Added tests for the &amp;lsquo;animateSlices&amp;rsquo; helper.&lt;/li&gt;
&lt;li&gt;Added tests for the &amp;lsquo;animateFullImage&amp;rsquo; helper.&lt;/li&gt;
&lt;li&gt;Moved the &amp;lsquo;alignBottom&amp;rsquo; to the changeable options.&lt;/li&gt;
&lt;li&gt;Added tests for &amp;lsquo;createSlices&amp;rsquo;, &amp;lsquo;createBoxes&amp;rsquo; and &amp;lsquo;getOneSlice&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;fadeSlices&amp;rsquo; to the animationHelpers.&lt;/li&gt;
&lt;li&gt;Refactored the &amp;lsquo;animateFullImage&amp;rsquo; to be consistent with &amp;lsquo;animateSlices&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you find any issues or have any feature request, go ahead and add them to the &lt;a href="http://github.com/gonzedge/rambling.slider/issues"&gt;project&amp;rsquo;s issues on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The journey continues!
Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Extending the jQuery Rambling Slider</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/30/extending-the-jquery-rambling-slider.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/30/extending-the-jquery-rambling-slider.html</id>
    <published>2011-11-29T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/extending-the-jquery-rambling-slider"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 30, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One of the core features added in &lt;a href="/blog/2011/11/28/jquery-rambling-slider-v0-2-0-is-out.html"&gt;version 0.2.0 of the jQuery Rambling Slider&lt;/a&gt; is the ability to customize the transitions between images, between flash elements and between an image and a flash element.&lt;/p&gt;

&lt;p&gt;As it is described in the &lt;a href="https://github.com/gonzedge/rambling.slider/wiki/Adding-and-Overriding-Transitions"&gt;Adding and Overriding Transitions&lt;/a&gt; page in &lt;a href="https://github.com/gonzedge/rambling.slider/wiki"&gt;the project‚Äôs wiki&lt;/a&gt;, in order to do this you have to something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;imageTransitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/* Add a 'fadeInSlices' transition */&lt;/span&gt;
      &lt;span class="na"&gt;fadeInSlices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="cm"&gt;/* Override the 'sliceUpRight' transition */&lt;/span&gt;
      &lt;span class="na"&gt;sliceUpRight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
   ‚Ä¶&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/extending-the-jquery-rambling-slider"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 30, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One of the core features added in &lt;a href="/blog/2011/11/28/jquery-rambling-slider-v0-2-0-is-out.html"&gt;version 0.2.0 of the jQuery Rambling Slider&lt;/a&gt; is the ability to customize the transitions between images, between flash elements and between an image and a flash element.&lt;/p&gt;

&lt;p&gt;As it is described in the &lt;a href="https://github.com/gonzedge/rambling.slider/wiki/Adding-and-Overriding-Transitions"&gt;Adding and Overriding Transitions&lt;/a&gt; page in &lt;a href="https://github.com/gonzedge/rambling.slider/wiki"&gt;the project&amp;rsquo;s wiki&lt;/a&gt;, in order to do this you have to something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;imageTransitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/* Add a 'fadeInSlices' transition */&lt;/span&gt;
      &lt;span class="na"&gt;fadeInSlices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="cm"&gt;/* Override the 'sliceUpRight' transition */&lt;/span&gt;
      &lt;span class="na"&gt;sliceUpRight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="cm"&gt;/* ... */&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;flashTransitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/* Same format */&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;imageFlashTransitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="cm"&gt;/* Same format */&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the &lt;code&gt;&amp;#39;fadeInSlices&amp;#39;&lt;/code&gt; context you will have a lot of helper functions available in the &lt;code&gt;&amp;#39;this&amp;#39;&lt;/code&gt; object to aid you with the new transitions. The helper functions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;createSlices&lt;/code&gt;. Returns &lt;code&gt;settings.slices&lt;/code&gt; number of slices, ready to apply any animation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;createBoxes&lt;/code&gt;. Returns &lt;code&gt;settings.boxRows * settings.boxCols&lt;/code&gt; number of boxes, ready to apply any animation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getOneSlice&lt;/code&gt;. Returns one slice, ready to appy any animation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;animateFullImage&lt;/code&gt;. Expects an &lt;code&gt;animationSetUp&lt;/code&gt; callback, which will have the full image jQuery element as &lt;code&gt;this&lt;/code&gt;, and that should execute any action that needs to be done before running the animation and then return the parameters to be passed to the jQuery &lt;code&gt;animate&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;animateSlices&lt;/code&gt;. Expects an &lt;code&gt;animationSetUp&lt;/code&gt; callback, which will have each slice jQuery element as &lt;code&gt;this&lt;/code&gt;, and that should execute any action that needs to be done before running the animation and then return the parameters to be passed to the jQuery &lt;code&gt;animate&lt;/code&gt; method, and a &lt;code&gt;sortCallback&lt;/code&gt;, with all the slices jQuery collection as &lt;code&gt;this&lt;/code&gt; and that is expected to sort the &lt;code&gt;settings.slices&lt;/code&gt; number of slices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;animateBoxes&lt;/code&gt;. Expects an &lt;code&gt;animationCallback&lt;/code&gt; to be applied to the boxes, and a &lt;code&gt;sortCallback&lt;/code&gt; to sort the &lt;code&gt;settings.boxRows * settings.boxCols&lt;/code&gt; number of boxes. Also, passes the &lt;code&gt;finishedCallback&lt;/code&gt; to the &lt;code&gt;animationCallback&lt;/code&gt; function, expecting it to be raised when the whole animation is finished.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slideUpSlices&lt;/code&gt;. Expects only a &lt;code&gt;sortCallback&lt;/code&gt;, with all the slices jQuery collection as &lt;code&gt;this&lt;/code&gt; and that is expected to sort the &lt;code&gt;settings.slices&lt;/code&gt; number of slices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slideDownSlices&lt;/code&gt;. Expects only a &lt;code&gt;sortCallback&lt;/code&gt;, with all the slices jQuery collection as &lt;code&gt;this&lt;/code&gt; and that is expected to sort the &lt;code&gt;settings.slices&lt;/code&gt; number of slices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;slideUpDownSlices&lt;/code&gt;. Expects only a &lt;code&gt;sortCallback&lt;/code&gt;, with all the slices jQuery collection as &lt;code&gt;this&lt;/code&gt; and that is expected to sort the &lt;code&gt;settings.slices&lt;/code&gt; number of slices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;foldSlices&lt;/code&gt;. Expects only a &lt;code&gt;sortCallback&lt;/code&gt;, with all the slices jQuery collection as &lt;code&gt;this&lt;/code&gt; and that is expected to sort the &lt;code&gt;settings.slices&lt;/code&gt; number of slices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fadeSlices&lt;/code&gt;. Expects only a &lt;code&gt;sortCallback&lt;/code&gt;, with all the slices jQuery collection as &lt;code&gt;this&lt;/code&gt; and that is expected to sort the &lt;code&gt;settings.slices&lt;/code&gt; number of slices.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rainBoxes&lt;/code&gt;. Expects a &lt;code&gt;sortCallback&lt;/code&gt;, with all the boxes jQuery collection as &lt;code&gt;this&lt;/code&gt; and that is expected to sort the &lt;code&gt;settings.boxRows * settings.boxCols&lt;/code&gt; number of boxes, and a &lt;code&gt;grow&lt;/code&gt; boolean to determine if using the fade or grow box effect.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That way, if you want to animate slices, you can sort them in your own way, and set up the animation for each of them with something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;imageTransitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;fadeInSlices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;animateSlices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;opacity&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pretty cool huh?
I hope to be adding more functionality on top of this. Maybe moving the transition definitions into a separate file.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider v0.2.0 is out!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/28/jquery-rambling-slider-v0-2-0-is-out.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/28/jquery-rambling-slider-v0-2-0-is-out.html</id>
    <published>2011-11-27T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-2-0-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 28, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;It‚Äôs been a long way to this one, but I‚Äôm proud to announce that version 0.2.0 of the &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; has been released!&lt;/p&gt;

&lt;p&gt;So far, the most stable release had been the &lt;a href="/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html"&gt;version 0.1.2&lt;/a&gt; and its &lt;a href="/blog/2011/11/13/jquery-rambling-slider-v0-1-2-patches.html"&gt;patches&lt;/a&gt;. But I assure you that &lt;strong&gt;this is now the most stable one&lt;/strong&gt; :).&lt;/p&gt;

&lt;p&gt;Be free to &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.2.0.zip"&gt;download it from GitHub&lt;/a&gt; and test it out.&lt;/p&gt;

&lt;p&gt;You can also &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;browse the tags&lt;/a&gt;, and submit any issue or feature request to &lt;a href="http://github.com/gonzedge/rambling.slider/issues"&gt;the project‚Äôs issues on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;
For documentation on how to use, you can read the &lt;a href="http://github.com/gonzedge/rambling.slider/wiki"&gt;project‚Äôs wiki&lt;/a&gt;, which has been updated for these changes.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This release includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updated readme information.&lt;/li&gt;
&lt;li&gt;Added support for jQuery 1.7.1.&lt;/li&gt;
&lt;li&gt;Changed the ‚Äòeffect‚Äô setter to return‚Ä¶&lt;/li&gt;
&lt;/ul&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-2-0-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 28, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;It&amp;rsquo;s been a long way to this one, but I&amp;rsquo;m proud to announce that version 0.2.0 of the &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; has been released!&lt;/p&gt;

&lt;p&gt;So far, the most stable release had been the &lt;a href="/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html"&gt;version 0.1.2&lt;/a&gt; and its &lt;a href="/blog/2011/11/13/jquery-rambling-slider-v0-1-2-patches.html"&gt;patches&lt;/a&gt;. But I assure you that &lt;strong&gt;this is now the most stable one&lt;/strong&gt; :).&lt;/p&gt;

&lt;p&gt;Be free to &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.2.0.zip"&gt;download it from GitHub&lt;/a&gt; and test it out.&lt;/p&gt;

&lt;p&gt;You can also &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;browse the tags&lt;/a&gt;, and submit any issue or feature request to &lt;a href="http://github.com/gonzedge/rambling.slider/issues"&gt;the project&amp;rsquo;s issues on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;
For documentation on how to use, you can read the &lt;a href="http://github.com/gonzedge/rambling.slider/wiki"&gt;project&amp;rsquo;s wiki&lt;/a&gt;, which has been updated for these changes.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This release includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updated readme information.&lt;/li&gt;
&lt;li&gt;Added support for jQuery 1.7.1.&lt;/li&gt;
&lt;li&gt;Changed the &amp;lsquo;effect&amp;rsquo; setter to return the slider for method chaining.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;theme&amp;rsquo; option, the &amp;lsquo;theme&amp;rsquo; method and specs.&lt;/li&gt;
&lt;li&gt;Fixed flash alignment for adaptive slider.&lt;/li&gt;
&lt;li&gt;Added more easing to the flash transitions.&lt;/li&gt;
&lt;li&gt;Fixed some false positive jquery equals tests.&lt;/li&gt;
&lt;li&gt;Added the jquery &amp;lsquo;equals&amp;rsquo; method.&lt;/li&gt;
&lt;li&gt;Fixed issue with default image transition.&lt;/li&gt;
&lt;li&gt;Fixed &amp;lsquo;alignBottom&amp;rsquo; issue with slices transitions.&lt;/li&gt;
&lt;li&gt;Refactored the animateSlices function.&lt;/li&gt;
&lt;li&gt;Made options &amp;lsquo;imageTransitions&amp;rsquo;, &amp;lsquo;flashTransitions&amp;rsquo;, &amp;lsquo;imageFlashTransitions&amp;rsquo; and &amp;lsquo;afterLoad&amp;rsquo; unchangeable.&lt;/li&gt;
&lt;li&gt;Added the finished callback for extended transitions.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;sliceFadeOutIn&amp;rsquo; and &amp;lsquo;sliceFadeInOut&amp;rsquo; transitions.&lt;/li&gt;
&lt;li&gt;Added image, flash, imageFlash transition extensibility.&lt;/li&gt;
&lt;li&gt;Fixed the transitions from image to flash element and between flash elements.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;boxRainOutIn&amp;rsquo;, &amp;lsquo;boxRainInOut&amp;rsquo;, &amp;lsquo;boxRainGrowOutIn&amp;rsquo; and &amp;lsquo;boxRainGrowInOut&amp;rsquo; effects.&lt;/li&gt;
&lt;li&gt;Added &amp;lsquo;fadeOut&amp;rsquo; to the list (compatibility between image and flash).&lt;/li&gt;
&lt;li&gt;Added hover events and slider callbacks tests.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;sliceUpOutIn&amp;rsquo;, &amp;lsquo;sliceUpInOut&amp;rsquo;, &amp;lsquo;sliceDownOutIn&amp;rsquo;, &amp;lsquo;sliceDownInOut&amp;rsquo;, &amp;lsquo;sliceUpDownOutIn&amp;rsquo; and &amp;lsquo;sliceUpDownInOut&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Added tests for &amp;lsquo;directionNav&amp;rsquo; and &amp;lsquo;controlNav&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Fixed some false positive specs.&lt;/li&gt;
&lt;li&gt;Added custom messages to the custom matchers.&lt;/li&gt;
&lt;li&gt;Added some new methods info.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;previousSlide&amp;rsquo;, &amp;lsquo;nextSlide&amp;rsquo; and &amp;lsquo;slide&amp;rsquo; methods.&lt;/li&gt;
&lt;li&gt;Added the issues info to the readme.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next up, some new themes (including migrating the css to &lt;a href="http://sass-lang.com"&gt;SASS&lt;/a&gt;), tweaks and tests! :D
Enjoy!!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Set up ssh public/private key for no password prompts</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/23/set-up-ssh-publicprivate-key-for-no-password-prompts.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/23/set-up-ssh-publicprivate-key-for-no-password-prompts.html</id>
    <published>2011-11-22T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:45-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/set-up-ssh-publicprivate-key-for-no-password-prompts"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;It‚Äôs been a while since my last post. I‚Äôve had a busy couple of weeks. But here I am again :).&lt;/p&gt;

&lt;p&gt;Last week, I was setting myself up for a couple of features that I have to add to a project. I had ssh access (which is a good thing), but I was getting tired of typing in my password each and everytime I tried to connect to the server. The solution to this is fairly simple.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, be sure to have your public ssh key in hand or generate your own with:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; rsa &lt;span class="nt"&gt;-C&lt;/span&gt; youremail@yourdomain.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Be sure to generate it with no passphrase (remember that our goal is never get prompted when connecting through ssh).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then, on the server, make sure that there‚Ä¶&lt;/li&gt;
&lt;/ul&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/set-up-ssh-publicprivate-key-for-no-password-prompts"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;It&amp;rsquo;s been a while since my last post. I&amp;rsquo;ve had a busy couple of weeks. But here I am again :).&lt;/p&gt;

&lt;p&gt;Last week, I was setting myself up for a couple of features that I have to add to a project. I had ssh access (which is a good thing), but I was getting tired of typing in my password each and everytime I tried to connect to the server. The solution to this is fairly simple.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, be sure to have your public ssh key in hand or generate your own with:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; rsa &lt;span class="nt"&gt;-C&lt;/span&gt; youremail@yourdomain.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Be sure to generate it with no passphrase (remember that our goal is never get prompted when connecting through ssh).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Then, on the server, make sure that there&amp;rsquo;s a file called &lt;code&gt;authorized_keys&lt;/code&gt; in the &lt;code&gt;~/.ssh&lt;/code&gt; directory. If it doesn&amp;rsquo;t exist, create it.&lt;/li&gt;
&lt;li&gt;Add a new line to that file with the contents of your public key file (&lt;code&gt;id_rsa.pub&lt;/code&gt; if you left it with the default name).&lt;/li&gt;
&lt;li&gt;Also on the server, make sure that the files and directories have this set of permissions (you can just execute the following commands):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;chmod &lt;/span&gt;644 ~/.ssh/authorized_keys
&lt;span class="nb"&gt;chmod &lt;/span&gt;700 ~/.ssh
&lt;span class="nb"&gt;chmod &lt;/span&gt;755 ~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Finally, test it out login in with ssh from a new prompt.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;rsquo;s it!
No more password prompts! :D&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>IE and the flash "wmode" madness</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/23/ie-and-the-flash-wmode-madness.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/23/ie-and-the-flash-wmode-madness.html</id>
    <published>2011-11-22T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/ie-and-the-flash-wmode-madness"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One of the reasons that didn‚Äôt allow me to release &lt;a href="/blog/2011/11/23/jquery-rambling-slider-v0-1-3-is-out.html"&gt;version 0.1.3 of the jQuery Rambilng Slider&lt;/a&gt; earlier this week was a really ugly bug with IE, flash and transitions from and image to a flash element and viceversa.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The problem&lt;/strong&gt;: There are some transitions on the slider that require an image (or several) to be on top of the flash, so that it fades out and reveals the flash. This works fine on Firefox and Chrome, but when the time arrived, it just didn‚Äôt work with IE.&lt;/p&gt;

&lt;p&gt;I did &lt;em&gt;a lot&lt;/em&gt; of googling and the only thing that I found over and over again was to include a &lt;code&gt;param&lt;/code&gt; tag inside the &lt;code&gt;object&lt;/code&gt; tag, with a name of &lt;code&gt;wmode&lt;/code&gt; and value of &lt;code&gt;transparent&lt;/code&gt; or &lt;code&gt;opaque&lt;/code&gt; and to add‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/ie-and-the-flash-wmode-madness"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One of the reasons that didn&amp;rsquo;t allow me to release &lt;a href="/blog/2011/11/23/jquery-rambling-slider-v0-1-3-is-out.html"&gt;version 0.1.3 of the jQuery Rambilng Slider&lt;/a&gt; earlier this week was a really ugly bug with IE, flash and transitions from and image to a flash element and viceversa.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The problem&lt;/strong&gt;: There are some transitions on the slider that require an image (or several) to be on top of the flash, so that it fades out and reveals the flash. This works fine on Firefox and Chrome, but when the time arrived, it just didn&amp;rsquo;t work with IE.&lt;/p&gt;

&lt;p&gt;I did &lt;em&gt;a lot&lt;/em&gt; of googling and the only thing that I found over and over again was to include a &lt;code&gt;param&lt;/code&gt; tag inside the &lt;code&gt;object&lt;/code&gt; tag, with a name of &lt;code&gt;wmode&lt;/code&gt; and value of &lt;code&gt;transparent&lt;/code&gt; or &lt;code&gt;opaque&lt;/code&gt; and to add the &lt;code&gt;wmode&lt;/code&gt; attribute with the same value to the &lt;code&gt;embed&lt;/code&gt;. But it just wasn&amp;rsquo;t working.&lt;/p&gt;

&lt;p&gt;I spent a whole morning and half an afternoon trying to find what the issue was and got nothing. That is, until I checked the embed tag being included&amp;hellip; It had the &lt;code&gt;wmode&lt;/code&gt; set to &lt;code&gt;always&lt;/code&gt;.
But why??&lt;/p&gt;

&lt;p&gt;Well&amp;hellip; In the slider initializing the original elements are cloned and added to an animation container, in order to work out the transitions. It seems that IE takes the decision of which attributes to clone from the &lt;code&gt;embed&lt;/code&gt; elements.&lt;/p&gt;

&lt;p&gt;That just sucks! It sucks so bad!
But thankfully there is an easy workaround.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: After cloning I just added this line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'object'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;prepend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;param name="wmode" value="opaque" /&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;unless&lt;/span&gt; &lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'param[name=wmode]'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;
&lt;span class="nx"&gt;clone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'embed'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;attr&lt;/span&gt; &lt;span class="na"&gt;wmode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'opaque'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that&amp;rsquo;s one ugly hack, but at least my headaches are over.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider v0.1.3 is out!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/23/jquery-rambling-slider-v0-1-3-is-out.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/23/jquery-rambling-slider-v0-1-3-is-out.html</id>
    <published>2011-11-22T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:43-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-1-3-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yes, it took me a while, but the jQuery Rambling Slider v0.1.3 is out!&lt;/p&gt;

&lt;p&gt;You can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.3.zip"&gt;download it from GitHub&lt;/a&gt;, test it out and &lt;a href="http://github.com/gonzedge/rambling.slider/issues"&gt;report any issues&lt;/a&gt; you find. Go ahead and checkout &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;all the tags&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also see the &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;project‚Äôs details on GitHub&lt;/a&gt; or &lt;a href="http://github.com/gonzedge/rambling.slider/wiki"&gt;read the project‚Äôs wiki&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 1&lt;/strong&gt;
Unfortunately there was a critical bug with the links containing images/flash.
But hey, it has been fixed already on v0.1.3 patch 1, &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.3.1.zip"&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 2&lt;/strong&gt;
There was another ugly bug with the caption not showing.
This has been fixed already on v0.1.3 patch 2, &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.3.2.zip"&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;END UPDATES&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The main functionality added includes flash support (find more about it &lt;a href="http://github.com/gonzedge/rambling.slider/wiki/Flash-Support"&gt;on the wiki&lt;/a&gt;&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-1-3-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yes, it took me a while, but the jQuery Rambling Slider v0.1.3 is out!&lt;/p&gt;

&lt;p&gt;You can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.3.zip"&gt;download it from GitHub&lt;/a&gt;, test it out and &lt;a href="http://github.com/gonzedge/rambling.slider/issues"&gt;report any issues&lt;/a&gt; you find. Go ahead and checkout &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;all the tags&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also see the &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;project&amp;rsquo;s details on GitHub&lt;/a&gt; or &lt;a href="http://github.com/gonzedge/rambling.slider/wiki"&gt;read the project&amp;rsquo;s wiki&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 1&lt;/strong&gt;
Unfortunately there was a critical bug with the links containing images/flash.
But hey, it has been fixed already on v0.1.3 patch 1, &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.3.1.zip"&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 2&lt;/strong&gt;
There was another ugly bug with the caption not showing.
This has been fixed already on v0.1.3 patch 2, &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.3.2.zip"&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;END UPDATES&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The main functionality added includes flash support (find more about it &lt;a href="http://github.com/gonzedge/rambling.slider/wiki/Flash-Support"&gt;on the wiki&lt;/a&gt;.), the &lt;code&gt;destroy&lt;/code&gt; method, and some new transition effects.&lt;/p&gt;

&lt;p&gt;This release includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fixed issue with destroy (caused when changed the slide elements and effects flow).&lt;/li&gt;
&lt;li&gt;Added the flash support info.&lt;/li&gt;
&lt;li&gt;Fixed the flash transitions in IE.&lt;/li&gt;
&lt;li&gt;Fixed issue with links not showing.&lt;/li&gt;
&lt;li&gt;Added flash and its transitions working on firefox and chrome.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;containsFlash&amp;rsquo; method for jQuery.&lt;/li&gt;
&lt;li&gt;Separated &amp;lsquo;imageTransitions&amp;rsquo; and &amp;lsquo;flashTransitions&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Added &amp;lsquo;random&amp;rsquo; array extension and specs.&lt;/li&gt;
&lt;li&gt;Fixed some broken tests.&lt;/li&gt;
&lt;li&gt;Fixed transition from image to flash.&lt;/li&gt;
&lt;li&gt;Changed slide elements and effects flow.&lt;/li&gt;
&lt;li&gt;Fixed issue with hovering on flash.&lt;/li&gt;
&lt;li&gt;Added transition from image to flash.&lt;/li&gt;
&lt;li&gt;Added the transition for the image after the flash.&lt;/li&gt;
&lt;li&gt;Updated copyright release date info.&lt;/li&gt;
&lt;li&gt;Removed extra &amp;lsquo;examples&amp;rsquo; in the readme.&lt;/li&gt;
&lt;li&gt;Moved the comments to own file.&lt;/li&gt;
&lt;li&gt;Fixed bug with file order when compiling.&lt;/li&gt;
&lt;li&gt;Fixed bugs with the &amp;lsquo;contains&amp;rsquo; and &amp;lsquo;startsWith&amp;rsquo; methods.&lt;/li&gt;
&lt;li&gt;Added some array and string extensions and specs.&lt;/li&gt;
&lt;li&gt;Removed the background-based effects.&lt;/li&gt;
&lt;li&gt;Added the tests for the &amp;lsquo;destroy&amp;rsquo; method and the &amp;lsquo;adaptingSlider&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;sliceUpRandom&amp;rsquo;, &amp;lsquo;sliceDownRandom&amp;rsquo;, &amp;lsquo;sliceUpDownRandom&amp;rsquo; and &amp;lsquo;foldRandom&amp;rsquo; effects.&lt;/li&gt;
&lt;li&gt;Added more info to the readme.&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;destroy&amp;rsquo; method&lt;/li&gt;
&lt;li&gt;Added the &amp;lsquo;rollover&amp;rsquo; effects to the &amp;lsquo;random&amp;rsquo; animation list.&lt;/li&gt;
&lt;li&gt;Added missing &amp;lsquo;foldRight&amp;rsquo; effect.&lt;/li&gt;
&lt;li&gt;Fixed the &amp;lsquo;slideInRight&amp;rsquo; and added &amp;lsquo;rolloverRight&amp;rsquo; and &amp;lsquo;rolloverLeft&amp;rsquo; effect.&lt;/li&gt;
&lt;li&gt;Added html format to the README.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m getting closer and closer to version one. Just some more tests and tweaks and it&amp;rsquo;ll be ready! :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Stripping down Rails 3.1: Using only the database migrations</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/23/stripping-down-rails-3-1-using-only-the-database-migrations.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/23/stripping-down-rails-3-1-using-only-the-database-migrations.html</id>
    <published>2011-11-22T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:46-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/stripping-down-rails-3-1-using-only-the-database-migrations"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The current project I‚Äôm working on is not using Ruby on Rails, but I still want to use ActiveRecord Migrations for the database changes.&lt;/p&gt;

&lt;p&gt;There are some options out there for this, and most people that I read about and had this issue just use the activerecord gem and set up their rake tasks.&lt;/p&gt;

&lt;p&gt;I don‚Äôt want to write my own rake tasks, since I feel that I would be reinventing the wheel. So what did I do? I created a new rails application, and stripped it down, removing everything that is not needed to run the migrations.&lt;/p&gt;

&lt;p&gt;First, I created a rails application called ‚Äòdeploy‚Äô on the root folder of the application with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails new deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I removed all the‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/stripping-down-rails-3-1-using-only-the-database-migrations"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The current project I&amp;rsquo;m working on is not using Ruby on Rails, but I still want to use ActiveRecord Migrations for the database changes.&lt;/p&gt;

&lt;p&gt;There are some options out there for this, and most people that I read about and had this issue just use the activerecord gem and set up their rake tasks.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t want to write my own rake tasks, since I feel that I would be reinventing the wheel. So what did I do? I created a new rails application, and stripped it down, removing everything that is not needed to run the migrations.&lt;/p&gt;

&lt;p&gt;First, I created a rails application called &amp;lsquo;deploy&amp;rsquo; on the root folder of the application with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails new deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, I removed all the directories in the &lt;code&gt;deploy&lt;/code&gt; folder, except for these:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;config&lt;/li&gt;
&lt;li&gt;db&lt;/li&gt;
&lt;li&gt;lib&lt;/li&gt;
&lt;li&gt;log&lt;/li&gt;
&lt;li&gt;script&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So far so good. The only uncomfortable thing now is that I have to enter to the &lt;code&gt;deploy&lt;/code&gt; directory to run &lt;code&gt;bundle install&lt;/code&gt; or &lt;code&gt;rake db:migrate&lt;/code&gt;. To solve this issue, I did the following:&lt;/p&gt;

&lt;p&gt;I added this &lt;code&gt;Gemfile&lt;/code&gt; to the root directory of the application:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="s1"&gt;'http://rubygems.org'&lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'git-deploy'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gemfile = File.open(File.join(File.dirname(&lt;strong&gt;FILE&lt;/strong&gt;), &amp;lsquo;deploy&amp;rsquo;, &amp;lsquo;Gemfile&amp;rsquo;))
eval gemfile.read&lt;/p&gt;

&lt;p&gt;And this &lt;code&gt;Rakefile&lt;/code&gt; as well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;rakefile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'deploy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Rakefile'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="n"&gt;rakefile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/config/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'deploy/config'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:generate&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ARGV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;start_with?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GENERATE='&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;arguments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'='&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt;
  &lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="s2"&gt;"cd deploy; rails generate &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;empty?&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;db_tasks_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'deploy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lib'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tasks'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db.rb'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;db_tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db_tasks_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;
&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="ss"&gt;:db&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;namespaces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:production&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="n"&gt;namespaces&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="n"&gt;db_tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/{environment}/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the &lt;code&gt;lib/tasks/db.rb&lt;/code&gt; being included in the &lt;code&gt;Rakefile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;tasks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:create&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:drop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:migrate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:rollback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:seed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:setup&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="s2"&gt;"rake db:&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; RAILS_ENV={environment}"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see I added some rake dynamic tasks to manage the migrations in the development, test and production environments from the root directory of the application.&lt;/p&gt;

&lt;p&gt;Now, I can run &lt;code&gt;bundle install&lt;/code&gt; and &lt;code&gt;rake whatever&lt;/code&gt; from my usual working directory.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s all folks!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Deploying on shared servers with git</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/23/deploying-on-shared-servers-with-git.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/23/deploying-on-shared-servers-with-git.html</id>
    <published>2011-11-22T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/deploying-on-shared-servers-with-git"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;There‚Äôs a project I‚Äôm currently working on, which is right now hosted on shared servers. I worked for a little while before on this project, but just to add some tiny features and fix some bugs, so I didn‚Äôt have the need back then to have a deployment process all set up.&lt;/p&gt;

&lt;p&gt;But now, I‚Äôm probably going to be working for a couple of months on this, so I figured it would be better for my own sanity to just set everything up from the very beginning, to make the deployment process as easy as possible.&lt;/p&gt;

&lt;p&gt;I googled for a while and the people seem to be using git for this. Now, there are a couple of options out there. There‚Äôs &lt;a href="http://github.com/resmo/git-ftp"&gt;resmo‚Äôs git-ftp&lt;/a&gt; which is a git powered‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/deploying-on-shared-servers-with-git"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;There&amp;rsquo;s a project I&amp;rsquo;m currently working on, which is right now hosted on shared servers. I worked for a little while before on this project, but just to add some tiny features and fix some bugs, so I didn&amp;rsquo;t have the need back then to have a deployment process all set up.&lt;/p&gt;

&lt;p&gt;But now, I&amp;rsquo;m probably going to be working for a couple of months on this, so I figured it would be better for my own sanity to just set everything up from the very beginning, to make the deployment process as easy as possible.&lt;/p&gt;

&lt;p&gt;I googled for a while and the people seem to be using git for this. Now, there are a couple of options out there. There&amp;rsquo;s &lt;a href="http://github.com/resmo/git-ftp"&gt;resmo&amp;rsquo;s git-ftp&lt;/a&gt; which is a git powered ftp client written as shell script, &lt;a href="http://github.com/aizatto/git-deploy"&gt;aizatto&amp;rsquo;s git-deploy&lt;/a&gt; which is also written as a shell script, and &lt;a href="http://github.com/mislav/git-deploy"&gt;mislav&amp;rsquo;s git-deploy gem&lt;/a&gt;, which is written in ruby.&lt;/p&gt;

&lt;p&gt;I was gonna try every one of them, but I decided to check the projects&amp;rsquo; last commit date and pick the one that was most recently updated, which turned out to be the git-deploy gem. Also, it got my attention that the gem says &lt;em&gt;&lt;q&gt;Heroku-style deployment&lt;/q&gt;&lt;/em&gt; in the project&amp;rsquo;s readme on GitHub.&lt;/p&gt;

&lt;p&gt;It is easy to set up, as long as you have ssh and git in place both locally and on the server. I assure you that it will pay off almost immediately. Let&amp;rsquo;s set up ssh and git on the shared server first.&lt;/p&gt;

&lt;p&gt;The first thing you need to do, is &lt;a href="/blog/2011/11/23/set-up-ssh-publicprivate-key-for-no-password-prompts.html"&gt;set up ssh for no more password prompts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then, you have to install git on your shared server, on which you probably have limited permissions. So, how do you do that? Well, you&amp;rsquo;ll have to download git from GitHub:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;wget http://github.com/git/git/zipball/v1.7.7.4 &lt;span class="nt"&gt;-O&lt;/span&gt; ~/v1.7.7.4.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Extract it to the home directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
unzip v1.7.7.4
&lt;span class="nb"&gt;mv &lt;/span&gt;git-git-&lt;span class="k"&gt;*&lt;/span&gt; git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then compile it with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/git
make &lt;span class="nv"&gt;prefix&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After that, add this to the &lt;code&gt;~/.bashrc&lt;/code&gt; of your server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/git/bin-wrappers"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then
&lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/git/bin-wrappers"&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you&amp;rsquo;re finished with that, just proceed with the gem installation and setup. That is, installing the gem, adding the corresponding remote to your git repository (where your code will reside) and initializing git-deploy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem &lt;span class="nb"&gt;install &lt;/span&gt;git-deploy
git add remote production username@production.domain:/path/to/app
git deploy setup &lt;span class="nt"&gt;-r&lt;/span&gt; production
git deploy init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;rsquo;s it!
Now you can deploy with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git push production master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sweet!!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider v0.1.2 patches</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/13/jquery-rambling-slider-v0-1-2-patches.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/13/jquery-rambling-slider-v0-1-2-patches.html</id>
    <published>2011-11-12T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:38-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-1-2-patches"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 13, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I didn‚Äôt have enough time to post this before, but here it is. I‚Äôve made some patches for the &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt;. You can &lt;a href="https://github.com/gonzedge/rambling.slider/tags"&gt;see the tags on GitHub&lt;/a&gt;. These include (the key features are bolded):&lt;/p&gt;

&lt;p&gt;jQuery Rambling Slider v0.1.2.1 (patch 1, you can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.2.1.zip"&gt;download it from GitHub&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enabled method chaining on ‚Äòstart‚Äô and ‚Äòstop‚Äô.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Changed ‚ÄòanimSpeed‚Äô option to ‚Äòspeed‚Äô.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Added the ‚Äòoption‚Äô and ‚Äòeffect‚Äô methods.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jQuery Rambling Slider v0.1.2.2 (patch 2, you can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.2.2.zip"&gt;download it from GitHub&lt;/a&gt;), includes patch 1 and:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some html validation.&lt;/li&gt;
&lt;li&gt;Added the supported jQuery versions information.&lt;/li&gt;
&lt;li&gt;Removed jQuery. Pulling it from the google cdn now.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fixed issue with ‚ÄògetRandomAnimation‚Ä¶&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-1-2-patches"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 13, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I didn&amp;rsquo;t have enough time to post this before, but here it is. I&amp;rsquo;ve made some patches for the &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt;. You can &lt;a href="https://github.com/gonzedge/rambling.slider/tags"&gt;see the tags on GitHub&lt;/a&gt;. These include (the key features are bolded):&lt;/p&gt;

&lt;p&gt;jQuery Rambling Slider v0.1.2.1 (patch 1, you can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.2.1.zip"&gt;download it from GitHub&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enabled method chaining on &amp;lsquo;start&amp;rsquo; and &amp;lsquo;stop&amp;rsquo;.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Changed &amp;lsquo;animSpeed&amp;rsquo; option to &amp;lsquo;speed&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Added the &amp;lsquo;option&amp;rsquo; and &amp;lsquo;effect&amp;rsquo; methods.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jQuery Rambling Slider v0.1.2.2 (patch 2, you can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.2.2.zip"&gt;download it from GitHub&lt;/a&gt;), includes patch 1 and:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some html validation.&lt;/li&gt;
&lt;li&gt;Added the supported jQuery versions information.&lt;/li&gt;
&lt;li&gt;Removed jQuery. Pulling it from the google cdn now.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fixed issue with &amp;lsquo;getRandomAnimation&amp;rsquo;.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Added support for jQuery 1.7 (The animate height 100% issue).&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Changed &amp;lsquo;setTimeout&amp;rsquo; and &amp;lsquo;setInterval&amp;rsquo; to the window corresponding functions.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Added the &amp;lsquo;verbose&amp;rsquo; option for the &amp;lsquo;spec&amp;rsquo; cake task.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Fixed issue with testing and &amp;lsquo;setTimeout&amp;rsquo;, &amp;lsquo;setInterval&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;Added method tests as first set of tests for the rambling.slider.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prevent direction nav to be added when only one slice.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Added LICENSE file.&lt;/li&gt;
&lt;li&gt;Added details to the README.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>The jQuery 1.7 .animate() method and percentages</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/13/the-jquery-1-7-animate-method-and-percentages.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/13/the-jquery-1-7-animate-method-and-percentages.html</id>
    <published>2011-11-12T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:39-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/the-jquery-1-7-animate-method-and-percentages"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 13, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know, the &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; contains several animations. Some of them depend on changing the height of a div using percentages. Like this one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'100%'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'1.0'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;speed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem with this is that with jQuery 1.7, the ‚Äò100%‚Äô was getting parsed to just ‚Äò100‚Äô, so the height ended up being ‚Äò100px‚Äô.&lt;/p&gt;

&lt;p&gt;Thankfully, there‚Äôs an easy workaround:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nx"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;px"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'1.0'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;speed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, the slider is the container for the slice. So I just made the slice‚Äôs height to be animated to the slider‚Äôs total height instead of using percentages.&lt;/p&gt;

&lt;p&gt;I submitted &lt;a href="http://bugs.jquery.com/ticket/10780"&gt;a bug&lt;/a&gt;&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/the-jquery-1-7-animate-method-and-percentages"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 13, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know, the &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt; contains several animations. Some of them depend on changing the height of a div using percentages. Like this one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'100%'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'1.0'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;speed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem with this is that with jQuery 1.7, the &amp;lsquo;100%&amp;rsquo; was getting parsed to just &amp;lsquo;100&amp;rsquo;, so the height ended up being &amp;lsquo;100px&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;Thankfully, there&amp;rsquo;s an easy workaround:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animate&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nx"&gt;slider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;px"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'1.0'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;speed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, the slider is the container for the slice. So I just made the slice&amp;rsquo;s height to be animated to the slider&amp;rsquo;s total height instead of using percentages.&lt;/p&gt;

&lt;p&gt;I submitted &lt;a href="http://bugs.jquery.com/ticket/10780"&gt;a bug&lt;/a&gt; to the jQuery bug tracker, but it got closed almost instantaneously because &lt;a href="http://bugs.jquery.com/ticket/10669"&gt;there is already a fix for this&lt;/a&gt;, scheduled to be included in jQuery 1.7.1.&lt;/p&gt;

&lt;p&gt;Anyways, I think I won&amp;rsquo;t be using percentages anymore. :P&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Adding custom method calls to the jQuery Rambling Slider</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/12/adding-custom-method-calls-to-the-jquery-rambling-slider.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/12/adding-custom-method-calls-to-the-jquery-rambling-slider.html</id>
    <published>2011-11-11T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/adding-custom-method-calls-to-the-jquery-rambling-slider"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 12, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The &lt;a href="/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html"&gt;jQuery Rambling Slider v0.1.2&lt;/a&gt; was released a couple of days ago. One of the features added was the ability to start and stop the slider like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Every serious jQuery plugin has some way to change it‚Äôs behaviour or query some data after initialized and the general approach for this is calling the custom methods as showed above.&lt;/p&gt;

&lt;p&gt;It is well known that in order to do this, you have to perform some dynamic method calling magic. This is what you find in the jQuery documentation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;init&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/*...*/&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;show&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/*‚Ä¶&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/adding-custom-method-calls-to-the-jquery-rambling-slider"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 12, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The &lt;a href="/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html"&gt;jQuery Rambling Slider v0.1.2&lt;/a&gt; was released a couple of days ago. One of the features added was the ability to start and stop the slider like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Every serious jQuery plugin has some way to change it&amp;rsquo;s behaviour or query some data after initialized and the general approach for this is calling the custom methods as showed above.&lt;/p&gt;

&lt;p&gt;It is well known that in order to do this, you have to perform some dynamic method calling magic. This is what you find in the jQuery documentation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;init&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/*...*/&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;show&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/*...*/&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;hide&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/*...*/&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;update&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="cm"&gt;/*...*/&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tooltip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Method calling logic&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Method &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; does not exist on jQuery.tooltip&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;})(&lt;/span&gt;&lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this is the way I implemented it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;

  &lt;span class="nx"&gt;publicMethods&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'stop'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'start'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'option'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'effect'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ramblingSlider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;others&lt;/span&gt;&lt;span class="p"&gt;...)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;methodExists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;publicMethods&lt;/span&gt;
    &lt;span class="nx"&gt;optionsIsString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="s"&gt;'string'&lt;/span&gt;
    &lt;span class="nx"&gt;ramblingSlider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="s"&gt;'rambling:slider'&lt;/span&gt;
    &lt;span class="nx"&gt;isCallingGetter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;others&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;others&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;others&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;and&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;others&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="s"&gt;'string'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;methodExists&lt;/span&gt;
        &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="nx"&gt;others&lt;/span&gt;&lt;span class="p"&gt;...)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;isCallingGetter&lt;/span&gt; &lt;span class="nx"&gt;others&lt;/span&gt;
          &lt;span class="nx"&gt;value&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="err"&gt;@&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;optionsIsString&lt;/span&gt;
          &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt; &lt;span class="s"&gt;"Method '&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;' not found."&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
          &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt; &lt;span class="s"&gt;"Slider already initialized."&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt; &lt;span class="s"&gt;"Tried to call method '&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;' on element without slider."&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;methodExists&lt;/span&gt; &lt;span class="o"&gt;or&lt;/span&gt; &lt;span class="nx"&gt;optionsIsString&lt;/span&gt;

    &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;each&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="s"&gt;'rambling:slider'&lt;/span&gt;

      &lt;span class="nx"&gt;ramblingSlider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;RamblingSlider&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;
      &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt; &lt;span class="s"&gt;'rambling:slider'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;

      &lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="nx"&gt;RamblingSlider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="cm"&gt;###
# Method definitions
###&lt;/span&gt;
&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kind of cumbersome if you ask me, but hey, it works :P.
The cool stuff is that I added the &lt;code&gt;option&lt;/code&gt; and &lt;code&gt;effect&lt;/code&gt; methods, as well as identifying if it&amp;rsquo;s a setting or getting the value. This is great because I can have kind of private setters and public getters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Stop and start are really setters&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; [div#slider] for method chaining&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; [div#slider] for method chaining&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;effect&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 'random'&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;option&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; Object with all options&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;option&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;speed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 400&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;effect&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;boxRain&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; [div#slider] for method chaining&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;option&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;speed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; [div#slider] for method chaining&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;option&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;startSlide&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; 0&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#slider&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ramblingSlider&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;option&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;startSlide&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; throws error "Slider already running. Option 'startSlide' cannot be changed."&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the option &lt;code&gt;slideStart&lt;/code&gt; can only be passed when initializing, so it becomes a readonly option after initialized.&lt;/p&gt;

&lt;p&gt;Cool huh?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider v0.1.2 is out!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html</id>
    <published>2011-11-10T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-1-2-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 11, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I am proud to announce that version 0.1.2 of the jQuery Rambling Slider &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;has been released!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It really has been out for a couple of days now, but I‚Äôve had a couple of busy weeks. Nevertheless, I managed to do the major refactoring that I mentioned when &lt;a href="/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html"&gt;version 0.1.1 was released&lt;/a&gt;. So, what have I added to this new release? Here‚Äôs the list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Added the ability to call the &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;start&lt;/code&gt; methods from &lt;code&gt;$('#slider').ramblingSlider('stop')&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Added the &lt;code&gt;foldLeft&lt;/code&gt; animation.&lt;/li&gt;
&lt;li&gt;Refactored the build process, as the commands remain the same (&lt;code&gt;cake build&lt;/code&gt; and &lt;code&gt;cake minify&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Added the missing yuicompressor (oops‚Ä¶)&lt;/li&gt;
&lt;li&gt;Reformatted the for loops to be more CoffeeScript-ish.&lt;/li&gt;
&lt;li&gt;Added the‚Ä¶&lt;/li&gt;
&lt;/ul&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/jquery-rambling-slider-v0-1-2-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 11, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I am proud to announce that version 0.1.2 of the jQuery Rambling Slider &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;has been released!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It really has been out for a couple of days now, but I&amp;rsquo;ve had a couple of busy weeks. Nevertheless, I managed to do the major refactoring that I mentioned when &lt;a href="/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html"&gt;version 0.1.1 was released&lt;/a&gt;. So, what have I added to this new release? Here&amp;rsquo;s the list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Added the ability to call the &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;start&lt;/code&gt; methods from &lt;code&gt;$(&amp;#39;#slider&amp;#39;).ramblingSlider(&amp;#39;stop&amp;#39;)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Added the &lt;code&gt;foldLeft&lt;/code&gt; animation.&lt;/li&gt;
&lt;li&gt;Refactored the build process, as the commands remain the same (&lt;code&gt;cake build&lt;/code&gt; and &lt;code&gt;cake minify&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Added the missing yuicompressor (oops&amp;hellip;)&lt;/li&gt;
&lt;li&gt;Reformatted the for loops to be more CoffeeScript-ish.&lt;/li&gt;
&lt;li&gt;Added the first set of tests, along with a new command (&lt;code&gt;cake spec&lt;/code&gt;) to run them. You can &lt;a href="/blog/2011/11/09/unit-testing-the-jquery-rambling-slider-coffeescript-jasmine-nodejs-and-cake.html"&gt;see how&lt;/a&gt; I am &lt;a href="/blog/2011/11/09/unit-testing-the-jquery-rambling-slider-part-2-the-dom-jquery-and-node-js.html"&gt;doing this&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Changed some &lt;code&gt;if not&lt;/code&gt; to &lt;code&gt;unless&lt;/code&gt; to be more CoffeeScript-ish.&lt;/li&gt;
&lt;li&gt;Refactored (big time) the way the animations are being called.&lt;/li&gt;
&lt;li&gt;Refactored the plugin construction.&lt;/li&gt;
&lt;li&gt;Eliminated as much duplication as possible.&lt;/li&gt;
&lt;li&gt;Fixed some issues with the caption and the previous and next buttons.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, it was a big refactoring and some tweaks.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;0.1.2 version&lt;/strong&gt; is by far the most stable release.
You can &lt;a href="http://github.com/downloads/gonzedge/rambling.slider/jquery.rambling.slider-0.1.2.zip"&gt;download it from GitHub&lt;/a&gt;, &lt;a href="http://github.com/gonzedge/rambling.slider/tags"&gt;see the tags&lt;/a&gt;, or &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;browse the code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next up, allowing to add specify animations and adding more documentation on &lt;a href="https://github.com/gonzedge/rambling.slider/wiki"&gt;the wiki&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you find any issues, drop a comment or &lt;a href="http://github.com/gonzedge/rambling.slider/issues"&gt;add an issue on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy! :D&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The joy of writing CoffeeScript</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/11/the-joy-of-writing-coffeescript.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/11/the-joy-of-writing-coffeescript.html</id>
    <published>2011-11-10T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:36-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/the-joy-of-writing-coffeescript"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 11, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I have been a fan of JavaScript for a while now, and I have dived into the CoffeeScript world for the last month or so.&lt;/p&gt;

&lt;p&gt;Guess what?
I love it! It‚Äôs been a great experience so far.&lt;/p&gt;

&lt;p&gt;Definitely the one thing that I‚Äôm loving the most right now about CoffeeScript is the syntactic sugar.
It‚Äôs basically a lot of simple shorthands for certain things (the &lt;code&gt;-&amp;gt;&lt;/code&gt; is so handy). Take this example (and ignore what the excluded methods are doing):&lt;/p&gt;

&lt;p&gt;I had this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BuildUtils&lt;/span&gt;
  &lt;span class="na"&gt;combine_source_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;
    &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readdir&lt;/span&gt; &lt;span class="s"&gt;'./src'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error_handler&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
      &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

      &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/the-joy-of-writing-coffeescript"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 11, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I have been a fan of JavaScript for a while now, and I have dived into the CoffeeScript world for the last month or so.&lt;/p&gt;

&lt;p&gt;Guess what?
I love it! It&amp;rsquo;s been a great experience so far.&lt;/p&gt;

&lt;p&gt;Definitely the one thing that I&amp;rsquo;m loving the most right now about CoffeeScript is the syntactic sugar.
It&amp;rsquo;s basically a lot of simple shorthands for certain things (the &lt;code&gt;-&amp;gt;&lt;/code&gt; is so handy). Take this example (and ignore what the excluded methods are doing):&lt;/p&gt;

&lt;p&gt;I had this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BuildUtils&lt;/span&gt;
  &lt;span class="na"&gt;combine_source_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;
    &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readdir&lt;/span&gt; &lt;span class="s"&gt;'./src'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error_handler&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
      &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

      &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;unless&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
          &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readFile&lt;/span&gt; &lt;span class="s"&gt;"./src/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'utf8'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fileContent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error_handler&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
            &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fileContent&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
              &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And changed it to this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;BuildUtils&lt;/span&gt;
  &lt;span class="na"&gt;combine_source_files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;self&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;
    &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readdir&lt;/span&gt; &lt;span class="s"&gt;'./src'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error_handler&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
      &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

      &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;isnt&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readFile&lt;/span&gt; &lt;span class="s"&gt;"./src/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'utf8'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fileContent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error_handler&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;
          &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fileContent&lt;/span&gt;

          &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Did you spot it?
Let&amp;rsquo;s take a closer look:&lt;/p&gt;

&lt;p&gt;Had this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;unless&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="c1"&gt;# The code I want to run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And got this afterwards:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;isnt&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="c1"&gt;# The code I want to run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, I know, it&amp;rsquo;s a really simple change, and it&amp;rsquo;s basically doing the same.
But doesn&amp;rsquo;t the second one read beautifully?&lt;/p&gt;

&lt;p&gt;This is how I read it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For file and index in files, when the file does not start with &amp;lsquo;.&amp;rsquo; then do&amp;hellip;&amp;ldquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What do you think?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1 - will_paginate and AJAX</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/10/rails-3-1-will-paginate-and-ajax.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/10/rails-3-1-will-paginate-and-ajax.html</id>
    <published>2011-11-09T19:00:00-05:00</published>
    <updated>2016-01-14T23:53:35-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/rails-3-1-will_paginate-and-ajax"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 10, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;For a project that I‚Äôm currently working on, I have a couple of list views that needed pagination. So I went with the ol‚Äô &lt;code&gt;will_paginate&lt;/code&gt; gem (which I first saw years ago when I didn‚Äôt even consider myself a developer) to take care of this.&lt;/p&gt;

&lt;p&gt;It‚Äôs as simple as including a line with &lt;code&gt;gem 'will_paginate'&lt;/code&gt; on your &lt;code&gt;Gemfile&lt;/code&gt;, running &lt;code&gt;bundle install&lt;/code&gt;, and include this in the controller:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrdersController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;
    &lt;span class="vi"&gt;@orders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;page: &lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:page&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;per_page: &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this in the view &lt;code&gt;orders/index.html.erb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"orders"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="vi"&gt;@orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
          &lt;span class="c"&gt;&amp;lt;!-- Show order stuff --&amp;gt;&lt;/span&gt;
‚Ä¶&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/rails-3-1-will_paginate-and-ajax"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 10, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;For a project that I&amp;rsquo;m currently working on, I have a couple of list views that needed pagination. So I went with the ol&amp;rsquo; &lt;code&gt;will_paginate&lt;/code&gt; gem (which I first saw years ago when I didn&amp;rsquo;t even consider myself a developer) to take care of this.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s as simple as including a line with &lt;code&gt;gem &amp;#39;will_paginate&amp;#39;&lt;/code&gt; on your &lt;code&gt;Gemfile&lt;/code&gt;, running &lt;code&gt;bundle install&lt;/code&gt;, and include this in the controller:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrdersController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;
    &lt;span class="vi"&gt;@orders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;page: &lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:page&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;per_page: &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this in the view &lt;code&gt;orders/index.html.erb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"orders"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="vi"&gt;@orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
          &lt;span class="c"&gt;&amp;lt;!-- Show order stuff --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;will_paginate&lt;/span&gt; &lt;span class="vi"&gt;@orders&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, this last line will generate your pagination links. Then, a problem arose. There was one specific view which I didn&amp;rsquo;t want to be refreshed completely when clicking the pagination links.&lt;/p&gt;

&lt;h3&gt;Partials, jQuery and AJAX to the rescue&lt;/h3&gt;

&lt;p&gt;I found &lt;a href="http://rorramblings.blogspot.com/2010/11/willpaginate-and-ajax-in-rails-3.html"&gt;a post&lt;/a&gt; (in a blog with a really familiar name), which described a way to do it that just seemed magical. But that combined with a &lt;a href="http://stackoverflow.com/questions/565145/best-way-to-get-will-paginate-working-with-ajax"&gt;stack overflow question&lt;/a&gt; that I found, seems to be the way to go. Here is what I did:&lt;/p&gt;

&lt;p&gt;In the controller:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OrdersController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;
    &lt;span class="vi"&gt;@orders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Order&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;paginate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;page: &lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:page&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;per_page: &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Encapsulate the order list in the partial view &lt;code&gt;orders/_orders.html.erb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="vi"&gt;@orders&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- Show order stuff --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;will_paginate&lt;/span&gt; &lt;span class="vi"&gt;@orders&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting index view &lt;code&gt;orders/index.html.erb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"orders"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'orders'&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The view &lt;code&gt;orders/index.js.erb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#orders&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;%= render partial: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;orders&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; %&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAjaxPagination&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The JavaScript (CoffeeScript) file &lt;code&gt;assets/orders.js.coffee&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAjaxPagination&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.pagination a'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;click&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;loading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="s"&gt;'&amp;lt;div id="loading" style="display: none;"&amp;gt;&amp;lt;span&amp;gt;&amp;lt;img src="/assets/loading.gif" alt="cargando..."/&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.other_images'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;prepend&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;
      &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fadeIn&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ajax&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="na"&gt;dataType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'script'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fadeOut&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="no"&gt;false&lt;/span&gt;

  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setAjaxPagination&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;rsquo;s it!
Fairly easy I would say!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Unit testing the jQuery Rambling Slider - Part 2 - The DOM, jQuery and node.js</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/09/unit-testing-the-jquery-rambling-slider-part-2-the-dom-jquery-and-node-js.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/09/unit-testing-the-jquery-rambling-slider-part-2-the-dom-jquery-and-node-js.html</id>
    <published>2011-11-08T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/unit-testing-the-jquery-rambling-slider-part-2-the-dom-jquery-and-node-js"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;In order to continue to add tests to the &lt;a href="/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html"&gt;jQuery Rambling Slider&lt;/a&gt;, I needed to test something against the DOM. Problem is, you don‚Äôt count with the DOM when you‚Äôre running the Jasmine tests from console. So what should I do?&lt;/p&gt;

&lt;p&gt;As expected, I found that there is a DOM emulator in &lt;a href="http://nodejs.org"&gt;node.js&lt;/a&gt; :D. Also, to test using jQuery I needed to download the corresponding node package. So I didn‚Äôt waste any time and went ahead to install them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; jsdom
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; jquery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So now, I can write something like this in my &lt;code&gt;src/jquery.plugins.coffee&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[].&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;
&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And test it on my &lt;code&gt;spec/jquery.plugins.spec.coffee&lt;/code&gt; with something like this‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/unit-testing-the-jquery-rambling-slider-part-2-the-dom-jquery-and-node-js"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;In order to continue to add tests to the &lt;a href="/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html"&gt;jQuery Rambling Slider&lt;/a&gt;, I needed to test something against the DOM. Problem is, you don&amp;rsquo;t count with the DOM when you&amp;rsquo;re running the Jasmine tests from console. So what should I do?&lt;/p&gt;

&lt;p&gt;As expected, I found that there is a DOM emulator in &lt;a href="http://nodejs.org"&gt;node.js&lt;/a&gt; :D. Also, to test using jQuery I needed to download the corresponding node package. So I didn&amp;rsquo;t waste any time and went ahead to install them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; jsdom
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; jquery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So now, I can write something like this in my &lt;code&gt;src/jquery.plugins.coffee&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[].&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;
&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;jQuery&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And test it on my &lt;code&gt;spec/jquery.plugins.spec.coffee&lt;/code&gt; with something like this (this is a somewhat trivial test):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'jsdom'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;jsdom&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;createWindow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;global&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;jQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="s"&gt;'jquery'&lt;/span&gt;

&lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="s"&gt;'../src/array_extensions'&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="s"&gt;'../src/jquery.plugins'&lt;/span&gt;

&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jQuery&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt; &lt;span class="s"&gt;'jQuery Plugins'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;html_box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;null&lt;/span&gt;

  &lt;span class="nx"&gt;beforeEach&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;html_box&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="s"&gt;'&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;html_box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;append&lt;/span&gt; &lt;span class="s"&gt;'&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;'&lt;/span&gt;

  &lt;span class="nx"&gt;describe&lt;/span&gt; &lt;span class="s"&gt;'when reversing a jQuery array'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;original_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;null&lt;/span&gt;
    &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;null&lt;/span&gt;

    &lt;span class="nx"&gt;beforeEach&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;html_box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt; &lt;span class="s"&gt;'li'&lt;/span&gt;
      &lt;span class="nx"&gt;original_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;html_box&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;find&lt;/span&gt; &lt;span class="s"&gt;'li'&lt;/span&gt;
      &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="s"&gt;'should return the elements in reverse order'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="na"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="na"&gt;toEqual&lt;/span&gt; &lt;span class="nx"&gt;original_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;jasmine-node &lt;span class="nt"&gt;--coffee&lt;/span&gt; spec/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;rsquo;s it!
Pretty cool, huh?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Unit testing the jQuery Rambling Slider - CoffeeScript, Jasmine and node.js</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/11/09/unit-testing-the-jquery-rambling-slider-coffeescript-jasmine-nodejs-and-cake.html"/>
    <id>https://www.gonzedge.com/blog/2011/11/09/unit-testing-the-jquery-rambling-slider-coffeescript-jasmine-nodejs-and-cake.html</id>
    <published>2011-11-08T19:00:00-05:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/unit-testing-the-jquery-rambling-slider-coffeescript-jasmine-nodejs-and-cake"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know, I have been working lately on the &lt;a href="/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html"&gt;jQuery Rambling Slider&lt;/a&gt;. One of my personal milestones with this project is to write as many unit tests as possible, so I began my research.&lt;/p&gt;

&lt;p&gt;Honestly, I didn‚Äôt know where to begin. I remember to have read once on twitter that someone was writing their tests with &lt;a href="http://pivotal.github.com/jasmine/"&gt;Jasmine&lt;/a&gt; and &lt;a href="http://coffeescript.org"&gt;CoffeeScript&lt;/a&gt;, so that could be a good starting point (and it sounds really fun too!). I have worked with Jasmine before and it sure was a great experience. It‚Äôs yet another productivity tool made by the great &lt;a href="http://pivotallabs.com"&gt;Pivotal Labs&lt;/a&gt; guys.&lt;/p&gt;

&lt;p&gt;After googling for a while, I stumbled into &lt;a href="http://www.2ality.com/2011/10/jasmine.html"&gt;a post from someone that was writing tests in Jasmine and node.js&lt;/a&gt;&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/11/unit-testing-the-jquery-rambling-slider-coffeescript-jasmine-nodejs-and-cake"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on November 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know, I have been working lately on the &lt;a href="/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html"&gt;jQuery Rambling Slider&lt;/a&gt;. One of my personal milestones with this project is to write as many unit tests as possible, so I began my research.&lt;/p&gt;

&lt;p&gt;Honestly, I didn&amp;rsquo;t know where to begin. I remember to have read once on twitter that someone was writing their tests with &lt;a href="http://pivotal.github.com/jasmine/"&gt;Jasmine&lt;/a&gt; and &lt;a href="http://coffeescript.org"&gt;CoffeeScript&lt;/a&gt;, so that could be a good starting point (and it sounds really fun too!). I have worked with Jasmine before and it sure was a great experience. It&amp;rsquo;s yet another productivity tool made by the great &lt;a href="http://pivotallabs.com"&gt;Pivotal Labs&lt;/a&gt; guys.&lt;/p&gt;

&lt;p&gt;After googling for a while, I stumbled into &lt;a href="http://www.2ality.com/2011/10/jasmine.html"&gt;a post from someone that was writing tests in Jasmine and node.js&lt;/a&gt;. This is really awesome. Being able to run the Jasmine tests without firing up a browser, beautiful. In order to achieve this, you have to install &lt;code&gt;jasmine-node&lt;/code&gt; through the node package manager like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; jasmine-node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let&amp;rsquo;s say you have a file &lt;code&gt;src/array_extensions.coffee&lt;/code&gt; that looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="na"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;is&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="no"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So you write this test in &lt;code&gt;spec/array_extensions.spec.coffee&lt;/code&gt;, which shows how extremely beatiful is to write Jasmine tests on CoffeeScript:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="s"&gt;'../src/array_extensions'&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt; &lt;span class="s"&gt;'Array Extensions'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;describe&lt;/span&gt; &lt;span class="s"&gt;'when verifying if an array contains an element'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;null&lt;/span&gt;

    &lt;span class="nx"&gt;beforeEach&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="s"&gt;'should return true for a contained element'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;toBeTruthy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="s"&gt;'should return false for a non contained element'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="na"&gt;toBeFalsy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run the tests just type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;jasmine-node &lt;span class="nt"&gt;--coffee&lt;/span&gt; spec/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Did you notice the sweet &lt;code&gt;--coffee&lt;/code&gt;?!&lt;/p&gt;

&lt;p&gt;So that&amp;rsquo;s where I began, writing tests for the simpler stuff first. I&amp;rsquo;ve just added a few tests, but I expect to bring that to 100% test coverage soon.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Installing the capybara-webkit gem</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/31/installing-the-capybara-webkit-gem.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/31/installing-the-capybara-webkit-gem.html</id>
    <published>2011-10-30T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:32-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/installing-the-capybara-webkit-gem"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 31, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;To install the capybara-webkit gem, you need to have the libqt4-dev installed. So run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;libqt4-dev
gem &lt;span class="nb"&gt;install &lt;/span&gt;capybara-webkit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should be good to go!&lt;/p&gt;
...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/installing-the-capybara-webkit-gem"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 31, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;To install the capybara-webkit gem, you need to have the libqt4-dev installed. So run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;libqt4-dev
gem &lt;span class="nb"&gt;install &lt;/span&gt;capybara-webkit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should be good to go!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1 - Translating routes</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/26/rails-3-1-translating-routes.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/26/rails-3-1-translating-routes.html</id>
    <published>2011-10-25T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:31-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/rails-3-1-translating-routes"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 26, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Today, I was wondering if there would be a way to add translated routes automatically in Ruby on Rails. This is for a project I‚Äôm currently working on, whose users speak mostly spanish, so I want to make them happy with urls like ‚Äú/contacto‚Äù, ‚Äú/quienes-somos‚Äù and ‚Äú/trabajos/1‚Äù instead of ‚Äú/contact‚Äù, ‚Äú/about-us‚Äù, and ‚Äújobs/1‚Äù.&lt;/p&gt;

&lt;p&gt;So, I googled and there it was: &lt;a href="https://github.com/kwi/i18n_routing"&gt;the i18n_routing gem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This reminded me one more time how awesome is the Ruby community, which is definitely one of the main reasons why I‚Äôm loving Ruby and Rails so much.&lt;/p&gt;

&lt;p&gt;So back on topic, the gem is easy to install, and only depends on the i18n gem. Run &lt;code&gt;gem install i18n_routing&lt;/code&gt; and you should be good‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/rails-3-1-translating-routes"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 26, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Today, I was wondering if there would be a way to add translated routes automatically in Ruby on Rails. This is for a project I&amp;rsquo;m currently working on, whose users speak mostly spanish, so I want to make them happy with urls like &amp;ldquo;/contacto&amp;rdquo;, &amp;ldquo;/quienes-somos&amp;rdquo; and &amp;ldquo;/trabajos/1&amp;rdquo; instead of &amp;ldquo;/contact&amp;rdquo;, &amp;ldquo;/about-us&amp;rdquo;, and &amp;ldquo;jobs/1&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;So, I googled and there it was: &lt;a href="https://github.com/kwi/i18n_routing"&gt;the i18n_routing gem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This reminded me one more time how awesome is the Ruby community, which is definitely one of the main reasons why I&amp;rsquo;m loving Ruby and Rails so much.&lt;/p&gt;

&lt;p&gt;So back on topic, the gem is easy to install, and only depends on the i18n gem. Run &lt;code&gt;gem install i18n_routing&lt;/code&gt; and you should be good to go. It supports rails 2.x as well as 3.x.&lt;/p&gt;

&lt;p&gt;Now, for adding the translated routes, you have to wrap your routes in this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;localized&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;I18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;available_locales&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# Your routes here&lt;/span&gt;
  &lt;span class="c1"&gt;# This are just test routes&lt;/span&gt;
  &lt;span class="n"&gt;resources&lt;/span&gt; &lt;span class="ss"&gt;:users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:jobs&lt;/span&gt;

  &lt;span class="n"&gt;resource&lt;/span&gt; &lt;span class="ss"&gt;:contact&lt;/span&gt;

  &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="s1"&gt;'home'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'jobs#index'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, and this is the most pleasing aspect of the gem, just add your translations to the locale file that you need! In my case, it&amp;rsquo;s gonna be the &lt;code&gt;config/locales/es.yml&lt;/code&gt;. Like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;es&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;usuarios'&lt;/span&gt;
  &lt;span class="na"&gt;resource&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;contact&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;contacto'&lt;/span&gt;
  &lt;span class="na"&gt;named_routes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;about-us&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;quienes-somos'&lt;/span&gt;
  &lt;span class="na"&gt;routes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;as&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;trabajos'&lt;/span&gt;
      &lt;span class="na"&gt;path_names&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;new&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;nuevo'&lt;/span&gt;
        &lt;span class="na"&gt;edit&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;editar'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Beautiful!&lt;/p&gt;

&lt;p&gt;Note the correspondence between the routes methods and the routes translation tree. The &lt;code&gt;resources&lt;/code&gt; and the &lt;code&gt;resource&lt;/code&gt; correspond to the &lt;code&gt;resources&lt;/code&gt; and &lt;code&gt;resource&lt;/code&gt; methods used when defining the routes. Similarly, the &lt;code&gt;named_routes&lt;/code&gt; corresponds to the &lt;code&gt;match&lt;/code&gt; match. And finally, the &lt;code&gt;routes&lt;/code&gt; is a subtree, containing the resource and it&amp;rsquo;s path names.&lt;/p&gt;

&lt;p&gt;That is all&amp;hellip;
Nice, right?!&lt;/p&gt;

&lt;p&gt;You might find more info about it in &lt;a href="https://github.com/kwi/i18n_routing/wiki"&gt;their wiki&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Oh, I almost forgot. For debugging, you can add a second parameter &lt;code&gt;verbose: true&lt;/code&gt; to the &lt;code&gt;localized&lt;/code&gt; method. The routes configuration will be printed out when starting the rails console, the application, and even when running the migrations.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider v0.1.1 is out!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html</id>
    <published>2011-10-22T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/jquery-rambling-slider-v0-1-1-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yesterday, I &lt;a href="/blog/2011/10/22/jquery-rambling-slider-has-been-released.html"&gt;released v0.1.0 of the jQuery Rambling Slider&lt;/a&gt; and, as it happens with with all software development, some bugs were found. But hey, I took the time to fix them and now the &lt;a href="https://github.com/gonzedge/rambling.slider/zipball/0.1.1"&gt;v0.1.1 is out&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Among the fixed issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some effects not working with the default settings.&lt;/li&gt;
&lt;li&gt;Flaky &amp;lsquo;boxRandom&amp;rsquo; effect (some boxes not showing).&lt;/li&gt;
&lt;li&gt;Control Navigation not showing when styled to be outside of slider (negative margin and hidden overflow).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me know if you find any other issues.
Major refactoring is up for next release.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;
&lt;a href="/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html"&gt;Version 0.1.2 was released&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;:D&lt;/p&gt;
...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/jquery-rambling-slider-v0-1-1-is-out"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 23, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yesterday, I &lt;a href="/blog/2011/10/22/jquery-rambling-slider-has-been-released.html"&gt;released v0.1.0 of the jQuery Rambling Slider&lt;/a&gt; and, as it happens with with all software development, some bugs were found. But hey, I took the time to fix them and now the &lt;a href="https://github.com/gonzedge/rambling.slider/zipball/0.1.1"&gt;v0.1.1 is out&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Among the fixed issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some effects not working with the default settings.&lt;/li&gt;
&lt;li&gt;Flaky &amp;lsquo;boxRandom&amp;rsquo; effect (some boxes not showing).&lt;/li&gt;
&lt;li&gt;Control Navigation not showing when styled to be outside of slider (negative margin and hidden overflow).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me know if you find any other issues.
Major refactoring is up for next release.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;
&lt;a href="/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html"&gt;Version 0.1.2 was released&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;:D&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Rambling Slider has been released!</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/22/jquery-rambling-slider-has-been-released.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/22/jquery-rambling-slider-has-been-released.html</id>
    <published>2011-10-21T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/jquery-rambling-slider-has-been-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 22, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;A &lt;a href="/blog/2011/10/01/jquery-nivo-slider-and-images-of-different-size.html"&gt;while ago&lt;/a&gt; I was looking for a good image slider jQuery plugin to use on a project, and &lt;a href="http://github.com/gilbitron/Nivo-Slider"&gt;Nivo Slider&lt;/a&gt; turned out to be the best candidate. I made some modifications for my needs at the moment and issued a pull request, but had no luck. I also said that if my pull request didn‚Äôt get accepted or took too long to be accepted, I would release it myself.&lt;/p&gt;

&lt;p&gt;Guess what? I got tired of waiting, so here it is!
I just uploaded my first stable release of the now called &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt;. :)&lt;/p&gt;

&lt;p&gt;It‚Äôs still basically the same Nivo Slider with the tweaks I made in &lt;a href="http://github.com/gonzedge/Nivo-Slider"&gt;my fork&lt;/a&gt;. It‚Äôs now written in CoffeeScript, which I‚Äôm having a lot of fun with, while the compiled JavaScript‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/jquery-rambling-slider-has-been-released"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 22, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;A &lt;a href="/blog/2011/10/01/jquery-nivo-slider-and-images-of-different-size.html"&gt;while ago&lt;/a&gt; I was looking for a good image slider jQuery plugin to use on a project, and &lt;a href="http://github.com/gilbitron/Nivo-Slider"&gt;Nivo Slider&lt;/a&gt; turned out to be the best candidate. I made some modifications for my needs at the moment and issued a pull request, but had no luck. I also said that if my pull request didn&amp;rsquo;t get accepted or took too long to be accepted, I would release it myself.&lt;/p&gt;

&lt;p&gt;Guess what? I got tired of waiting, so here it is!
I just uploaded my first stable release of the now called &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;jQuery Rambling Slider&lt;/a&gt;. :)&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s still basically the same Nivo Slider with the tweaks I made in &lt;a href="http://github.com/gonzedge/Nivo-Slider"&gt;my fork&lt;/a&gt;. It&amp;rsquo;s now written in CoffeeScript, which I&amp;rsquo;m having a lot of fun with, while the compiled JavaScript files are in the &amp;ldquo;lib/&amp;rdquo; directory of the repository.&lt;/p&gt;

&lt;p&gt;I plan on continue developing some more tweaks and probably do a major refactoring. Meanwhile, though, don&amp;rsquo;t be afraid to &lt;a href="http://github.com/gonzedge/rambling.slider/zipball/v0.1.0"&gt;download version 0.1.0 from GitHub&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;You can also &lt;a href="http://github.com/gonzedge/rambling.slider/tags/"&gt;browse the tags on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 1&lt;/strong&gt;
&lt;a href="/blog/2011/10/23/jquery-rambling-slider-v0-1-1-is-out.html"&gt;Version 0.1.1 was released&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 2&lt;/strong&gt;
&lt;a href="/blog/2011/11/11/jquery-rambling-slider-v0-1-2-is-out.html"&gt;Version 0.1.2 was released&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;:D
Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The nokogiri gem and the "libxslt is missing" error</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/17/the-nokogiri-gem-and-the-libxslt-is-missing-error.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/17/the-nokogiri-gem-and-the-libxslt-is-missing-error.html</id>
    <published>2011-10-16T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:22-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/the-nokogiri-gem-and-the-libxslt-is-missing-error"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 17, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I ran into this issue today. But this one&amp;rsquo;s easy. Just run the following command and install the gem again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;libxslt1.1 libxslt1-dev libxslt-ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it!
It should work fine now :).&lt;/p&gt;
...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/the-nokogiri-gem-and-the-libxslt-is-missing-error"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 17, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I ran into this issue today. But this one&amp;rsquo;s easy. Just run the following command and install the gem again:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;libxslt1.1 libxslt1-dev libxslt-ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it!
It should work fine now :).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using Postgresql with Rails 3.1: the 'pg' gem</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/17/using-postgresql-with-rails-3-1-the-pg-gem.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/17/using-postgresql-with-rails-3-1-the-pg-gem.html</id>
    <published>2011-10-16T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:23-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/using-postgresql-with-rails-3-1-the-pg-gem"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 17, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know I‚Äôve been learning Ruby on Rails for the last few weeks. I‚Äôm also currently developing an application using the &lt;a href="http://github.com/resolve/refinerycms"&gt;edge version&lt;/a&gt; of &lt;a href="http://refinerycms.com"&gt;RefineryCMS&lt;/a&gt; (which is really a Rails 3.1 application), integrated with the almighty &lt;a href="http://heroku.com"&gt;Heroku&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanted to use RefineryCMS with Postgresql, so the only thing that I had to do was installing postgresql and it‚Äôs corresponding gem ‚Äòpg‚Äô‚Ä¶ Or so I thought.&lt;/p&gt;

&lt;p&gt;I wasn‚Äôt surprised. About a year ago I had the same unfulfilled expectations with mysql and the mysql gem. So, this is what I had to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, of course, install postgresql with &lt;code&gt;apt-get install postgresql&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Then, install the libpq-dev with &lt;code&gt;apt-get install libpq-dev&lt;/code&gt;. Note‚Ä¶&lt;/li&gt;
&lt;/ul&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/using-postgresql-with-rails-3-1-the-pg-gem"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 17, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may know I&amp;rsquo;ve been learning Ruby on Rails for the last few weeks. I&amp;rsquo;m also currently developing an application using the &lt;a href="http://github.com/resolve/refinerycms"&gt;edge version&lt;/a&gt; of &lt;a href="http://refinerycms.com"&gt;RefineryCMS&lt;/a&gt; (which is really a Rails 3.1 application), integrated with the almighty &lt;a href="http://heroku.com"&gt;Heroku&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wanted to use RefineryCMS with Postgresql, so the only thing that I had to do was installing postgresql and it&amp;rsquo;s corresponding gem &amp;lsquo;pg&amp;rsquo;&amp;hellip; Or so I thought.&lt;/p&gt;

&lt;p&gt;I wasn&amp;rsquo;t surprised. About a year ago I had the same unfulfilled expectations with mysql and the mysql gem. So, this is what I had to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, of course, install postgresql with &lt;code&gt;apt-get install postgresql&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then, install the libpq-dev with &lt;code&gt;apt-get install libpq-dev&lt;/code&gt;. Note that it&amp;rsquo;s &amp;ldquo;pq&amp;rdquo; and not &amp;ldquo;pg&amp;rdquo; as you would probably expect.&lt;/li&gt;
&lt;li&gt;Finally, install the &amp;ldquo;pg&amp;rdquo; gem with &lt;code&gt;gem install pg&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With that done, you should be ready to go. :)
Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Refinery CMS, rails 3.1.1 and the Operation not permitted error Errno::EPERM</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/14/refinery-cms-rails-3-1-1-and-the-operation-not-permitted-error-errnoeperm.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/14/refinery-cms-rails-3-1-1-and-the-operation-not-permitted-error-errnoeperm.html</id>
    <published>2011-10-13T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:21-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/refinery-cms-rails-3-1-1-and-the-operation-not-permitted-error-errnoeperm"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 14, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The last couple of days, I‚Äôve been trying to set up &lt;a href="http://refinerycms.com"&gt;Refinery CMS&lt;/a&gt; for a project I‚Äôm working on. I‚Äôve made a couple of Stack Overflow questions about which ruby on rails CMS supports &lt;a href="http://stackoverflow.com/questions/7640603/ruby-on-rails-cms-with-multiple-languages"&gt;multiple languages&lt;/a&gt; and &lt;a href="http://stackoverflow.com/questions/7561695/rails-cms-with-custom-types"&gt;custom types&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Answers to both questions were directing me to Refinery CMS, so I had to test it out.
But‚Ä¶ I wanted it to be on rails 3.1 (either 3.1.0 or 3.1.1). So I googled for a while and found that &lt;a href="http://github.com/resolve/refinerycms"&gt;Refinery CMS edge on github&lt;/a&gt; does support rails 3.1.&lt;/p&gt;

&lt;p&gt;So I set up my Refinery CMS local test under my Ubuntu virtual machine by first downloading the edge code from github, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone git://github.com/resolve/refinerycms.git ~/refinerycms-edge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/refinery-cms-rails-3-1-1-and-the-operation-not-permitted-error-errnoeperm"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 14, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The last couple of days, I&amp;rsquo;ve been trying to set up &lt;a href="http://refinerycms.com"&gt;Refinery CMS&lt;/a&gt; for a project I&amp;rsquo;m working on. I&amp;rsquo;ve made a couple of Stack Overflow questions about which ruby on rails CMS supports &lt;a href="http://stackoverflow.com/questions/7640603/ruby-on-rails-cms-with-multiple-languages"&gt;multiple languages&lt;/a&gt; and &lt;a href="http://stackoverflow.com/questions/7561695/rails-cms-with-custom-types"&gt;custom types&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Answers to both questions were directing me to Refinery CMS, so I had to test it out.
But&amp;hellip; I wanted it to be on rails 3.1 (either 3.1.0 or 3.1.1). So I googled for a while and found that &lt;a href="http://github.com/resolve/refinerycms"&gt;Refinery CMS edge on github&lt;/a&gt; does support rails 3.1.&lt;/p&gt;

&lt;p&gt;So I set up my Refinery CMS local test under my Ubuntu virtual machine by first downloading the edge code from github, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone git://github.com/resolve/refinerycms.git ~/refinerycms-edge
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, after that, I created the new Refinery CMS app:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;~/refinerycms-edge/bin/refinerycms refinery_test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It seemed that it worked fine, but when I tried to run the app with &lt;code&gt;rails server&lt;/code&gt;, It failed badly with a &lt;code&gt;&amp;#39;rename&amp;#39; -- Operation not permitted ... Errno::EPERM&lt;/code&gt; error. When I googled this, there wasn&amp;rsquo;t much to find. Supposedly, this was a &lt;a href="https://github.com/dougal/acts_as_indexed/issues/15"&gt;permission issues&lt;/a&gt; but the user running the command had all the privileges and even if I changed the app folder&amp;rsquo;s permissions it still failed.&lt;/p&gt;

&lt;p&gt;So I tried again with an earlier version, with no luck. Almost two days completely lost until, today, I remembered that I have my repositories folder on a NTFS partition, created by my Windows installation. Could it be possible that this had something to do with the error?&lt;/p&gt;

&lt;p&gt;So, I tried to do the same under an &lt;strong&gt;ext4 partition&lt;/strong&gt; and &lt;em&gt;BAM! It works!!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I guess I&amp;rsquo;m gonna have to move some of my repositories to the virtual machine&amp;rsquo;s disk&amp;hellip;&lt;/p&gt;

&lt;p&gt;If you have this same issue, try running your commands under an ext3/ext4 partition and see how it goes.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1 "rails console" fails with "no such file to load -- readline"</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/12/rails3-1-rails-console-fails-with-no-such-file-to-load-readline.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/12/rails3-1-rails-console-fails-with-no-such-file-to-load-readline.html</id>
    <published>2011-10-11T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:20-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/rails3-1-rails-console-fails-with-no-such-file-to-load-readline"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 12, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yesterday, I was trying to run the &lt;code&gt;rails console&lt;/code&gt; command on Ubuntu with ruby 1.9.2 and rails 3.1, without any success. I was getting a &lt;code&gt;no such file to load -- readline&lt;/code&gt; error. This kind of error was sort of familiar for me (I had the common &lt;code&gt;no such file to load -- zlib&lt;/code&gt; and the not so common &lt;code&gt;no such file to load -- openssl&lt;/code&gt; a while ago). So this was probably another package that I was missing.&lt;/p&gt;

&lt;p&gt;Turns out that as I found in a &lt;a href="http://stackoverflow.com/questions/4385549/no-such-file-to-load-readline"&gt;Stack Overflow question&lt;/a&gt;, I needed the &lt;code&gt;libreadline-dev&lt;/code&gt;, which I didn‚Äôt have installed. But I also needed to &lt;em&gt;recompile ruby&lt;/em&gt;, seriously!?&lt;/p&gt;

&lt;p&gt;This is where rvm comes to the rescue, and why I love so much to have rvm installed :D. You only need‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/rails3-1-rails-console-fails-with-no-such-file-to-load-readline"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 12, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yesterday, I was trying to run the &lt;code&gt;rails console&lt;/code&gt; command on Ubuntu with ruby 1.9.2 and rails 3.1, without any success. I was getting a &lt;code&gt;no such file to load -- readline&lt;/code&gt; error. This kind of error was sort of familiar for me (I had the common &lt;code&gt;no such file to load -- zlib&lt;/code&gt; and the not so common &lt;code&gt;no such file to load -- openssl&lt;/code&gt; a while ago). So this was probably another package that I was missing.&lt;/p&gt;

&lt;p&gt;Turns out that as I found in a &lt;a href="http://stackoverflow.com/questions/4385549/no-such-file-to-load-readline"&gt;Stack Overflow question&lt;/a&gt;, I needed the &lt;code&gt;libreadline-dev&lt;/code&gt;, which I didn&amp;rsquo;t have installed. But I also needed to &lt;em&gt;recompile ruby&lt;/em&gt;, seriously!?&lt;/p&gt;

&lt;p&gt;This is where rvm comes to the rescue, and why I love so much to have rvm installed :D. You only need to install the rvm package, remove the rubies and reinstall them.
So I ended up running this set of commands, and if you have this issue, you should run it as well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;apt-get &lt;span class="nb"&gt;install &lt;/span&gt;libreadline-dev
rvm pkg &lt;span class="nb"&gt;install &lt;/span&gt;readline
rvm remove 1.9.2
rvm &lt;span class="nb"&gt;install &lt;/span&gt;1.9.2
rvm &lt;span class="nt"&gt;--default&lt;/span&gt; 1.9.2
rvm use 1.9.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And, when I finally ran &lt;code&gt;rails console&lt;/code&gt;, it all went well.
That&amp;rsquo;s it, no more recompiling ruby yourself. Let rvm take care of that.&lt;/p&gt;

&lt;p&gt;Seems like I&amp;rsquo;m getting more familiar with this whole thing. :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1 smtp gmail Errno::ECONNREFUSED Connection refused</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/09/rails-3-1-smtp-gmail-errnoeconnrefused-connection-refuse.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/09/rails-3-1-smtp-gmail-errnoeconnrefused-connection-refuse.html</id>
    <published>2011-10-08T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:20-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/rails-3-1-smtp-gmail-errnoeconnrefused-connection-refuse"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I was trying out the rails 3.1 smtp mailer on the sandbox application I use to test all the new stuff and it was throwing this error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;Errno::ECONNREFUSED &lt;span class="k"&gt;in &lt;/span&gt;TestController#create

Connection refused - connect&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And I had this configuration on &lt;code&gt;config/environments/development.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Demo&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configure&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;action_mailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delivery_method&lt;/span&gt; &lt;span class="ss"&gt;:smtp&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;action_mailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;smtp_settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;enable_starttls_auto: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;address: &lt;/span&gt;&lt;span class="s1"&gt;'smtp.gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;port: &lt;/span&gt;&lt;span class="mi"&gt;587&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;domain: &lt;/span&gt;&lt;span class="s1"&gt;'gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;authentication: &lt;/span&gt;&lt;span class="s1"&gt;'plain'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;user_name: &lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;email@yourdomain.com&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;password: &lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;password&amp;gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I tried quite a number of combinations for‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/rails-3-1-smtp-gmail-errnoeconnrefused-connection-refuse"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I was trying out the rails 3.1 smtp mailer on the sandbox application I use to test all the new stuff and it was throwing this error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;Errno::ECONNREFUSED &lt;span class="k"&gt;in &lt;/span&gt;TestController#create

Connection refused - connect&lt;span class="o"&gt;(&lt;/span&gt;2&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And I had this configuration on &lt;code&gt;config/environments/development.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Demo&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configure&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;action_mailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delivery_method&lt;/span&gt; &lt;span class="ss"&gt;:smtp&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;action_mailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;smtp_settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;enable_starttls_auto: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;address: &lt;/span&gt;&lt;span class="s1"&gt;'smtp.gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;port: &lt;/span&gt;&lt;span class="mi"&gt;587&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;domain: &lt;/span&gt;&lt;span class="s1"&gt;'gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;authentication: &lt;/span&gt;&lt;span class="s1"&gt;'plain'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;user_name: &lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;email@yourdomain.com&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;password: &lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;password&amp;gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I tried quite a number of combinations for a couple of hours. I added the &lt;code&gt;tsl: true&lt;/code&gt;, changed the &lt;code&gt;domain&lt;/code&gt; to &amp;lsquo;ramblinglabs.com&amp;rsquo;, changed to my personal email, so on and so forth, and nothing worked. I saw several questions in stack overflow, but there was &lt;a href="http://stackoverflow.com/questions/7033762/errnoeconnrefused-in-orderscontrollercreate/7705757#7705757"&gt;one that called my attention&lt;/a&gt;, &amp;lsquo;cause it was the same issue I was having.&lt;/p&gt;

&lt;p&gt;In my frustration I kept changing things, forgetting one essential matter&amp;hellip; You have to restart your rails application for the changes to get applied. Yeah, I know&amp;hellip;&lt;/p&gt;

&lt;p&gt;So, the only thing that I really had to do was removing the &lt;code&gt;domain: &amp;#39;gmail.com&amp;#39;&lt;/code&gt; and restart the rails application. The configuration left was this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Demo&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;configure&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;action_mailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delivery_method&lt;/span&gt; &lt;span class="ss"&gt;:smtp&lt;/span&gt;
  &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;action_mailer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;smtp_settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;enable_starttls_auto: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;address: &lt;/span&gt;&lt;span class="s1"&gt;'smtp.gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;port: &lt;/span&gt;&lt;span class="mi"&gt;587&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;authentication: &lt;/span&gt;&lt;span class="s1"&gt;'plain'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;user_name: &lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;email@yourdomain.com&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;password: &lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;password&amp;gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that was it!
I posted an answer to the stack overflow question too.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Android Market not showing all installed apps</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/09/android-market-not-showing-all-installed-apps.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/09/android-market-not-showing-all-installed-apps.html</id>
    <published>2011-10-08T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/android-market-not-showing-all-installed-apps"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may have read a couple of days ago, I had &lt;a href="/blog/2011/09/29/android-market-3-1-3-and-3-1-5-crash-with-force-stop-error-on-htc-inspire4gdesirehd-with-cyanogenmod-7-1-0-rc1.html"&gt;a lot of issues with the market&lt;/a&gt; when I installed Cyanogenmod7.1.0-RC1 on my HTC Inspire 4G. But thankfully, I solved that and I thought that was it.&lt;/p&gt;

&lt;p&gt;In the last few days though, I noticed that the apps weren‚Äôt updating as often as I was used to.
So I went to check my apps on the market and, to my surprise, only 2 apps where showing there. 2 apps from a list of 50+ apps that I have currently installed.&lt;/p&gt;

&lt;p&gt;The first thought that popped into my mind was ‚ÄúI messed it up‚Äù. And of course that was going to be my first thought after all the issues I went through.&lt;/p&gt;

&lt;p&gt;But no need to worry!
If you are having this issue, just‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/android-market-not-showing-all-installed-apps"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;As you may have read a couple of days ago, I had &lt;a href="/blog/2011/09/29/android-market-3-1-3-and-3-1-5-crash-with-force-stop-error-on-htc-inspire4gdesirehd-with-cyanogenmod-7-1-0-rc1.html"&gt;a lot of issues with the market&lt;/a&gt; when I installed Cyanogenmod7.1.0-RC1 on my HTC Inspire 4G. But thankfully, I solved that and I thought that was it.&lt;/p&gt;

&lt;p&gt;In the last few days though, I noticed that the apps weren&amp;rsquo;t updating as often as I was used to.
So I went to check my apps on the market and, to my surprise, only 2 apps where showing there. 2 apps from a list of 50+ apps that I have currently installed.&lt;/p&gt;

&lt;p&gt;The first thought that popped into my mind was &amp;ldquo;I messed it up&amp;rdquo;. And of course that was going to be my first thought after all the issues I went through.&lt;/p&gt;

&lt;p&gt;But no need to worry!
If you are having this issue, just follow these steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Look for the Market in Settings -&amp;gt; Applications -&amp;gt; Manage Applications.&lt;/li&gt;
&lt;li&gt;Click the &amp;lsquo;Uninstall updates&amp;rsquo; button.&lt;/li&gt;
&lt;li&gt;Open the Market (This is the old market. You should see all your apps on the &amp;lsquo;My Apps&amp;rsquo; tab).&lt;/li&gt;
&lt;li&gt;Install all your apps corresponding updates from the old market.&lt;/li&gt;
&lt;li&gt;Close the market and wait for a minute or two (The market will auto update).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, open the updated Market, and you should see all your apps again in the &amp;lsquo;My Apps&amp;rsquo; section.
This is obviously another bug with the market. I&amp;rsquo;m not sure if it only happens on custom ROMs though.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1 and the assert_select_jquery</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/08/rails-3-1-and-the-assert-select-jquery.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/08/rails-3-1-and-the-assert-select-jquery.html</id>
    <published>2011-10-07T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:17-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/rails-3-1-and-the-assert_select_jquery"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 8, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Diving a little into rails 3.1, I‚Äôm really liking some of the stuff I‚Äôve found, like the easy Ajax integration for the views and the functional tests to ensure that the behavior of the controllers is the expected one.&lt;/p&gt;

&lt;p&gt;There is one particular method, &lt;code&gt;assert_select_jquery&lt;/code&gt;, that I just don‚Äôt understand why it works how it works.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say you have an Ajax request whose view to return is &lt;code&gt;content.js.erb&lt;/code&gt; like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:not(:visible)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blind&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;%= render @content %&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, the page renders as expected, but, as you can see, this code is not too great. We‚Äôll talk about that later.
So, say you‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/rails-3-1-and-the-assert_select_jquery"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 8, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Diving a little into rails 3.1, I&amp;rsquo;m really liking some of the stuff I&amp;rsquo;ve found, like the easy Ajax integration for the views and the functional tests to ensure that the behavior of the controllers is the expected one.&lt;/p&gt;

&lt;p&gt;There is one particular method, &lt;code&gt;assert_select_jquery&lt;/code&gt;, that I just don&amp;rsquo;t understand why it works how it works.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s say you have an Ajax request whose view to return is &lt;code&gt;content.js.erb&lt;/code&gt; like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:not(:visible)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blind&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;%= render @content %&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, the page renders as expected, but, as you can see, this code is not too great. We&amp;rsquo;ll talk about that later.
So, say you also have a test, in the corresponding controller test file, that looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="s1"&gt;'the container html is replaced when rendered'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;assert_select_jquery&lt;/span&gt; &lt;span class="ss"&gt;:html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'#container'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You run the tests with &lt;code&gt;rake test:functionals&lt;/code&gt; and&amp;hellip; Awesome! The test passes.
Now, you improve the JavaScript a little and you write this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;is&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:not(:visible)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blind&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;%= render @content %&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once again, the page renders as expected. But the test fails!!! :(&lt;/p&gt;

&lt;p&gt;Why? I don&amp;rsquo;t really know. It seems like the &lt;code&gt;assert_select_jquery :html, &amp;#39;#container&amp;#39;&lt;/code&gt; can only match &lt;code&gt;$(&amp;#39;#container&amp;#39;).html(&amp;quot;whatever&amp;quot;)&lt;/code&gt; and not &lt;code&gt;container.html(&amp;#39;whatever&amp;#39;)&lt;/code&gt;. Notice that they only match the double quotes inside the &lt;code&gt;html&lt;/code&gt; method and not the single quotes. That&amp;rsquo;s even worse.&lt;/p&gt;

&lt;p&gt;Are they enforcing bad JavaScript code? Bad jQuery practices?
I&amp;rsquo;m sure there has to be a better way to test it out, but I&amp;rsquo;m yet to find it out.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Updating and/or uninstalling all installed gems</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/08/updating-all-installed-gems.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/08/updating-all-installed-gems.html</id>
    <published>2011-10-07T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:18-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/updating-all-installed-gems"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 8, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I like to have an &lt;a href="http://beginrescueend.com/gemsets/"&gt;rvm gemset&lt;/a&gt; (see &lt;a href="http://bluediapente.com/posts/2011/09/29/are-you-using-rvm-correctly"&gt;more about rvm&lt;/a&gt;) with the latest versions of all gems and I usually use this as my sandbox for testing out the latest features and issues of the gems. To update one gem to it‚Äôs latest stable version, you just have to run this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem update GEMNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The only problem is that for updating every gem you have installed, you have to remember each and every gem you have installed to pass it to the command‚Ä¶ Nah, I‚Äôm just kidding. Just run the following command, and you‚Äôll be fine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem update &lt;span class="sb"&gt;`&lt;/span&gt;gem list | &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; 1&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To uninstall all installed gems, it‚Äôs the same command with &lt;code&gt;uninstall&lt;/code&gt; instead of &lt;code&gt;update&lt;/code&gt;, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem‚Ä¶&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/updating-all-installed-gems"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 8, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I like to have an &lt;a href="http://beginrescueend.com/gemsets/"&gt;rvm gemset&lt;/a&gt; (see &lt;a href="http://bluediapente.com/posts/2011/09/29/are-you-using-rvm-correctly"&gt;more about rvm&lt;/a&gt;) with the latest versions of all gems and I usually use this as my sandbox for testing out the latest features and issues of the gems. To update one gem to it&amp;rsquo;s latest stable version, you just have to run this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem update GEMNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The only problem is that for updating every gem you have installed, you have to remember each and every gem you have installed to pass it to the command&amp;hellip; Nah, I&amp;rsquo;m just kidding. Just run the following command, and you&amp;rsquo;ll be fine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem update &lt;span class="sb"&gt;`&lt;/span&gt;gem list | &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; 1&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To uninstall all installed gems, it&amp;rsquo;s the same command with &lt;code&gt;uninstall&lt;/code&gt; instead of &lt;code&gt;update&lt;/code&gt;, like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;gem uninstall &lt;span class="sb"&gt;`&lt;/span&gt;gem list | &lt;span class="nb"&gt;cut&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; 1&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Change cursor highlight color on Vim</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/07/change-cursor-highlight-color-on-vim.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/07/change-cursor-highlight-color-on-vim.html</id>
    <published>2011-10-06T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:16-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/change-cursor-highlight-color-on-vim"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 7, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One of the first things I do when setting up my Vim on Ubuntu is download &lt;a href="http://github.com/akitaonrails/vimfiles"&gt;akitaonrails‚Äô vimfiles&lt;/a&gt;, which has lots of cool stuff bundled. I like the dark theme that is set up (dark gray background and white foreground, and helps my sight issues).&lt;/p&gt;

&lt;p&gt;Normally the blinking cursor is white background and black foreground. I don‚Äôt really know exactly when or how it happened (maybe when I installed CommandT), but I lost the blinking cursor‚Ä¶ I mean, I didn‚Äôt lose it.. It was there‚Ä¶ But it was invisible. And that annoys me ‚Äòcause I can‚Äôt tell where I‚Äôm at in the file.&lt;/p&gt;

&lt;p&gt;Thankfully, it‚Äôs an easy recovery. Just run what I &lt;a href="http://vim.wikia.com/wiki/Configuring_the_cursor"&gt;found&lt;/a&gt;  in Vim‚Äôs command mode:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight viml"&gt;&lt;code&gt;&lt;span class="nb"&gt;highlight&lt;/span&gt; Cursor guifg&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/change-cursor-highlight-color-on-vim"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 7, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;One of the first things I do when setting up my Vim on Ubuntu is download &lt;a href="http://github.com/akitaonrails/vimfiles"&gt;akitaonrails&amp;rsquo; vimfiles&lt;/a&gt;, which has lots of cool stuff bundled. I like the dark theme that is set up (dark gray background and white foreground, and helps my sight issues).&lt;/p&gt;

&lt;p&gt;Normally the blinking cursor is white background and black foreground. I don&amp;rsquo;t really know exactly when or how it happened (maybe when I installed CommandT), but I lost the blinking cursor&amp;hellip; I mean, I didn&amp;rsquo;t lose it.. It was there&amp;hellip; But it was invisible. And that annoys me &amp;lsquo;cause I can&amp;rsquo;t tell where I&amp;rsquo;m at in the file.&lt;/p&gt;

&lt;p&gt;Thankfully, it&amp;rsquo;s an easy recovery. Just run what I &lt;a href="http://vim.wikia.com/wiki/Configuring_the_cursor"&gt;found&lt;/a&gt;  in Vim&amp;rsquo;s command mode:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight viml"&gt;&lt;code&gt;&lt;span class="nb"&gt;highlight&lt;/span&gt; Cursor guifg&lt;span class="p"&gt;=&lt;/span&gt;black guibg&lt;span class="p"&gt;=&lt;/span&gt;white
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh! There it is! Now I can continue working. :)&lt;/p&gt;

&lt;p&gt;If you need anything else, I recommend the &lt;a href="http://vim.wikia.com/wiki/Vim_Tips_Wiki"&gt;Vim Tips Wiki&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery Nivo Slider and images of different size</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/10/01/jquery-nivo-slider-and-images-of-different-size.html"/>
    <id>https://www.gonzedge.com/blog/2011/10/01/jquery-nivo-slider-and-images-of-different-size.html</id>
    <published>2011-09-30T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/jquery-nivo-slider-and-images-of-different-size"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 1, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;A couple of days ago, I needed to add a slideshow to a project that I‚Äôm currently working on.&lt;/p&gt;

&lt;p&gt;When I googled ‚ÄújQuery Slider‚Äù, I found lots and lots of options. I checked some of them out one by one, and one by one I discarded them, because it lacked a feature I wanted or, if it had the feature, it lacked cool animations.&lt;/p&gt;

&lt;p&gt;I finally settled up for the &lt;a href="http://nivo.dev7studios.com/"&gt;Nivo Slider&lt;/a&gt;. But it had an issue. It used the images as the current background for the slider, which then meant that the images had to be the same size.&lt;/p&gt;

&lt;p&gt;That might be fine if you have someone that crops the images to the required size‚Ä¶ But what if you‚Äôre doing a project where it‚Äôs the end users that are going‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/10/jquery-nivo-slider-and-images-of-different-size"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on October 1, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;A couple of days ago, I needed to add a slideshow to a project that I&amp;rsquo;m currently working on.&lt;/p&gt;

&lt;p&gt;When I googled &amp;ldquo;jQuery Slider&amp;rdquo;, I found lots and lots of options. I checked some of them out one by one, and one by one I discarded them, because it lacked a feature I wanted or, if it had the feature, it lacked cool animations.&lt;/p&gt;

&lt;p&gt;I finally settled up for the &lt;a href="http://nivo.dev7studios.com/"&gt;Nivo Slider&lt;/a&gt;. But it had an issue. It used the images as the current background for the slider, which then meant that the images had to be the same size.&lt;/p&gt;

&lt;p&gt;That might be fine if you have someone that crops the images to the required size&amp;hellip; But what if you&amp;rsquo;re doing a project where it&amp;rsquo;s the end users that are going to be uploading these images? I might tell them to crop the image to the specific dimensions, but wouldn&amp;rsquo;t it be better if I just try to scale them?&lt;/p&gt;

&lt;p&gt;This was the feature I was looking for and, &lt;a href="http://nivo.dev7studios.com/support/"&gt;as seen on the FAQ&lt;/a&gt;, he doesn&amp;rsquo;t plan to include it.&lt;/p&gt;

&lt;p&gt;So yeah, I forked the &lt;a href="http://github.com/gilbitron/Nivo-Slider"&gt;Nivo Slider from GitHub&lt;/a&gt; and went ahead to add this feature, or at least part of it. I finished it up and made a pull request to see if it gets accepted by the original author. If it doesn&amp;rsquo;t get accepted, I&amp;rsquo;ll release it on my own later. This is the list of features I added, &lt;a href="https://github.com/gilbitron/Nivo-Slider/pull/221"&gt;as found on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Added the ability to handle images of different sizes (images scale).
Added the following boolean options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adaptImages&lt;/code&gt;. &lt;strong&gt;Default value:&lt;/strong&gt; &lt;code&gt;false&lt;/code&gt;. &lt;strong&gt;Description:&lt;/strong&gt; When set to &lt;code&gt;true&lt;/code&gt;, uses images instead of backgrounds and scales the images to the maximum dimension available.&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;useLargerImage&lt;/code&gt;.&lt;strong&gt;Default value:&lt;/strong&gt; &lt;code&gt;true&lt;/code&gt;. &lt;strong&gt;Description:&lt;/strong&gt; When set to &lt;code&gt;true&lt;/code&gt;, uses the larger image dimensions as the maximum dimension available. Otherwise, it uses the slider width as the maximum available.&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alignBottom&lt;/code&gt;.&lt;strong&gt;Default value:&lt;/strong&gt; &lt;code&gt;false&lt;/code&gt;. &lt;strong&gt;Description:&lt;/strong&gt; When set to &lt;code&gt;true&lt;/code&gt;, aligns the bottom right corner of the scaled images with the bottom right corner of the slider. Otherwise, the images are aligned to the top left of the slider.&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Meanwhile, you can get the latest code from &lt;a href="http://github.com/gonzedge/Nivo-Slider"&gt;my fork on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!
And don&amp;rsquo;t hesitate to contact me if you find a bug or any other kind of issue.
You can report it via GitHub, or just email me to &lt;a href="mailto:edgar@ramblinglabs.com"&gt;edgar@ramblinglabs.com&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The pull request didn&amp;rsquo;t come through, so the &lt;a href="/blog/2011/10/22/jquery-rambling-slider-has-been-released.html"&gt;jQuery Rambling Slider has been released!&lt;/a&gt;. You can also &lt;a href="http://github.com/gonzedge/rambling.slider"&gt;see it on GitHub&lt;/a&gt;. :D&lt;/p&gt;

&lt;hr&gt;
</content>
  </entry>
  <entry>
    <title>Android Market 3.1.3 and 3.1.5 crash with "Force stop" error on HTC Inspire4G/DesireHD with Cyanogenmod 7.1.0-RC1</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/09/29/android-market-3-1-3-and-3-1-5-crash-with-force-stop-error-on-htc-inspire4gdesirehd-with-cyanogenmod-7-1-0-rc1.html"/>
    <id>https://www.gonzedge.com/blog/2011/09/29/android-market-3-1-3-and-3-1-5-crash-with-force-stop-error-on-htc-inspire4gdesirehd-with-cyanogenmod-7-1-0-rc1.html</id>
    <published>2011-09-28T20:00:00-04:00</published>
    <updated>2018-02-20T17:31:08-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/android-market-3-1-3-and-3-1-5-crash-with-force-stop-error-on-htc-inspire4gdesirehd-with-cyanogenmod-7-1-0-rc1"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 29, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yesterday, I installed the Cyanogenmod 7.1.0-RC1 on my HTC Inspire 4G phone. It looks and works great, but since the minute I installed it, I started to have issues with the Android Market, specifically versions 3.1.3 and 3.1.2.&lt;/p&gt;

&lt;p&gt;So, I googled for a couple of hours and didn‚Äôt find anything until, finally, I stumbled into &lt;a href="http://forum.cyanogenmod.com/topic/14986-cm-612-how-i-fixed-my-market-app-install-issues/"&gt;this fix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ok, that‚Äôs fair enough. A little hardcore for the stuff I usually do, but fine. I didn‚Äôt like that it was the 2.2.7 version, but I guess that was ok if it fixed it. I tried to find a newer version of the market, but only found ‚Äò.apk‚Äô files, and I needed a zip.&lt;/p&gt;

&lt;p&gt;Well, so I rebooted into recovery mode, wiped out all my data and‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/android-market-3-1-3-and-3-1-5-crash-with-force-stop-error-on-htc-inspire4gdesirehd-with-cyanogenmod-7-1-0-rc1"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 29, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yesterday, I installed the Cyanogenmod 7.1.0-RC1 on my HTC Inspire 4G phone. It looks and works great, but since the minute I installed it, I started to have issues with the Android Market, specifically versions 3.1.3 and 3.1.2.&lt;/p&gt;

&lt;p&gt;So, I googled for a couple of hours and didn&amp;rsquo;t find anything until, finally, I stumbled into &lt;a href="http://forum.cyanogenmod.com/topic/14986-cm-612-how-i-fixed-my-market-app-install-issues/"&gt;this fix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ok, that&amp;rsquo;s fair enough. A little hardcore for the stuff I usually do, but fine. I didn&amp;rsquo;t like that it was the 2.2.7 version, but I guess that was ok if it fixed it. I tried to find a newer version of the market, but only found &amp;lsquo;.apk&amp;rsquo; files, and I needed a zip.&lt;/p&gt;

&lt;p&gt;Well, so I rebooted into recovery mode, wiped out all my data and the Dalvik Cache as well and tried to install the 2.2.7 market, but it threw a weird error&amp;hellip; With the &amp;ldquo;Amend scripting is no longer supported&amp;rdquo; message. Awesome, right? It said also that Edify scripting should be used.&lt;/p&gt;

&lt;p&gt;So I went to the browser on my phone and googled for an Android Market scripted in Edify, and&amp;hellip; luckily &lt;a href="http://forum.xda-developers.com/showthread.php?t=910929"&gt;found one&lt;/a&gt;! I downloaded it and, yet again, rebooted into recovery, wiped out all data and the Dalvik Cache and succesfully installed it :).&lt;/p&gt;

&lt;p&gt;But guess what?&amp;hellip; It automatically updated to 3.1.5&amp;hellip; and was crashing again.
I was ready to resign to the idea of, once in a while, having to &amp;ldquo;Uninstall updates&amp;rdquo; for the Market app in Settings -&amp;gt; Applications-&amp;gt; Manage applications.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t even remember what I was googling when I found &lt;a href="http://www.reddit.com/r/Android/comments/jtwrj/for_those_who_have_the_market_force_closes/"&gt;this post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yeah, it&amp;rsquo;s as simple as that&amp;hellip; Go to Settings -&amp;gt; Language &amp;amp; keyboard -&amp;gt; Select language -&amp;gt; English (United States)&amp;hellip;
And that will fix it&amp;hellip;&lt;/p&gt;

&lt;p&gt;Smells like a bug to me, but what do I know? ;)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>git submodule and the libiconv-2.dll issue</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/09/27/git-submodule-and-the-libiconv2-dll-issue.html"/>
    <id>https://www.gonzedge.com/blog/2011/09/27/git-submodule-and-the-libiconv2-dll-issue.html</id>
    <published>2011-09-26T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:13-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/git-submodule-and-the-libiconv2-dll-issue"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 27, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yesterday, I made a fresh install of the latest msysGit (which is 1.7.6 as of right now).&lt;/p&gt;

&lt;p&gt;I usually set up my vim using the akitaonrails &lt;a href="http://github.com/akitaonrails/vimfiles"&gt;vimfiles&lt;/a&gt;. So last night I was trying to do as I usually do, clone the repository with &lt;code&gt;git clone git://github.com/akitaonrails/vimfiles&lt;/code&gt;, and then cd into the just cloned repository and run &lt;code&gt;git submodule update --init&lt;/code&gt; to get all the bundled plugins.&lt;/p&gt;

&lt;p&gt;This last command failed miserably with a &lt;code&gt;The program can't start because libiconv-2.dll is missing from your computer. Try reinstalling the program to fix this problem&lt;/code&gt; message. This didn‚Äôt happen to me with version 1.7.4 from msysGit, which I had installed before I formatted‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/git-submodule-and-the-libiconv2-dll-issue"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 27, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Yesterday, I made a fresh install of the latest msysGit (which is 1.7.6 as of right now).&lt;/p&gt;

&lt;p&gt;I usually set up my vim using the akitaonrails &lt;a href="http://github.com/akitaonrails/vimfiles"&gt;vimfiles&lt;/a&gt;. So last night I was trying to do as I usually do, clone the repository with &lt;code&gt;git clone git://github.com/akitaonrails/vimfiles&lt;/code&gt;, and then cd into the just cloned repository and run &lt;code&gt;git submodule update --init&lt;/code&gt; to get all the bundled plugins.&lt;/p&gt;

&lt;p&gt;This last command failed miserably with a &lt;code&gt;The program can&amp;#39;t start because libiconv-2.dll is missing from your computer. Try reinstalling the program to fix this problem&lt;/code&gt; message. This didn&amp;rsquo;t happen to me with version 1.7.4 from msysGit, which I had installed before I formatted my laptop&amp;rsquo;s drive.&lt;/p&gt;

&lt;p&gt;And I&amp;rsquo;m like &amp;ldquo;Okay. Let&amp;rsquo;s look it up and include it in the path&amp;rdquo;. I opened up &lt;a href="http://www.voidtools.com/"&gt;Search Everything&lt;/a&gt; and typed &amp;ldquo;libiconv-2&amp;rdquo; and it was located in the &lt;code&gt;Git/bin&lt;/code&gt; folder which is not included in the path.&lt;/p&gt;

&lt;p&gt;I couldn&amp;rsquo;t just include it, so I had to copy the dll to the &lt;code&gt;Git/libexec/git-core&lt;/code&gt; folder in order to make it work.&lt;/p&gt;

&lt;p&gt;I emailed the msysGit mailing list to report the bug.
I&amp;rsquo;ll keep you updated if I know anything else, but for now just copy the dll to the &lt;code&gt;Git/libexec/git-core&lt;/code&gt; folder and you&amp;rsquo;ll be fine.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>jQuery fadeIn and fadeOut: IE bug workaround</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/09/26/jquery-fadein-and-fadeout-ie-bug-workaround.html"/>
    <id>https://www.gonzedge.com/blog/2011/09/26/jquery-fadein-and-fadeout-ie-bug-workaround.html</id>
    <published>2011-09-25T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:12-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/jquery-fadein-and-fadeout-ie-bug-workaround"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 26, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I was trying to do some cool effect on a project I‚Äôm working on by fading in the front page.
The trick looks really nice and it‚Äôs easy to implement.&lt;/p&gt;

&lt;p&gt;Just make the body hidden like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"display: none;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in the JavaScript file do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fadeIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checked it out on Firefox and Chrome. It works perfectly, so smooth.
And that‚Äôs it!‚Ä¶ Or so I thought‚Ä¶&lt;/p&gt;

&lt;p&gt;Checked it out in IE 8 or less and, oh surprise, it doesn‚Äôt work. It fades in the background, but the rest of the page is shown with no transparency or fading in at all.&lt;/p&gt;

&lt;p&gt;But why??
Because some elements have a &lt;code&gt;position: relative;&lt;/code&gt; or &lt;code&gt;position: absolute;&lt;/code&gt; in their‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/jquery-fadein-and-fadeout-ie-bug-workaround"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 26, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I was trying to do some cool effect on a project I&amp;rsquo;m working on by fading in the front page.
The trick looks really nice and it&amp;rsquo;s easy to implement.&lt;/p&gt;

&lt;p&gt;Just make the body hidden like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"display: none;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And in the JavaScript file do this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fadeIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Checked it out on Firefox and Chrome. It works perfectly, so smooth.
And that&amp;rsquo;s it!&amp;hellip; Or so I thought&amp;hellip;&lt;/p&gt;

&lt;p&gt;Checked it out in IE 8 or less and, oh surprise, it doesn&amp;rsquo;t work. It fades in the background, but the rest of the page is shown with no transparency or fading in at all.&lt;/p&gt;

&lt;p&gt;But why??
Because some elements have a &lt;code&gt;position: relative;&lt;/code&gt; or &lt;code&gt;position: absolute;&lt;/code&gt; in their styling&amp;hellip;&lt;/p&gt;

&lt;p&gt;Huh? But what does position has to do with opacity anyway?
I don&amp;rsquo;t really know.&lt;/p&gt;

&lt;p&gt;The solution is somewhat simple though, but not too attractive if you have a full project already built up. Just remove those &lt;code&gt;position: relative;&lt;/code&gt; and &lt;code&gt;position: absolute;&lt;/code&gt; and try to rework your main layout the classic way: float, margin and padding.&lt;/p&gt;

&lt;p&gt;And, after an hour or so of removing the CSS position attribute and reworking the layout of the page, it all works fine.
Even in IE7!!! :D&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JetBrains and the IdeaVIM plugin</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/09/20/jetbrains-and-the-ideavim-plugin.html"/>
    <id>https://www.gonzedge.com/blog/2011/09/20/jetbrains-and-the-ideavim-plugin.html</id>
    <published>2011-09-19T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:07-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/jetbrains-and-the-ideavim-plugin"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 20, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Last night I installed the latest version of RubyMine (just to have it as a backup plan though).
I then tried to install the IdeaVIM plugin which, for older versions, had worked fine for me.&lt;/p&gt;

&lt;p&gt;But guess what? I downloaded and installed the plugin, restarted the IDE and it didn‚Äôt work. I thought that was odd since it usually worked after restarting. Wondering if it was an issue with RubyMine, I tried with WebStorm and PhpStorm having the same result.&lt;/p&gt;

&lt;p&gt;On my desperation, I went to JetBrains‚Äô &lt;a href="http://youtrack.jetbrains.com"&gt;YouTrack&lt;/a&gt; to report a &lt;a href="http://youtrack.jetbrains.net/issue/VIM-137?query=by%3A+me"&gt;bug&lt;/a&gt;. And tonight, out of nowhere, I remembered that there was an option in the Tools menu‚Ä¶&lt;/p&gt;

&lt;p&gt;There it was‚Ä¶ Tools -&amp;gt; VIM Emulator‚Ä¶ unchecked‚Ä¶&lt;/p&gt;

&lt;p&gt;God,‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/jetbrains-and-the-ideavim-plugin"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 20, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Last night I installed the latest version of RubyMine (just to have it as a backup plan though).
I then tried to install the IdeaVIM plugin which, for older versions, had worked fine for me.&lt;/p&gt;

&lt;p&gt;But guess what? I downloaded and installed the plugin, restarted the IDE and it didn&amp;rsquo;t work. I thought that was odd since it usually worked after restarting. Wondering if it was an issue with RubyMine, I tried with WebStorm and PhpStorm having the same result.&lt;/p&gt;

&lt;p&gt;On my desperation, I went to JetBrains&amp;rsquo; &lt;a href="http://youtrack.jetbrains.com"&gt;YouTrack&lt;/a&gt; to report a &lt;a href="http://youtrack.jetbrains.net/issue/VIM-137?query=by%3A+me"&gt;bug&lt;/a&gt;. And tonight, out of nowhere, I remembered that there was an option in the Tools menu&amp;hellip;&lt;/p&gt;

&lt;p&gt;There it was&amp;hellip; Tools -&amp;gt; VIM Emulator&amp;hellip; unchecked&amp;hellip;&lt;/p&gt;

&lt;p&gt;God, that was stupid!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1 "rake db:migrate" fails with "stack level too deep" error</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/09/20/rails-3-1-rake-dbmigrate-fails-with-stack-level-too-deep-error.html"/>
    <id>https://www.gonzedge.com/blog/2011/09/20/rails-3-1-rake-dbmigrate-fails-with-stack-level-too-deep-error.html</id>
    <published>2011-09-19T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:11-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/rails-3-1-rake-dbmigrate-fails-with-stack-level-too-deep-error"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 20, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I was trying to run the following command on a new &lt;strong&gt;rails 3.1&lt;/strong&gt; app and it was failing‚Ä¶ badly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rake db:migrate

/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:4: warning: already initialized constant MAJOR
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:5: warning: already initialized constant MINOR
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:6: warning: already initialized constant BUILD
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:3: warning: already initialized constant NUMBERS
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version‚Ä¶&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/rails-3-1-rake-dbmigrate-fails-with-stack-level-too-deep-error"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 20, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I was trying to run the following command on a new &lt;strong&gt;rails 3.1&lt;/strong&gt; app and it was failing&amp;hellip; badly.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rake db:migrate

/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:4: warning: already initialized constant MAJOR
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:5: warning: already initialized constant MINOR
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:6: warning: already initialized constant BUILD
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:3: warning: already initialized constant NUMBERS
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/version.rb:9: warning: already initialized constant VERSION
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake.rb:26: warning: already initialized constant RAKEVERSION
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/early_time.rb:17: warning: already initialized constant EARLY
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/alt_system.rb:32: warning: already initialized constant WINDOWS
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/application.rb:28: warning: already initialized constant DEFAULT_RAKEFILES
WARNING: Possible conflict with Rake extension: String#ext already exists
WARNING: Possible conflict with Rake extension: String#pathmap already exists
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/task_arguments.rb:73: warning: already initialized constant EMPTY_TASK_ARGS
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/invocation_chain.rb:49: warning: already initialized constant EMPTY
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_utils.rb:10: warning: already initialized constant RUBY
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_utils.rb:84: warning: already initialized constant LN_SUPPORTED
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/dsl_definition.rb:143: warning: already initialized constant Commands
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_list.rb:44: warning: already initialized constant ARRAY_METHODS
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_list.rb:47: warning: already initialized constant MUST_DEFINE
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_list.rb:51: warning: already initialized constant MUST_NOT_DEFINE
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_list.rb:55: warning: already initialized constant SPECIAL_RETURN
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_list.rb:61: warning: already initialized constant DELEGATING_METHODS
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_list.rb:364: warning: already initialized constant DEFAULT_IGNORE_PATTERNS
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake/file_list.rb:370: warning: already initialized constant DEFAULT_IGNORE_PROCS
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake.rb:64: warning: already initialized constant FileList
/home/edgar/.rvm/gems/ruby-1.9.2-p290/gems/rake-0.9.2/lib/rake.rb:65: warning: already initialized constant RakeFileUtils
rake aborted!
stack level too deep
/home/edgar/.rvm/gems/ruby-1.9.2-p290@global/gems/rake-0.9.2/lib/rake/rake
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Stack level too deep? Seriously?!
This error seems to be familiar for the &lt;strong&gt;rails 3.0.7&lt;/strong&gt; guys as well (as I googled).&lt;/p&gt;

&lt;p&gt;Thankfully the fix is easy. Just run these two commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rake db:migrate
bundle &lt;span class="nb"&gt;exec &lt;/span&gt;bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And you&amp;rsquo;ll be fine.
Still, I have yet to figure out why I had to run those commands&amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails 3.1 "rails server" error Could not find a JavaScript runtime</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/09/19/rails-3-1-rails-server-throws-an-error-could-not-find-a-javascript-runtime.html"/>
    <id>https://www.gonzedge.com/blog/2011/09/19/rails-3-1-rails-server-throws-an-error-could-not-find-a-javascript-runtime.html</id>
    <published>2011-09-18T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:06-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/rails-3-1-rails-server-throws-an-error-could-not-find-a-javascript-runtime"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 19, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I upgraded to rails 3.1.0 and created a new ‚Äòtest_app‚Äô.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails new test_app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Got into the directory. Everything was fine, until I tried to run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It threw a weird error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;Could not find a JavaScript runtime.
See https://github.com/sstephenson/execjs &lt;span class="k"&gt;for &lt;/span&gt;a list of available runtimes.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That‚Äôs kinda weird. What does a rails app have to do with any JavaScript runtime? I guess it‚Äôs support for something that I still don‚Äôt know anything about.&lt;/p&gt;

&lt;p&gt;I googled that and found a &lt;a href="http://stackoverflow.com/questions/6282307/rails-3-1-execjs-and-could-not-find-a-javascript-runtime"&gt;stackoverflow question&lt;/a&gt;. So, two solutions for the issue: either*** install nodejs*** or &lt;strong&gt;&lt;em&gt;include ‚Äúgem ‚Äòexecjs‚Äô‚Äù and ‚Äúgem ‚Äòtherubyracer‚Äô‚Äù&lt;/em&gt;&lt;/strong&gt; in the &lt;strong&gt;Gemfile&lt;/strong&gt; and run &lt;em&gt;bundle install.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Pick‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/rails-3-1-rails-server-throws-an-error-could-not-find-a-javascript-runtime"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 19, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;I upgraded to rails 3.1.0 and created a new &amp;lsquo;test_app&amp;rsquo;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails new test_app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Got into the directory. Everything was fine, until I tried to run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;rails server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It threw a weird error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;Could not find a JavaScript runtime.
See https://github.com/sstephenson/execjs &lt;span class="k"&gt;for &lt;/span&gt;a list of available runtimes.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s kinda weird. What does a rails app have to do with any JavaScript runtime? I guess it&amp;rsquo;s support for something that I still don&amp;rsquo;t know anything about.&lt;/p&gt;

&lt;p&gt;I googled that and found a &lt;a href="http://stackoverflow.com/questions/6282307/rails-3-1-execjs-and-could-not-find-a-javascript-runtime"&gt;stackoverflow question&lt;/a&gt;. So, two solutions for the issue: either*** install nodejs*** or &lt;strong&gt;&lt;em&gt;include &amp;ldquo;gem &amp;lsquo;execjs&amp;rsquo;&amp;rdquo; and &amp;ldquo;gem &amp;lsquo;therubyracer&amp;rsquo;&amp;rdquo;&lt;/em&gt;&lt;/strong&gt; in the &lt;strong&gt;Gemfile&lt;/strong&gt; and run &lt;em&gt;bundle install.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Pick your favorite one and continue to do awesome apps with rails!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>RubyMine vs. Vim: my point of view</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/09/18/rubymine-vs-vim.html"/>
    <id>https://www.gonzedge.com/blog/2011/09/18/rubymine-vs-vim.html</id>
    <published>2011-09-17T20:00:00-04:00</published>
    <updated>2021-10-15T11:19:53-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/rubymine-vs-vim"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 18, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;So, I tweeted a question earlier today about what editor is preferred by the rubyists and, although I didn‚Äôt get many answers, it,¬†combined with a recent discussion I had about RubyMine vs. Vim later, helped me clear my reasoning a bit.&lt;/p&gt;

&lt;p&gt;By my reading of &lt;a href="http://pragprog.com/book/rails4/agile-web-development-with-rails"&gt;Agile Web Development With Rails&lt;/a&gt; and some people I follow on twitter, it seems that all the cool geeks use Vim (or TextMate or Emacs) for Ruby and Ruby on Rails programming instead of any IDE.&lt;/p&gt;

&lt;p&gt;I once googled to find out that vim was way complicated to set up. That same time, I found &lt;a href="http://github.com/akitaonrails/vimfiles"&gt;akitaonrails vimfiles on github&lt;/a&gt;. Fairly easy to set up if you just follow the instructions. But today I realized that there‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/09/rubymine-vs-vim"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on September 18, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;So, I tweeted a question earlier today about what editor is preferred by the rubyists and, although I didn&amp;rsquo;t get many answers, it,¬†combined with a recent discussion I had about RubyMine vs. Vim later, helped me clear my reasoning a bit.&lt;/p&gt;

&lt;p&gt;By my reading of &lt;a href="http://pragprog.com/book/rails4/agile-web-development-with-rails"&gt;Agile Web Development With Rails&lt;/a&gt; and some people I follow on twitter, it seems that all the cool geeks use Vim (or TextMate or Emacs) for Ruby and Ruby on Rails programming instead of any IDE.&lt;/p&gt;

&lt;p&gt;I once googled to find out that vim was way complicated to set up. That same time, I found &lt;a href="http://github.com/akitaonrails/vimfiles"&gt;akitaonrails vimfiles on github&lt;/a&gt;. Fairly easy to set up if you just follow the instructions. But today I realized that there was this one thing that was failing for me: the &lt;a href="https://wincent.com/products/command-t"&gt;Command-T extension&lt;/a&gt;. It was due to conflicts between the ruby version I am currently¬†using (1.9.2) and the ruby version that comes bundled with Vim on Ubuntu (1.8.2).&lt;/p&gt;

&lt;p&gt;Finally, I was decided to go with Vim completely. But after that, I had a discussion that made me consider about the advantages and disadvantages of both Vim and an IDE (RubyMine for this matter). Vim is lightweight, lightning fast, has all the cool keystrokes and gets very powerful when you install the appropriate plugins. But RubyMine is superior in refactoring support and also has the IdeaVIM plugin that, although buggy some times, is getting better with time and provides a sort of known environment for us vimmers.&lt;/p&gt;

&lt;p&gt;So, that&amp;rsquo;s it. I&amp;rsquo;ll use Vim for my regular file editing and when I need to do a big refactoring, I&amp;rsquo;ll open up RubyMine.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Showing git and mercurial repository information in PowerShell</title>
    <link rel="alternate" href="https://www.gonzedge.com/blog/2011/06/09/showing-git-and-mercurial-repository-information-in-powershell.html"/>
    <id>https://www.gonzedge.com/blog/2011/06/09/showing-git-and-mercurial-repository-information-in-powershell.html</id>
    <published>2011-06-08T20:00:00-04:00</published>
    <updated>2016-01-14T23:53:04-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <summary type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/06/showing-git-and-mercurial-repository-information-in-powershell"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on June 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;A while ago, I started getting a little annoyed when pushing my changes. It wasn‚Äôt until *then *that I realized that I forgot to add a yet untracked file to the repository or that I was in the wrong branch.&lt;/p&gt;

&lt;p&gt;I made a quick Google search and found that I wasn‚Äôt the only one with this problem, and that there are some pretty cool solutions out there.&lt;/p&gt;

&lt;p&gt;Since I‚Äôm currently developing in Windows, I found &lt;a href="https://github.com/dahlbyk/posh-git"&gt;posh-git&lt;/a&gt; and &lt;a href="https://github.com/JeremySkinner/posh-hg"&gt;posh-hg&lt;/a&gt; to be the more adequate ones.&lt;/p&gt;

&lt;p&gt;It‚Äôs really easy. Just download them from &lt;a href="https://github.com/dahlbyk/posh-git/zipball/master"&gt;here &lt;/a&gt;and &lt;a href="https://github.com/JeremySkinner/posh-hg/zipball/master"&gt;here&lt;/a&gt; (or just go to links above and look for Downloads).&lt;/p&gt;

&lt;p&gt;Both posh-git and posh-hg provide a quick inline summary with the current branch name and the number of‚Ä¶&lt;/p&gt;...</summary>
    <content type="html">&lt;hr&gt;

&lt;p&gt;&lt;em&gt;This post was &lt;a href="http://www.ramblinglabs.com/blog/2011/06/showing-git-and-mercurial-repository-information-in-powershell"&gt;originally published in the Rambling Labs Blog&lt;/a&gt; on June 9, 2011.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;A while ago, I started getting a little annoyed when pushing my changes. It wasn&amp;rsquo;t until *then *that I realized that I forgot to add a yet untracked file to the repository or that I was in the wrong branch.&lt;/p&gt;

&lt;p&gt;I made a quick Google search and found that I wasn&amp;rsquo;t the only one with this problem, and that there are some pretty cool solutions out there.&lt;/p&gt;

&lt;p&gt;Since I&amp;rsquo;m currently developing in Windows, I found &lt;a href="https://github.com/dahlbyk/posh-git"&gt;posh-git&lt;/a&gt; and &lt;a href="https://github.com/JeremySkinner/posh-hg"&gt;posh-hg&lt;/a&gt; to be the more adequate ones.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s really easy. Just download them from &lt;a href="https://github.com/dahlbyk/posh-git/zipball/master"&gt;here &lt;/a&gt;and &lt;a href="https://github.com/JeremySkinner/posh-hg/zipball/master"&gt;here&lt;/a&gt; (or just go to links above and look for Downloads).&lt;/p&gt;

&lt;p&gt;Both posh-git and posh-hg provide a quick inline summary with the current branch name and the number of untracked files, added files, removed files, modified files, etc.&lt;/p&gt;

&lt;p&gt;** **First of all, make sure you run &amp;ldquo;Set-ExecutionPolicy&amp;rdquo; followed by &amp;ldquo;Unrestricted&amp;rdquo; in the PowerShell console . This is because PowerShell doesn&amp;rsquo;t run scripts by default (you could read further about it &lt;a href="http://www.hanselman.com/blog/SigningPowerShellScripts.aspx"&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Also make sure that git and hg are in the PATH.&lt;/p&gt;

&lt;p&gt;To enable posh-git, just open a PowerShell console and run the &amp;ldquo;&lt;em&gt;install.ps1&lt;/em&gt;&amp;rdquo; file downloaded with the posh-git package. You should now find some files in the &amp;ldquo;$HOME$\Documents\WindowsPowershell&amp;rdquo; folder ($HOME$ is usually the C:\Users\YourUserName).&lt;/p&gt;

&lt;p&gt;To enable posh-hg, copy the files to the just opened WindowsPowershell folder and open the profile.ps1 file to add the following line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;.&lt;/span&gt; ./profile.example.ps1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, restart PowerShell, go to a git or hg repository in your local machine with it, and you will get something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://img694.imageshack.us/img694/7643/poshgitsample.png" alt="posh-git-sample" /&gt;&lt;/p&gt;

&lt;p&gt;Isn&amp;rsquo;t that cool?&lt;/p&gt;
</content>
  </entry>
</feed>
